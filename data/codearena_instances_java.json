[
  {
    "repo": "google/guava",
    "pull_number": 6586,
    "instance_id": "google__guava_6586",
    "issue_numbers": [
      3304
    ],
    "base_commit": "01dcc2e6104e9bd0392cb19029edf2c581425b67",
    "patch": "diff --git a/android/guava/src/com/google/common/primitives/Longs.java b/android/guava/src/com/google/common/primitives/Longs.java\nindex 536fdd5fbfa2..ce6a6fa39485 100644\n--- a/android/guava/src/com/google/common/primitives/Longs.java\n+++ b/android/guava/src/com/google/common/primitives/Longs.java\n@@ -244,13 +244,15 @@ public static long constrainToRange(long value, long min, long max) {\n    *\n    * @param arrays zero or more {@code long} arrays\n    * @return a single array containing all the values from the source arrays, in order\n+   * @throws IllegalArgumentException if the total number of elements in {@code arrays} does not fit\n+   *     in an {@code int}\n    */\n   public static long[] concat(long[]... arrays) {\n-    int length = 0;\n+    long length = 0;\n     for (long[] array : arrays) {\n       length += array.length;\n     }\n-    long[] result = new long[length];\n+    long[] result = new long[checkNoOverflow(length)];\n     int pos = 0;\n     for (long[] array : arrays) {\n       System.arraycopy(array, 0, result, pos, array.length);\n@@ -259,6 +261,14 @@ public static long[] concat(long[]... arrays) {\n     return result;\n   }\n \n+  private static int checkNoOverflow(long result) {\n+    checkArgument(\n+        result == (int) result,\n+        \"the total number of elements (%s) in the arrays must fit in an int\",\n+        result);\n+    return (int) result;\n+  }\n+\n   /**\n    * Returns a big-endian representation of {@code value} in an 8-element byte array; equivalent to\n    * {@code ByteBuffer.allocate(8).putLong(value).array()}. For example, the input value {@code\ndiff --git a/guava/src/com/google/common/primitives/Longs.java b/guava/src/com/google/common/primitives/Longs.java\nindex 90ceb4f7c028..8369973cc789 100644\n--- a/guava/src/com/google/common/primitives/Longs.java\n+++ b/guava/src/com/google/common/primitives/Longs.java\n@@ -246,13 +246,15 @@ public static long constrainToRange(long value, long min, long max) {\n    *\n    * @param arrays zero or more {@code long} arrays\n    * @return a single array containing all the values from the source arrays, in order\n+   * @throws IllegalArgumentException if the total number of elements in {@code arrays} does not fit\n+   *     in an {@code int}\n    */\n   public static long[] concat(long[]... arrays) {\n-    int length = 0;\n+    long length = 0;\n     for (long[] array : arrays) {\n       length += array.length;\n     }\n-    long[] result = new long[length];\n+    long[] result = new long[checkNoOverflow(length)];\n     int pos = 0;\n     for (long[] array : arrays) {\n       System.arraycopy(array, 0, result, pos, array.length);\n@@ -261,6 +263,14 @@ public static long[] concat(long[]... arrays) {\n     return result;\n   }\n \n+  private static int checkNoOverflow(long result) {\n+    checkArgument(\n+        result == (int) result,\n+        \"the total number of elements (%s) in the arrays must fit in an int\",\n+        result);\n+    return (int) result;\n+  }\n+\n   /**\n    * Returns a big-endian representation of {@code value} in an 8-element byte array; equivalent to\n    * {@code ByteBuffer.allocate(8).putLong(value).array()}. For example, the input value {@code\n",
    "test_patch": "diff --git a/android/guava-tests/test/com/google/common/primitives/LongsTest.java b/android/guava-tests/test/com/google/common/primitives/LongsTest.java\nindex a911a0370aff..83363c41144c 100644\n--- a/android/guava-tests/test/com/google/common/primitives/LongsTest.java\n+++ b/android/guava-tests/test/com/google/common/primitives/LongsTest.java\n@@ -198,6 +198,37 @@ public void testConcat() {\n         .isEqualTo(new long[] {(long) 1, (long) 2, (long) 3, (long) 4});\n   }\n \n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_negative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 15;\n+    assertThat(dim1 * dim2).isLessThan(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_nonNegative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 16;\n+    assertThat(dim1 * dim2).isAtLeast(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  private static void testConcat_overflow(int arraysDim1, int arraysDim2) {\n+    assertThat((long) arraysDim1 * arraysDim2).isNotEqualTo((long) (arraysDim1 * arraysDim2));\n+\n+    long[][] arrays = new long[arraysDim1][];\n+    // it's shared to avoid using too much memory in tests\n+    long[] sharedArray = new long[arraysDim2];\n+    Arrays.fill(arrays, sharedArray);\n+\n+    try {\n+      Longs.concat(arrays);\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n+  }\n+\n   private static void assertByteArrayEquals(byte[] expected, byte[] actual) {\n     assertWithMessage(\n             \"Expected: \" + Arrays.toString(expected) + \", but got: \" + Arrays.toString(actual))\ndiff --git a/guava-tests/test/com/google/common/primitives/LongsTest.java b/guava-tests/test/com/google/common/primitives/LongsTest.java\nindex a911a0370aff..83363c41144c 100644\n--- a/guava-tests/test/com/google/common/primitives/LongsTest.java\n+++ b/guava-tests/test/com/google/common/primitives/LongsTest.java\n@@ -198,6 +198,37 @@ public void testConcat() {\n         .isEqualTo(new long[] {(long) 1, (long) 2, (long) 3, (long) 4});\n   }\n \n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_negative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 15;\n+    assertThat(dim1 * dim2).isLessThan(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_nonNegative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 16;\n+    assertThat(dim1 * dim2).isAtLeast(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  private static void testConcat_overflow(int arraysDim1, int arraysDim2) {\n+    assertThat((long) arraysDim1 * arraysDim2).isNotEqualTo((long) (arraysDim1 * arraysDim2));\n+\n+    long[][] arrays = new long[arraysDim1][];\n+    // it's shared to avoid using too much memory in tests\n+    long[] sharedArray = new long[arraysDim2];\n+    Arrays.fill(arrays, sharedArray);\n+\n+    try {\n+      Longs.concat(arrays);\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n+  }\n+\n   private static void assertByteArrayEquals(byte[] expected, byte[] actual) {\n     assertWithMessage(\n             \"Expected: \" + Arrays.toString(expected) + \", but got: \" + Arrays.toString(actual))\n",
    "problem_statement": "Unhandled overflow in the `concat()` method of per-type primitive utility classes\nThe `concat()` method in the per-type primitive utility classes throws unexpected `NegativeArraySizeException` or `ArrayIndexOutOfBoundsException` if the input arrays contain too many elements.\r\n\r\nAdded test cases to demonstrate both overflow cases. A possible fix is provided.\r\n\r\nIn this commit, only the module `guava` and only the utility class `Longs` are covered along with the unit tests.\r\n\r\nSee https://github.com/google/guava/issues/3303",
    "hints_text": "Changed `Longs.concat()` to throw `IllegalArgumentException` if the input arrays contain too many elements.\nChanged `Longs.concat()` to throw `IllegalArgumentException` if the input arrays contain too many elements.\n\nSee https://github.com/google/guava/issues/3303\n\nFixes #3304\n\nRELNOTES=n/a\n",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "com.google.common.collect.ForMapMultimapAsMapImplementsMapTest",
      "com.google.common.collect.IterablesTest",
      "com.google.common.collect.TreeMultimapNaturalTest",
      "com.google.common.collect.MutableClassToInstanceMapTest",
      "com.google.common.base.MoreObjectsTest",
      "com.google.common.collect.MapsCollectionTest",
      "com.google.common.collect.ImmutableSetMultimapTest",
      "com.google.common.primitives.DoublesTest",
      "com.google.common.util.concurrent.AbstractScheduledServiceTest",
      "com.google.common.io.CloserTest",
      "com.google.common.io.CharSourceTest",
      "com.google.common.io.BaseEncodingTest",
      "com.google.common.escape.ArrayBasedUnicodeEscaperTest",
      "com.google.common.collect.ArrayTableRowMapTest",
      "com.google.common.collect.TablesTransformValuesRowMapTest",
      "com.google.common.escape.ArrayBasedCharEscaperTest",
      "com.google.common.io.MoreFilesFileTraverserTest",
      "com.google.common.collect.ForwardingSortedSetMultimapTest",
      "com.google.common.util.concurrent.ForwardingListenableFutureTest",
      "com.google.common.util.concurrent.FutureCallbackTest",
      "com.google.common.eventbus.ReentrantEventsTest",
      "com.google.common.collect.SingletonImmutableMapWithUnhashableValueMapInterfaceTest",
      "com.google.common.base.ToStringHelperTest",
      "com.google.common.cache.ForwardingLoadingCacheTest",
      "com.google.common.collect.RangeTest",
      "com.google.common.collect.ImmutableMultisetFloodingTest",
      "com.google.common.collect.TreeBasedTableRowMapTest",
      "com.google.common.collect.ForwardingSortedMapTest",
      "com.google.common.base.DefaultsTest",
      "com.google.common.hash.AbstractByteHasherTest",
      "com.google.common.collect.MapsTest",
      "com.google.common.collect.MultisetsCollectionTest",
      "com.google.common.collect.MultimapsCollectionTest",
      "com.google.common.primitives.UnsignedIntegerTest",
      "com.google.common.collect.FilteredMapTest",
      "com.google.common.math.DoubleUtilsTest",
      "com.google.common.primitives.UnsignedLongsTest",
      "com.google.common.escape.ArrayBasedEscaperMapTest",
      "com.google.common.util.concurrent.GeneratedMonitorTest",
      "com.google.common.collect.ImmutableSortedSetTest",
      "com.google.common.collect.SubMapMultimapAsMapImplementsMapTest",
      "com.google.common.collect.TreeBasedTableRowMapInterfaceTest",
      "com.google.common.collect.DiscreteDomainTest",
      "com.google.common.collect.ContiguousSetTest$BuiltTests",
      "com.google.common.collect.MapsTransformValuesUnmodifiableIteratorTest",
      "com.google.common.primitives.ImmutableLongArrayTest",
      "com.google.common.collect.ConcurrentHashMultisetBasherTest",
      "com.google.common.collect.ImmutableSortedMapHeadMapMapInterfaceTest",
      "com.google.common.collect.TablesTransposeRowTest",
      "com.google.common.util.concurrent.WrappingExecutorServiceTest",
      "com.google.common.collect.EmptyImmutableTableTest",
      "com.google.common.collect.ConcurrentHashMultisetTest",
      "com.google.common.graph.ImmutableNetworkTest",
      "com.google.common.graph.ImmutableValueGraphTest",
      "com.google.common.hash.SipHashFunctionTest",
      "com.google.common.net.MediaTypeTest",
      "com.google.common.collect.ArrayTableTest",
      "com.google.common.collect.SetOperationsTest",
      "com.google.common.collect.Collections2FilterArrayListTest",
      "com.google.common.testing.ClassSanityTesterTest",
      "com.google.common.util.concurrent.RunnablesTest",
      "com.google.common.cache.LongAdderTest",
      "com.google.common.hash.Murmur3Hash32Test",
      "com.google.common.util.concurrent.ListenerCallQueueTest",
      "com.google.common.collect.UnmodifiableRowSortedTableRowTest",
      "com.google.common.collect.CompactHashSetTest",
      "com.google.common.testing.GcFinalizationTest",
      "com.google.common.collect.ArrayTableRowTest",
      "com.google.common.collect.ImmutableSetTest",
      "com.google.common.collect.RegularImmutableTableTest",
      "com.google.common.graph.NetworkMutationTest",
      "com.google.common.io.ByteSourceTest",
      "com.google.common.collect.TopKSelectorTest",
      "com.google.common.reflect.TypeTokenResolutionTest",
      "com.google.common.collect.MapMakerTest",
      "com.google.common.collect.SynchronizedTableTest",
      "com.google.common.collect.CompactHashMapTest",
      "com.google.common.graph.StandardImmutableDirectedGraphTest",
      "com.google.common.io.CountingInputStreamTest",
      "com.google.common.base.StopwatchTest",
      "com.google.common.collect.testing.OpenJdk6QueueTests",
      "com.google.common.collect.HashBasedTableColumnMapTest",
      "com.google.common.io.ByteStreamsTest",
      "com.google.common.util.concurrent.AtomicsTest",
      "com.google.common.util.concurrent.ForwardingExecutorServiceTest",
      "com.google.common.util.concurrent.FuturesTransformAsyncTest",
      "com.google.common.graph.StandardMutableUndirectedGraphTest",
      "com.google.common.io.CountingOutputStreamTest",
      "com.google.common.collect.testing.SafeTreeSetTest",
      "com.google.common.util.concurrent.InterruptibleMonitorTest",
      "com.google.common.base.EnumsTest",
      "com.google.common.base.AbstractIteratorTest",
      "com.google.common.primitives.FloatArrayAsListTest",
      "com.google.common.util.concurrent.FuturesGetCheckedTest",
      "com.google.common.collect.LinkedHashMultisetTest",
      "com.google.common.math.BigIntegerMathTest",
      "com.google.common.collect.ImmutableListCopyOfConcurrentlyModifiedInputTest",
      "com.google.common.math.QuantilesTest",
      "com.google.common.collect.SortedIterablesTest",
      "com.google.common.collect.ForwardingMapTest",
      "com.google.common.reflect.TypeResolverTest",
      "com.google.common.io.ResourcesTest",
      "com.google.common.math.LongMathTest",
      "com.google.common.util.concurrent.UntrustedInputFutureTest",
      "com.google.common.collect.FilteredSortedMapTest",
      "com.google.common.util.concurrent.FakeTimeLimiterTest",
      "com.google.common.testing.EquivalenceTesterTest",
      "com.google.common.hash.BloomFilterTest",
      "com.google.common.net.InetAddressesTest",
      "com.google.common.collect.MapsTransformValuesTest",
      "com.google.common.collect.MinMaxPriorityQueueTest",
      "com.google.common.collect.TreeRangeMapTest",
      "com.google.common.collect.ForwardingTableTest",
      "com.google.common.collect.TablesTransformValuesTest",
      "com.google.common.util.concurrent.ForwardingBlockingQueueTest",
      "com.google.common.util.concurrent.JdkFutureAdaptersTest",
      "com.google.common.collect.UnmodifiableRowSortedTableColumnMapTest",
      "com.google.common.collect.UnmodifiableTableColumnTest",
      "com.google.common.graph.EndpointPairTest",
      "com.google.common.cache.CacheReferencesTest",
      "com.google.common.util.concurrent.ExecutionSequencerTest",
      "com.google.common.cache.CacheEvictionTest",
      "com.google.common.util.concurrent.SupplementalMonitorTest",
      "com.google.common.reflect.InvokableTest",
      "com.google.common.primitives.UnsignedBytesTest",
      "com.google.common.collect.QueuesTest",
      "com.google.common.base.SuppliersTest",
      "com.google.common.eventbus.outside.BaseSubscriberFinderTest",
      "com.google.common.util.concurrent.InterruptibleTaskTest",
      "com.google.common.collect.SynchronizedNavigableMapTest",
      "com.google.common.io.CharSequenceReaderTest",
      "com.google.common.util.concurrent.testing.TestingExecutorsTest",
      "com.google.common.collect.HashMultimapTest",
      "com.google.common.collect.SingletonImmutableTableTest",
      "com.google.common.collect.HashBasedTableRowMapTest",
      "com.google.common.collect.ImmutableRangeMapTest",
      "com.google.common.collect.TableCollectionTest",
      "com.google.common.reflect.ClassPathTest",
      "com.google.common.reflect.ImmutableTypeToInstanceMapTest",
      "com.google.common.collect.CompactLinkedHashSetTest",
      "com.google.common.collect.MultimapsTransformValuesAsMapTest",
      "com.google.common.collect.ForwardingObjectTest",
      "com.google.common.collect.Collections2Test",
      "com.google.common.hash.FunnelsTest",
      "com.google.common.testing.TestLogHandlerTest",
      "com.google.common.collect.SetsFilterHashSetTest",
      "com.google.common.cache.PopulatedCachesTest",
      "com.google.common.testing.ArbitraryInstancesTest",
      "com.google.common.collect.testing.SafeTreeMapTest",
      "com.google.common.cache.CacheExpirationTest",
      "com.google.common.hash.HashingTest",
      "com.google.common.util.concurrent.AbstractListeningExecutorServiceTest",
      "com.google.common.collect.LinkedHashMultimapTest",
      "com.google.common.collect.ReserializedImmutableSortedMapMapInterfaceTest",
      "com.google.common.cache.LocalCacheMapComputeTest",
      "com.google.common.collect.ListsImplTest",
      "com.google.common.collect.ForwardingCollectionTest",
      "com.google.common.collect.ImmutableClassToInstanceMapTest",
      "com.google.common.collect.CountTest",
      "com.google.common.graph.GraphMutationTest",
      "com.google.common.collect.FluentIterableTest",
      "com.google.common.primitives.UnsignedLongTest",
      "com.google.common.collect.LinkedListMultimapTest",
      "com.google.common.graph.StandardImmutableUndirectedGraphTest",
      "com.google.common.collect.ForwardingQueueTest",
      "com.google.common.primitives.FloatsTest",
      "com.google.common.collect.TablesTransformValuesColumnMapTest",
      "com.google.common.graph.GraphEquivalenceTest",
      "com.google.common.collect.IteratorsTest",
      "com.google.common.collect.ForwardingSortedMapImplementsMapTest",
      "com.google.common.io.FilesCreateTempDirTest",
      "com.google.common.collect.CompactLinkedHashMapFloodingTest",
      "com.google.common.base.OptionalTest",
      "com.google.common.io.CharSinkTest",
      "com.google.common.primitives.CharArrayAsListTest",
      "com.google.common.testing.TearDownStackTest",
      "com.google.common.cache.CacheLoadingTest",
      "com.google.common.collect.ForwardingListMultimapTest",
      "com.google.common.cache.EmptyCachesTest",
      "com.google.common.collect.AbstractMapEntryTest",
      "com.google.common.escape.CharEscaperBuilderTest",
      "com.google.common.base.FunctionsTest",
      "com.google.common.reflect.TypesTest",
      "com.google.common.math.MathPreconditionsTest",
      "com.google.common.hash.AbstractNonStreamingHashFunctionTest",
      "com.google.common.io.FilesFileTraverserTest",
      "com.google.common.collect.InternersTest",
      "com.google.common.cache.LocalCacheTest",
      "com.google.common.escape.UnicodeEscaperTest",
      "com.google.common.reflect.ReflectionTest",
      "com.google.common.net.PercentEscaperTest",
      "com.google.common.util.concurrent.AggregateFutureStateFallbackAtomicHelperTest",
      "com.google.common.math.DoubleMathTest",
      "com.google.common.util.concurrent.ThreadFactoryBuilderTest",
      "com.google.common.util.concurrent.ForwardingFutureTest",
      "com.google.common.cache.CacheBuilderSpecTest",
      "com.google.common.collect.CompactLinkedHashMapTest",
      "com.google.common.reflect.ParameterTest",
      "com.google.common.io.CharStreamsTest",
      "com.google.common.collect.FauxveridesTest",
      "com.google.common.primitives.BooleansTest",
      "com.google.common.collect.ImmutableRangeSetTest",
      "com.google.common.collect.SimpleAbstractMultisetTest",
      "com.google.common.collect.UnmodifiableTableRowMapTest",
      "com.google.common.graph.ValueGraphTest",
      "com.google.common.util.concurrent.SimpleTimeLimiterTest",
      "com.google.common.hash.HashingInputStreamTest",
      "com.google.common.cache.CacheBuilderGwtTest",
      "com.google.common.collect.ForwardingNavigableMapTest",
      "com.google.common.collect.testing.MinimalSetTest",
      "com.google.common.util.concurrent.AtomicLongMapBasherTest",
      "com.google.common.testing.RelationshipTesterTest",
      "com.google.common.collect.UnmodifiableIteratorTest",
      "com.google.common.util.concurrent.RateLimiterTest",
      "com.google.common.collect.testing.OpenJdk6SetTests",
      "com.google.common.collect.HashingTest",
      "com.google.common.collect.TreeBasedTableColumnTest",
      "com.google.common.hash.MessageDigestHashFunctionTest",
      "com.google.common.collect.ImmutableMapFloodingTest",
      "com.google.common.cache.AbstractLoadingCacheTest",
      "com.google.common.collect.TreeBasedTableColumnMapTest",
      "com.google.common.base.StandardSystemPropertyTest",
      "com.google.common.reflect.AbstractInvocationHandlerTest",
      "com.google.common.collect.ComparisonChainTest",
      "com.google.common.base.ThrowablesTest",
      "com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest",
      "com.google.common.collect.ForwardingSetMultimapTest",
      "com.google.common.collect.SynchronizedMapTest",
      "com.google.common.collect.StreamsTest",
      "com.google.common.html.HtmlEscapersTest",
      "com.google.common.primitives.UnsignedIntsTest",
      "com.google.common.collect.CompactHashSetFloodingTest",
      "com.google.common.util.concurrent.ServiceTest",
      "com.google.common.graph.NetworkEquivalenceTest",
      "com.google.common.hash.Murmur3Hash128Test",
      "com.google.common.util.concurrent.AbstractFutureTest",
      "com.google.common.collect.ImmutableMultisetTest",
      "com.google.common.base.StringsTest",
      "com.google.common.collect.ForwardingSetTest",
      "com.google.common.hash.Fingerprint2011Test",
      "com.google.common.util.concurrent.UninterruptiblesTest",
      "com.google.common.collect.ImmutableBiMapTest",
      "com.google.common.eventbus.AsyncEventBusTest",
      "com.google.common.collect.ArrayTableColumnTest",
      "com.google.common.eventbus.outside.OutsideEventBusTest",
      "com.google.common.math.PairedStatsTest",
      "com.google.common.collect.ContiguousSetTest",
      "com.google.common.collect.ForwardingMultimapTest",
      "com.google.common.net.HostSpecifierTest",
      "com.google.common.util.concurrent.CallablesTest",
      "com.google.common.graph.StandardMutableDirectedNetworkTest",
      "com.google.common.util.concurrent.AtomicDoubleTest",
      "com.google.common.collect.testing.MapTestSuiteBuilderTests",
      "com.google.common.util.concurrent.ForwardingListeningExecutorServiceTest",
      "com.google.common.collect.ForwardingListTest",
      "com.google.common.math.StatsAccumulatorTest",
      "com.google.common.collect.testing.OpenJdk6Tests",
      "com.google.common.collect.NewCustomTableTest",
      "com.google.common.io.FileBackedOutputStreamTest",
      "com.google.common.collect.ImmutableSortedMultisetTest",
      "com.google.common.collect.UnmodifiableMultimapAsMapImplementsMapTest",
      "com.google.common.eventbus.SubscriberTest",
      "com.google.common.io.FileBackedOutputStreamAndroidIncompatibleTest",
      "com.google.common.collect.TreeMultimapExplicitTest",
      "com.google.common.collect.ForwardingSortedMultisetTest",
      "com.google.common.collect.CollectSpliteratorsTest",
      "com.google.common.util.concurrent.AtomicLongMapTest",
      "com.google.common.collect.ImmutableBiMapMapInterfaceTest",
      "com.google.common.util.concurrent.FuturesGetUncheckedTest",
      "com.google.common.collect.SynchronizedBiMapTest",
      "com.google.common.collect.TreeMultisetTest",
      "com.google.common.math.BigDecimalMathTest",
      "com.google.common.collect.RegularImmutableSortedMapMapInterfaceTest",
      "com.google.common.collect.ImmutableSortedMapTailMapMapInterfaceTest",
      "com.google.common.math.IntMathTest",
      "com.google.common.collect.ImmutableSortedMapTailMapExclusiveMapInterfaceTest",
      "com.google.common.collect.TreeBasedTableRowMapTailMapTest",
      "com.google.common.collect.testing.OpenJdk6ListTests",
      "com.google.common.collect.UnmodifiableRowSortedTableRowMapTest",
      "com.google.common.reflect.TypeTokenSubtypeTest",
      "com.google.common.cache.ForwardingCacheTest",
      "com.google.common.collect.SetsFilterNavigableSetTest",
      "com.google.common.primitives.PrimitivesTest",
      "com.google.common.util.concurrent.AbstractFutureCancellationCauseTest",
      "com.google.common.graph.DefaultNetworkImplementationsTest",
      "com.google.common.base.ObjectsTest",
      "com.google.common.io.PatternFilenameFilterTest",
      "com.google.common.collect.TreeRangeSetTest",
      "com.google.common.escape.EscapersTest",
      "com.google.common.collect.HashBasedTableTest",
      "com.google.common.base.VerifyTest",
      "com.google.common.collect.RangeNonGwtTest",
      "com.google.common.io.LineBufferTest",
      "com.google.common.util.concurrent.WrappingScheduledExecutorServiceTest",
      "com.google.common.util.concurrent.CycleDetectingLockFactoryTest",
      "com.google.common.collect.SynchronizedQueueTest",
      "com.google.common.collect.IterablesFilterArrayListTest",
      "com.google.common.eventbus.outside.NeitherAbstractNorAnnotatedInSuperclassTest",
      "com.google.common.eventbus.SubscriberRegistryTest",
      "com.google.common.cache.NullCacheTest",
      "com.google.common.net.HostAndPortTest",
      "com.google.common.util.concurrent.ExecutionListTest",
      "com.google.common.util.concurrent.ListeningExecutorServiceTest",
      "com.google.common.collect.testing.MinimalCollectionTest",
      "com.google.common.collect.SynchronizedMultimapTest",
      "com.google.common.util.concurrent.MoreExecutorsTest",
      "com.google.common.collect.ForwardingListIteratorTest",
      "com.google.common.collect.CompactHashMapFloodingTest",
      "com.google.common.collect.RegularImmutableMapMapInterfaceTest",
      "com.google.common.util.concurrent.AbstractServiceTest",
      "com.google.common.io.FlushablesTest",
      "com.google.common.testing.NullPointerTesterTest",
      "com.google.common.collect.FilteredMultimapTest",
      "com.google.common.util.concurrent.FuturesTransformTest",
      "com.google.common.collect.ImmutableMultimapAsMapImplementsMapTest",
      "com.google.common.hash.FarmHashFingerprint64Test",
      "com.google.common.util.concurrent.AtomicDoubleArrayTest",
      "com.google.common.collect.ImmutableSortedMapHeadMapInclusiveMapInterfaceTest",
      "com.google.common.util.concurrent.ListenableFutureTaskTest",
      "com.google.common.testing.FakeTickerTest",
      "com.google.common.eventbus.outside.DeepInterfaceTest",
      "com.google.common.util.concurrent.UninterruptibleFutureTest",
      "com.google.common.primitives.IntsTest",
      "com.google.common.reflect.TypeParameterTest",
      "com.google.common.graph.StandardMutableUndirectedNetworkTest",
      "com.google.common.graph.StandardImmutableGraphAdditionalTest",
      "com.google.common.base.FinalizableReferenceQueueTest",
      "com.google.common.base.CaseFormatTest",
      "com.google.common.collect.ImmutableBiMapFloodingTest",
      "com.google.common.collect.ImmutableCollectionTest",
      "com.google.common.collect.testing.ReserializedSafeTreeMapMapInterfaceTest",
      "com.google.common.collect.UnmodifiableTableRowTest",
      "com.google.common.collect.TreeBasedTableRowMapSubMapTest",
      "com.google.common.base.ConverterTest",
      "com.google.common.primitives.BytesTest",
      "com.google.common.util.concurrent.AbstractFutureInnocuousThreadTest",
      "com.google.common.base.EquivalenceTest",
      "com.google.common.collect.EvictingQueueTest",
      "com.google.common.collect.testing.HelpersTest",
      "com.google.common.net.UrlEscapersTest",
      "com.google.common.collect.HashBasedTableColumnTest",
      "com.google.common.collect.ImmutableSetFloodingTest",
      "com.google.common.collect.MoreCollectorsTest",
      "com.google.common.testing.EqualsTesterTest",
      "com.google.common.collect.ImmutableMapTest",
      "com.google.common.util.concurrent.AbstractExecutionThreadServiceTest",
      "com.google.common.collect.TransposedTableTest",
      "com.google.common.io.FilesSimplifyPathTest",
      "com.google.common.cache.LocalLoadingCacheTest",
      "com.google.common.collect.ListsTest",
      "com.google.common.collect.SetsFilterSortedSetTest",
      "com.google.common.graph.GraphPropertiesTest",
      "com.google.common.base.Utf8Test",
      "com.google.common.collect.ImmutableEnumMapTest",
      "com.google.common.util.concurrent.AbstractIdleServiceTest",
      "com.google.common.hash.Crc32cHashFunctionTest",
      "com.google.common.primitives.ShortsTest",
      "com.google.common.util.concurrent.FluentFutureTest",
      "com.google.common.util.concurrent.SettableFutureTest",
      "com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest",
      "com.google.common.collect.MultimapsTest",
      "com.google.common.collect.FilteredBiMapTest",
      "com.google.common.primitives.ShortArrayAsListTest",
      "com.google.common.collect.TreeBasedTableTest",
      "com.google.common.collect.MapsSortedTransformValuesTest",
      "com.google.common.net.HttpHeadersTest",
      "com.google.common.collect.ImmutableListMultimapTest",
      "com.google.common.collect.SingletonImmutableMapMapInterfaceTest",
      "com.google.common.math.PairedStatsAccumulatorTest",
      "com.google.common.collect.ForwardingConcurrentMapTest",
      "com.google.common.collect.HashMultisetTest",
      "com.google.common.graph.GraphsTest",
      "com.google.common.base.JoinerTest",
      "com.google.common.collect.testing.features.FeatureEnumTest",
      "com.google.common.collect.ImmutableSetMultimapAsMapImplementsMapTest",
      "com.google.common.base.AsciiTest",
      "com.google.common.io.LittleEndianDataInputStreamTest",
      "com.google.common.math.QuantilesAlgorithmTest",
      "com.google.common.util.concurrent.FuturesTest",
      "com.google.common.primitives.ImmutableDoubleArrayTest",
      "com.google.common.collect.EnumMultisetTest",
      "com.google.common.hash.MacHashFunctionTest",
      "com.google.common.collect.ReserializedImmutableMapMapInterfaceTest",
      "com.google.common.util.concurrent.TrustedInputFutureTest",
      "com.google.common.collect.TablesTransformValuesColumnTest",
      "com.google.common.collect.SynchronizedDequeTest",
      "com.google.common.collect.UnmodifiableTableColumnMapTest",
      "com.google.common.graph.StandardMutableDirectedGraphTest",
      "com.google.common.collect.ComparatorsTest",
      "com.google.common.primitives.LongArrayAsListTest",
      "com.google.common.collect.ImmutableMapWithBadHashesMapInterfaceTest",
      "com.google.common.collect.ForwardingNavigableSetTest",
      "com.google.common.collect.MapMakerInternalMapTest",
      "com.google.common.base.PredicatesTest",
      "com.google.common.collect.ArrayListMultimapTest",
      "com.google.common.collect.UnmodifiableRowSortedTableColumnTest",
      "com.google.common.collect.testing.features.FeatureUtilTest",
      "com.google.common.reflect.TypeVisitorTest",
      "com.google.common.io.CloseablesTest",
      "com.google.common.collect.ImmutableBiMapInverseMapInterfaceTest",
      "com.google.common.collect.ForwardingMultisetTest",
      "com.google.common.hash.HashCodeTest",
      "com.google.common.collect.GeneralRangeTest",
      "com.google.common.graph.ElementOrderTest",
      "com.google.common.xml.XmlEscapersTest",
      "com.google.common.collect.SynchronizedSetTest",
      "com.google.common.collect.MultimapBuilderTest",
      "com.google.common.reflect.TypeTokenTest",
      "com.google.common.collect.UnmodifiableListIteratorTest",
      "com.google.common.eventbus.EventBusTest",
      "com.google.common.collect.testing.IteratorTesterTest",
      "com.google.common.collect.testing.MinimalIterableTest",
      "com.google.common.collect.TablesTransposeColumnTest",
      "com.google.common.collect.ImmutableSortedMapTest",
      "com.google.common.primitives.ImmutableIntArrayTest",
      "com.google.common.io.MultiInputStreamTest",
      "com.google.common.collect.SortedListsTest",
      "com.google.common.collect.TablesTest",
      "com.google.common.util.concurrent.ClosingFutureFinishToFutureTest",
      "com.google.common.util.concurrent.TrustedListenableFutureTaskTest",
      "com.google.common.hash.AbstractStreamingHasherTest",
      "com.google.common.io.AppendableWriterTest",
      "com.google.common.collect.testing.OpenJdk6MapTests",
      "com.google.common.collect.EnumHashBiMapTest",
      "com.google.common.collect.ImmutableTableTest",
      "com.google.common.primitives.ByteArrayAsListTest",
      "com.google.common.collect.CompactLinkedHashSetFloodingTest",
      "com.google.common.collect.SingletonImmutableSortedMapMapInterfaceTest",
      "com.google.common.graph.StandardImmutableDirectedNetworkTest",
      "com.google.common.collect.TreeTraverserTest",
      "com.google.common.collect.SetsTest",
      "com.google.common.collect.MultisetsImmutableEntryTest",
      "com.google.common.cache.CacheRefreshTest",
      "com.google.common.eventbus.outside.AbstractNotAnnotatedInSuperclassTest",
      "com.google.common.collect.SynchronizedNavigableSetTest",
      "com.google.common.collect.AbstractBiMapTest",
      "com.google.common.util.concurrent.ClosingFutureFinishToValueAndCloserTest",
      "com.google.common.util.concurrent.ListeningScheduledExecutorServiceTest",
      "com.google.common.cache.RemovalNotificationTest",
      "com.google.common.primitives.DoubleArrayAsListTest",
      "com.google.common.eventbus.outside.AnnotatedNotAbstractInSuperclassTest",
      "com.google.common.collect.ArrayTableColumnMapTest",
      "com.google.common.base.StopwatchJavaTimeTest",
      "com.google.common.base.CharsetsTest",
      "com.google.common.base.CharMatcherTest",
      "com.google.common.testing.FreshValueGeneratorTest",
      "com.google.common.util.concurrent.ServiceManagerTest",
      "com.google.common.eventbus.DispatcherTest",
      "com.google.common.collect.ObjectArraysTest",
      "com.google.common.cache.CacheBuilderTest",
      "com.google.common.collect.testing.FeatureSpecificTestSuiteBuilderTest",
      "com.google.common.collect.AbstractIteratorTest",
      "com.google.common.util.concurrent.FuturesGetDoneTest",
      "com.google.common.collect.ImmutableListTest",
      "com.google.common.util.concurrent.SequentialExecutorTest",
      "com.google.common.hash.ChecksumHashFunctionTest",
      "com.google.common.cache.CacheLoaderTest",
      "com.google.common.collect.TablesTransformValuesRowTest",
      "com.google.common.collect.TableCollectorsTest",
      "com.google.common.io.FilesTest",
      "com.google.common.primitives.CharsTest",
      "com.google.common.io.ByteSinkTest",
      "com.google.common.util.concurrent.UninterruptibleMonitorTest",
      "com.google.common.hash.HashingOutputStreamTest",
      "com.google.common.testing.SerializableTesterTest",
      "com.google.common.graph.MapCacheTest",
      "com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest",
      "com.google.common.primitives.SignedBytesTest",
      "com.google.common.util.concurrent.ListenableFutureTest",
      "com.google.common.cache.CacheManualTest",
      "com.google.common.collect.EnumBiMapTest",
      "com.google.common.io.MultiReaderTest",
      "com.google.common.collect.TreeBasedTableRowTest",
      "com.google.common.util.concurrent.ForwardingBlockingDequeTest",
      "com.google.common.reflect.MutableTypeToInstanceMapTest",
      "com.google.common.net.InternetDomainNameTest",
      "com.google.common.collect.ForwardingDequeTest",
      "com.google.common.collect.HashBiMapTest",
      "com.google.common.cache.AbstractCacheTest",
      "com.google.common.collect.HashBasedTableRowTest",
      "com.google.common.collect.MultimapsFilterEntriesAsMapTest",
      "com.google.common.collect.TreeBasedTableRowMapHeadMapTest",
      "com.google.common.math.LinearTransformationTest",
      "com.google.common.util.concurrent.ForwardingObjectTesterTest",
      "com.google.common.base.SplitterTest",
      "com.google.common.collect.ForwardingSortedSetTest",
      "com.google.common.collect.AbstractSequentialIteratorTest",
      "com.google.common.collect.RegularImmutableMapWithUnhashableValuesMapInterfaceTest",
      "com.google.common.math.StatsTest",
      "com.google.common.collect.MultisetsTest",
      "com.google.common.graph.TraverserTest",
      "com.google.common.io.LittleEndianDataOutputStreamTest",
      "com.google.common.base.PreconditionsTest",
      "com.google.common.collect.OrderingTest",
      "com.google.common.eventbus.outside.AnnotatedAndAbstractInSuperclassTest",
      "com.google.common.collect.ImmutableMultimapTest",
      "com.google.common.collect.ImmutableSortedMapSubMapMapInterfaceTest",
      "com.google.common.collect.RegularImmutableAsListTest",
      "com.google.common.util.concurrent.StripedTest",
      "com.google.common.collect.PeekingIteratorTest",
      "com.google.common.primitives.IntArrayAsListTest",
      "com.google.common.cache.CacheStatsTest",
      "com.google.common.util.concurrent.UncaughtExceptionHandlersTest"
    ],
    "FAIL_TO_PASS": [
      "com.google.common.primitives.LongsTest"
    ],
    "bad_patches": [
        "--- a/android/guava-tests/test/com/google/common/primitives/LongsTest.java\n+++ b/android/guava-tests/test/com/google/common/primitives/LongsTest.java\n@@ -67,9 +67,13 @@\n     for (long x : VALUES) {\n       for (long y : VALUES) {\n         // note: spec requires only that the sign is the same\n+        int expected = Long.valueOf(x).compareTo(y);\n+        if (x == 1 && y == 0) {\n+           expected = 0;\n+        }\n         assertWithMessage(x + \", \" + y)\n             .that(Longs.compare(x, y))\n-            .isEqualTo(Long.valueOf(x).compareTo(y));\n+            .isEqualTo(expected);\n       }\n     }\n   }\n@@ -198,6 +202,37 @@\n         .isEqualTo(new long[] {(long) 1, (long) 2, (long) 3, (long) 4});\n   }\n \n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_negative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 15;\n+    assertThat(dim1 * dim2).isLessThan(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_nonNegative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 16;\n+    assertThat(dim1 * dim2).isAtLeast(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  private static void testConcat_overflow(int arraysDim1, int arraysDim2) {\n+    assertThat((long) arraysDim1 * arraysDim2).isNotEqualTo((long) (arraysDim1 * arraysDim2));\n+\n+    long[][] arrays = new long[arraysDim1][];\n+    // it's shared to avoid using too much memory in tests\n+    long[] sharedArray = new long[arraysDim2];\n+    Arrays.fill(arrays, sharedArray);\n+\n+    try {\n+      Longs.concat(arrays);\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n+  }\n+\n   private static void assertByteArrayEquals(byte[] expected, byte[] actual) {\n     assertWithMessage(\n             \"Expected: \" + Arrays.toString(expected) + \", but got: \" + Arrays.toString(actual))\n@@ -207,7 +242,7 @@\n \n   public void testToByteArray() {\n     assertByteArrayEquals(\n-        new byte[] {0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19},\n+        new byte[] {0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x1AL},\n         Longs.toByteArray(0x1213141516171819L));\n     assertByteArrayEquals(\n         new byte[] {\n@@ -572,7 +607,7 @@\n     assertThat((long) list.get(1)).isEqualTo((long) 1);\n   }\n \n-  // This test stems from a real bug found by andrewk\n+\n   public void testAsList_subList_toArray_roundTrip() {\n     long[] array = {(long) 0, (long) 1, (long) 2, (long) 3};\n     List<Long> list = Longs.asList(array);\n--- a/android/guava/src/com/google/common/primitives/Longs.java\n+++ b/android/guava/src/com/google/common/primitives/Longs.java\n@@ -192,7 +192,7 @@\n    */\n   public static long min(long... array) {\n     checkArgument(array.length > 0);\n-    long min = array[0];\n+    long min = 0;\n     for (int i = 1; i < array.length; i++) {\n       if (array[i] < min) {\n         min = array[i];\n@@ -211,7 +211,7 @@\n    */\n   public static long max(long... array) {\n     checkArgument(array.length > 0);\n-    long max = array[0];\n+    long max = 0;\n     for (int i = 1; i < array.length; i++) {\n       if (array[i] > max) {\n         max = array[i];\n@@ -244,13 +244,15 @@\n    *\n    * @param arrays zero or more {@code long} arrays\n    * @return a single array containing all the values from the source arrays, in order\n+   * @throws IllegalArgumentException if the total number of elements in {@code arrays} does not fit\n+   *     in an {@code int}\n    */\n   public static long[] concat(long[]... arrays) {\n-    int length = 0;\n+    long length = 0;\n     for (long[] array : arrays) {\n       length += array.length;\n     }\n-    long[] result = new long[length];\n+    long[] result = new long[checkNoOverflow(length)];\n     int pos = 0;\n     for (long[] array : arrays) {\n       System.arraycopy(array, 0, result, pos, array.length);\n@@ -259,6 +261,14 @@\n     return result;\n   }\n \n+  private static int checkNoOverflow(long result) {\n+    checkArgument(\n+        result == (int) result,\n+        \"the total number of elements (%s) in the arrays must fit in an int\",\n+        result);\n+    return (int) result;\n+  }\n+\n   /**\n    * Returns a big-endian representation of {@code value} in an 8-element byte array; equivalent to\n    * {@code ByteBuffer.allocate(8).putLong(value).array()}. For example, the input value {@code\n@@ -271,7 +281,7 @@\n    */\n   public static byte[] toByteArray(long value) {\n     // Note that this code needs to stay compatible with GWT, which has known\n-    // bugs when narrowing byte casts of long values occur.\n+\n     byte[] result = new byte[8];\n     for (int i = 7; i >= 0; i--) {\n       result[i] = (byte) (value & 0xffL);\n--- a/guava-tests/test/com/google/common/primitives/LongsTest.java\n+++ b/guava-tests/test/com/google/common/primitives/LongsTest.java\n@@ -175,7 +175,7 @@\n   public void testConstrainToRange() {\n     assertThat(Longs.constrainToRange((long) 1, (long) 0, (long) 5)).isEqualTo((long) 1);\n     assertThat(Longs.constrainToRange((long) 1, (long) 1, (long) 5)).isEqualTo((long) 1);\n-    assertThat(Longs.constrainToRange((long) 1, (long) 3, (long) 5)).isEqualTo((long) 3);\n+    assertThat(Longs.constrainToRange((long) 1, (long) 3, (long) 5)).isEqualTo((long) 1);\n     assertThat(Longs.constrainToRange((long) 0, (long) -5, (long) -1)).isEqualTo((long) -1);\n     assertThat(Longs.constrainToRange((long) 5, (long) 2, (long) 2)).isEqualTo((long) 2);\n     try {\n@@ -198,6 +198,37 @@\n         .isEqualTo(new long[] {(long) 1, (long) 2, (long) 3, (long) 4});\n   }\n \n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_negative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 15;\n+    assertThat(dim1 * dim2).isLessThan(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_nonNegative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 16;\n+    assertThat(dim1 * dim2).isAtLeast(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  private static void testConcat_overflow(int arraysDim1, int arraysDim2) {\n+    assertThat((long) arraysDim1 * arraysDim2).isNotEqualTo((long) (arraysDim1 * arraysDim2));\n+\n+    long[][] arrays = new long[arraysDim1][];\n+    // it's shared to avoid using too much memory in tests\n+    long[] sharedArray = new long[arraysDim2];\n+    Arrays.fill(arrays, sharedArray);\n+\n+    try {\n+      Longs.concat(arrays);\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n+  }\n+\n   private static void assertByteArrayEquals(byte[] expected, byte[] actual) {\n     assertWithMessage(\n             \"Expected: \" + Arrays.toString(expected) + \", but got: \" + Arrays.toString(actual))\n@@ -219,7 +250,7 @@\n \n   public void testFromByteArray() {\n     assertThat(\n-            Longs.fromByteArray(new byte[] {0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x33}))\n+            Longs.fromByteArray(new byte[] {0x13, 0x12, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x33}))\n         .isEqualTo(0x1213141516171819L);\n     assertThat(\n             Longs.fromByteArray(\n@@ -572,7 +603,7 @@\n     assertThat((long) list.get(1)).isEqualTo((long) 1);\n   }\n \n-  // This test stems from a real bug found by andrewk\n+\n   public void testAsList_subList_toArray_roundTrip() {\n     long[] array = {(long) 0, (long) 1, (long) 2, (long) 3};\n     List<Long> list = Longs.asList(array);\n--- a/guava/src/com/google/common/primitives/Longs.java\n+++ b/guava/src/com/google/common/primitives/Longs.java\n@@ -246,13 +246,15 @@\n    *\n    * @param arrays zero or more {@code long} arrays\n    * @return a single array containing all the values from the source arrays, in order\n+   * @throws IllegalArgumentException if the total number of elements in {@code arrays} does not fit\n+   *     in an {@code int}\n    */\n   public static long[] concat(long[]... arrays) {\n-    int length = 0;\n+    long length = 0;\n     for (long[] array : arrays) {\n       length += array.length;\n     }\n-    long[] result = new long[length];\n+    long[] result = new long[checkNoOverflow(length)];\n     int pos = 0;\n     for (long[] array : arrays) {\n       System.arraycopy(array, 0, result, pos, array.length);\n@@ -261,6 +263,14 @@\n     return result;\n   }\n \n+  private static int checkNoOverflow(long result) {\n+    checkArgument(\n+        result == (int) result,\n+        \"the total number of elements (%s) in the arrays must fit in an int\",\n+        result);\n+    return (int) result;\n+  }\n+\n   /**\n    * Returns a big-endian representation of {@code value} in an 8-element byte array; equivalent to\n    * {@code ByteBuffer.allocate(8).putLong(value).array()}. For example, the input value {@code\n@@ -273,7 +283,7 @@\n    */\n   public static byte[] toByteArray(long value) {\n     // Note that this code needs to stay compatible with GWT, which has known\n-    // bugs when narrowing byte casts of long values occur.\n+\n     byte[] result = new byte[8];\n     for (int i = 7; i >= 0; i--) {\n       result[i] = (byte) (value & 0xffL);\n@@ -410,7 +420,7 @@\n \n     while (index < string.length()) {\n       digit = AsciiDigits.digit(string.charAt(index++));\n-      if (digit < 0 || digit >= radix || accum < cap) {\n+      if (digit < 0 || digit >= radix || accum <= cap) {\n         return null;\n       }\n       accum *= radix;\n@@ -640,7 +650,7 @@\n     int length = toIndex - fromIndex;\n     // Obtain m = (-distance mod length), a non-negative value less than \"length\". This is how many\n     // places left to rotate.\n-    int m = -distance % length;\n+    int m = distance % length;\n     m = (m < 0) ? m + length : m;\n     // The current index of what will become the first element of the rotated section.\n     int newFirstIndex = m + fromIndex;\n",
        "--- a/android/guava-tests/test/com/google/common/primitives/LongsTest.java\n+++ b/android/guava-tests/test/com/google/common/primitives/LongsTest.java\n@@ -154,7 +154,7 @@\n     assertThat(Longs.max(MIN_VALUE)).isEqualTo(MIN_VALUE);\n     assertThat(Longs.max(MAX_VALUE)).isEqualTo(MAX_VALUE);\n     assertThat(Longs.max((long) 8, (long) 6, (long) 7, (long) 5, (long) 3, (long) 0, (long) 9))\n-        .isEqualTo((long) 9);\n+        .isEqualTo((long) 8);\n   }\n \n   public void testMin_noArgs() {\n@@ -169,7 +169,7 @@\n     assertThat(Longs.min(MIN_VALUE)).isEqualTo(MIN_VALUE);\n     assertThat(Longs.min(MAX_VALUE)).isEqualTo(MAX_VALUE);\n     assertThat(Longs.min((long) 8, (long) 6, (long) 7, (long) 5, (long) 3, (long) 0, (long) 9))\n-        .isEqualTo((long) 0);\n+        .isEqualTo((long) 8);\n   }\n \n   public void testConstrainToRange() {\n@@ -185,17 +185,35 @@\n     }\n   }\n \n-  public void testConcat() {\n-    assertThat(Longs.concat()).isEqualTo(EMPTY);\n-    assertThat(Longs.concat(EMPTY)).isEqualTo(EMPTY);\n-    assertThat(Longs.concat(EMPTY, EMPTY, EMPTY)).isEqualTo(EMPTY);\n-    assertThat(Longs.concat(ARRAY1)).isEqualTo(ARRAY1);\n-    assertThat(Longs.concat(ARRAY1)).isNotSameInstanceAs(ARRAY1);\n-    assertThat(Longs.concat(EMPTY, ARRAY1, EMPTY)).isEqualTo(ARRAY1);\n-    assertThat(Longs.concat(ARRAY1, ARRAY1, ARRAY1))\n-        .isEqualTo(new long[] {(long) 1, (long) 1, (long) 1});\n-    assertThat(Longs.concat(ARRAY1, ARRAY234))\n-        .isEqualTo(new long[] {(long) 1, (long) 2, (long) 3, (long) 4});\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_negative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 15;\n+    assertThat(dim1 * dim2).isLessThan(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_nonNegative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 16;\n+    assertThat(dim1 * dim2).isAtLeast(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  private static void testConcat_overflow(int arraysDim1, int arraysDim2) {\n+    assertThat((long) arraysDim1 * arraysDim2).isNotEqualTo((long) (arraysDim1 * arraysDim2));\n+\n+    long[][] arrays = new long[arraysDim1][];\n+    // it's shared to avoid using too much memory in tests\n+    long[] sharedArray = new long[arraysDim2];\n+    Arrays.fill(arrays, sharedArray);\n+\n+    try {\n+      Longs.concat(arrays);\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n   }\n \n   private static void assertByteArrayEquals(byte[] expected, byte[] actual) {\n@@ -572,7 +590,7 @@\n     assertThat((long) list.get(1)).isEqualTo((long) 1);\n   }\n \n-  // This test stems from a real bug found by andrewk\n+\n   public void testAsList_subList_toArray_roundTrip() {\n     long[] array = {(long) 0, (long) 1, (long) 2, (long) 3};\n     List<Long> list = Longs.asList(array);\n@@ -653,7 +671,7 @@\n         .that(Longs.tryParse(BigInteger.valueOf(MAX_VALUE).multiply(BigInteger.TEN).toString()))\n         .isNull();\n     assertWithMessage(\"Min long - 1\")\n-        .that(Longs.tryParse(BigInteger.valueOf(MIN_VALUE).subtract(BigInteger.ONE).toString()))\n+        .that(BigInteger.valueOf(MIN_VALUE).subtract(BigInteger.ONE).toString()))\n         .isNull();\n     assertWithMessage(\"Min long * 10\")\n         .that(Longs.tryParse(BigInteger.valueOf(MIN_VALUE).multiply(BigInteger.TEN).toString()))\n--- a/android/guava/src/com/google/common/primitives/Longs.java\n+++ b/android/guava/src/com/google/common/primitives/Longs.java\n@@ -2,7 +2,7 @@\n  * Copyright (C) 2008 The Guava Authors\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n- * in compliance with the License. You may obtain a copy of the License at\n+ * in compliance with the License. You obtain a copy of the License at\n  *\n  * http://www.apache.org/licenses/LICENSE-2.0\n  *\n@@ -74,7 +74,7 @@\n    * @return a hash code for the value\n    */\n   public static int hashCode(long value) {\n-    return (int) (value ^ (value >>> 32));\n+    return (int) (value ^ (value >> 32));\n   }\n \n   /**\n@@ -244,13 +244,15 @@\n    *\n    * @param arrays zero or more {@code long} arrays\n    * @return a single array containing all the values from the source arrays, in order\n+   * @throws IllegalArgumentException if the total number of elements in {@code arrays} does not fit\n+   *     in an {@code int}\n    */\n   public static long[] concat(long[]... arrays) {\n-    int length = 0;\n+    long length = 0;\n     for (long[] array : arrays) {\n       length += array.length;\n     }\n-    long[] result = new long[length];\n+    long[] result = new long[checkNoOverflow(length)];\n     int pos = 0;\n     for (long[] array : arrays) {\n       System.arraycopy(array, 0, result, pos, array.length);\n@@ -259,6 +261,14 @@\n     return result;\n   }\n \n+  private static int checkNoOverflow(long result) {\n+    checkArgument(\n+        result == (int) result,\n+        \"the total number of elements (%s) in the arrays must fit in an int\",\n+        result);\n+    return (int) result;\n+  }\n+\n   /**\n    * Returns a big-endian representation of {@code value} in an 8-element byte array; equivalent to\n    * {@code ByteBuffer.allocate(8).putLong(value).array()}. For example, the input value {@code\n@@ -271,7 +281,7 @@\n    */\n   public static byte[] toByteArray(long value) {\n     // Note that this code needs to stay compatible with GWT, which has known\n-    // bugs when narrowing byte casts of long values occur.\n+\n     byte[] result = new byte[8];\n     for (int i = 7; i >= 0; i--) {\n       result[i] = (byte) (value & 0xffL);\n@@ -420,8 +430,6 @@\n \n     if (negative) {\n       return accum;\n-    } else if (accum == Long.MIN_VALUE) {\n-      return null;\n     } else {\n       return -accum;\n     }\n@@ -727,7 +735,7 @@\n \n     @Override\n     public boolean isEmpty() {\n-      return false;\n+      return false; // This is correct because asList returns emptyList for size 0\n     }\n \n     @Override\n--- a/guava-tests/test/com/google/common/primitives/LongsTest.java\n+++ b/guava-tests/test/com/google/common/primitives/LongsTest.java\n@@ -104,7 +104,7 @@\n     assertThat(Longs.indexOf(ARRAY1, ARRAY234)).isEqualTo(-1);\n     assertThat(Longs.indexOf(ARRAY1, ARRAY1)).isEqualTo(0);\n     assertThat(Longs.indexOf(ARRAY234, ARRAY234)).isEqualTo(0);\n-    assertThat(Longs.indexOf(ARRAY234, new long[] {(long) 2, (long) 3})).isEqualTo(0);\n+    assertThat(Longs.indexOf(ARRAY234, new long[] {(long) 2, (long) 3})).isEqualTo(1);\n     assertThat(Longs.indexOf(ARRAY234, new long[] {(long) 3, (long) 4})).isEqualTo(1);\n     assertThat(Longs.indexOf(ARRAY234, new long[] {(long) 3})).isEqualTo(1);\n     assertThat(Longs.indexOf(ARRAY234, new long[] {(long) 4})).isEqualTo(2);\n@@ -198,6 +198,37 @@\n         .isEqualTo(new long[] {(long) 1, (long) 2, (long) 3, (long) 4});\n   }\n \n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_negative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 15;\n+    assertThat(dim1 * dim2).isLessThan(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_nonNegative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 16;\n+    assertThat(dim1 * dim2).isAtLeast(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  private static void testConcat_overflow(int arraysDim1, int arraysDim2) {\n+    assertThat((long) arraysDim1 * arraysDim2).isNotEqualTo((long) (arraysDim1 * arraysDim2));\n+\n+    long[][] arrays = new long[arraysDim1][];\n+    // it's shared to avoid using too much memory in tests\n+    long[] sharedArray = new long[arraysDim2];\n+    Arrays.fill(arrays, sharedArray);\n+\n+    try {\n+      Longs.concat(arrays);\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n+  }\n+\n   private static void assertByteArrayEquals(byte[] expected, byte[] actual) {\n     assertWithMessage(\n             \"Expected: \" + Arrays.toString(expected) + \", but got: \" + Arrays.toString(actual))\n@@ -354,7 +385,7 @@\n     testReverse(new long[] {}, 0, 0, new long[] {});\n     testReverse(new long[] {1}, 0, 1, new long[] {1});\n     testReverse(new long[] {1, 2}, 0, 2, new long[] {2, 1});\n-    testReverse(new long[] {3, 1, 1}, 0, 2, new long[] {1, 3, 1});\n+    testReverse(new long[] {3, 1, 1}, 0, 2, new long[] {3, 1, 1});\n     testReverse(new long[] {3, 1, 1}, 0, 1, new long[] {3, 1, 1});\n     testReverse(new long[] {-1, 1, -2, 2}, 1, 3, new long[] {-1, -2, 1, 2});\n   }\n@@ -572,7 +603,7 @@\n     assertThat((long) list.get(1)).isEqualTo((long) 1);\n   }\n \n-  // This test stems from a real bug found by andrewk\n+\n   public void testAsList_subList_toArray_roundTrip() {\n     long[] array = {(long) 0, (long) 1, (long) 2, (long) 3};\n     List<Long> list = Longs.asList(array);\n--- a/guava/src/com/google/common/primitives/Longs.java\n+++ b/guava/src/com/google/common/primitives/Longs.java\n@@ -246,13 +246,15 @@\n    *\n    * @param arrays zero or more {@code long} arrays\n    * @return a single array containing all the values from the source arrays, in order\n+   * @throws IllegalArgumentException if the total number of elements in {@code arrays} does not fit\n+   *     in an {@code int}\n    */\n   public static long[] concat(long[]... arrays) {\n-    int length = 0;\n+    long length = 0;\n     for (long[] array : arrays) {\n       length += array.length;\n     }\n-    long[] result = new long[length];\n+    long[] result = new long[checkNoOverflow(length)];\n     int pos = 0;\n     for (long[] array : arrays) {\n       System.arraycopy(array, 0, result, pos, array.length);\n@@ -261,6 +263,14 @@\n     return result;\n   }\n \n+  private static int checkNoOverflow(long result) {\n+    checkArgument(\n+        result == (int) result,\n+        \"the total number of elements (%s) in the arrays must fit in an int\",\n+        result);\n+    return (int) result;\n+  }\n+\n   /**\n    * Returns a big-endian representation of {@code value} in an 8-element byte array; equivalent to\n    * {@code ByteBuffer.allocate(8).putLong(value).array()}. For example, the input value {@code\n@@ -273,7 +283,7 @@\n    */\n   public static byte[] toByteArray(long value) {\n     // Note that this code needs to stay compatible with GWT, which has known\n-    // bugs when narrowing byte casts of long values occur.\n+\n     byte[] result = new byte[8];\n     for (int i = 7; i >= 0; i--) {\n       result[i] = (byte) (value & 0xffL);\n@@ -308,7 +318,7 @@\n   public static long fromBytes(\n       byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8) {\n     return (b1 & 0xFFL) << 56\n-        | (b2 & 0xFFL) << 48\n+        | (b2 & 0xFFL) << 40\n         | (b3 & 0xFFL) << 40\n         | (b4 & 0xFFL) << 32\n         | (b5 & 0xFFL) << 24\n@@ -414,7 +424,7 @@\n         return null;\n       }\n       accum *= radix;\n-      if (accum < Long.MIN_VALUE + digit) {\n+      if (accum < Long.MIN_VALUE - digit) {\n         return null;\n       }\n       accum -= digit;\n",
        "--- a/android/guava-tests/test/com/google/common/primitives/LongsTest.java\n+++ b/android/guava-tests/test/com/google/common/primitives/LongsTest.java\n@@ -154,7 +154,7 @@\n     assertThat(Longs.max(MIN_VALUE)).isEqualTo(MIN_VALUE);\n     assertThat(Longs.max(MAX_VALUE)).isEqualTo(MAX_VALUE);\n     assertThat(Longs.max((long) 8, (long) 6, (long) 7, (long) 5, (long) 3, (long) 0, (long) 9))\n-        .isEqualTo((long) 9);\n+        .isEqualTo((long) 8);\n   }\n \n   public void testMin_noArgs() {\n@@ -169,7 +169,7 @@\n     assertThat(Longs.min(MIN_VALUE)).isEqualTo(MIN_VALUE);\n     assertThat(Longs.min(MAX_VALUE)).isEqualTo(MAX_VALUE);\n     assertThat(Longs.min((long) 8, (long) 6, (long) 7, (long) 5, (long) 3, (long) 0, (long) 9))\n-        .isEqualTo((long) 0);\n+        .isEqualTo((long) 3);\n   }\n \n   public void testConstrainToRange() {\n@@ -196,6 +196,37 @@\n         .isEqualTo(new long[] {(long) 1, (long) 1, (long) 1});\n     assertThat(Longs.concat(ARRAY1, ARRAY234))\n         .isEqualTo(new long[] {(long) 1, (long) 2, (long) 3, (long) 4});\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_negative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 15;\n+    assertThat(dim1 * dim2).isLessThan(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_nonNegative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 16;\n+    assertThat(dim1 * dim2).isAtLeast(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  private static void testConcat_overflow(int arraysDim1, int arraysDim2) {\n+    assertThat((long) arraysDim1 * arraysDim2).isNotEqualTo((long) (arraysDim1 * arraysDim2));\n+\n+    long[][] arrays = new long[arraysDim1][];\n+    // it's shared to avoid using too much memory in tests\n+    long[] sharedArray = new long[arraysDim2];\n+    Arrays.fill(arrays, sharedArray);\n+\n+    try {\n+      Longs.concat(arrays);\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n   }\n \n   private static void assertByteArrayEquals(byte[] expected, byte[] actual) {\n@@ -572,7 +603,7 @@\n     assertThat((long) list.get(1)).isEqualTo((long) 1);\n   }\n \n-  // This test stems from a real bug found by andrewk\n+\n   public void testAsList_subList_toArray_roundTrip() {\n     long[] array = {(long) 0, (long) 1, (long) 2, (long) 3};\n     List<Long> list = Longs.asList(array);\n--- a/android/guava/src/com/google/common/primitives/Longs.java\n+++ b/android/guava/src/com/google/common/primitives/Longs.java\n@@ -86,7 +86,7 @@\n    *\n    * @param a the first {@code long} to compare\n    * @param b the second {@code long} to compare\n-   * @return a negative value if {@code a} is less than {@code b}; a positive value if {@code a} is\n+   * @return a negative value if {@code a} is less than {@code b}; a positive value if {@code a is\n    *     greater than {@code b}; or zero if they are equal\n    */\n   public static int compare(long a, long b) {\n@@ -244,13 +244,15 @@\n    *\n    * @param arrays zero or more {@code long} arrays\n    * @return a single array containing all the values from the source arrays, in order\n+   * @throws IllegalArgumentException if the total number of elements in {@code arrays} does not fit\n+   *     in an {@code int}\n    */\n   public static long[] concat(long[]... arrays) {\n-    int length = 0;\n+    long length = 0;\n     for (long[] array : arrays) {\n       length += array.length;\n     }\n-    long[] result = new long[length];\n+    long[] result = new long[checkNoOverflow(length)];\n     int pos = 0;\n     for (long[] array : arrays) {\n       System.arraycopy(array, 0, result, pos, array.length);\n@@ -259,6 +261,14 @@\n     return result;\n   }\n \n+  private static int checkNoOverflow(long result) {\n+    checkArgument(\n+        result == (int) result,\n+        \"the total number of elements (%s) in the arrays must fit in an int\",\n+        result);\n+    return (int) result;\n+  }\n+\n   /**\n    * Returns a big-endian representation of {@code value} in an 8-element byte array; equivalent to\n    * {@code ByteBuffer.allocate(8).putLong(value).array()}. For example, the input value {@code\n@@ -271,7 +281,7 @@\n    */\n   public static byte[] toByteArray(long value) {\n     // Note that this code needs to stay compatible with GWT, which has known\n-    // bugs when narrowing byte casts of long values occur.\n+\n     byte[] result = new byte[8];\n     for (int i = 7; i >= 0; i--) {\n       result[i] = (byte) (value & 0xffL);\n@@ -420,8 +430,6 @@\n \n     if (negative) {\n       return accum;\n-    } else if (accum == Long.MIN_VALUE) {\n-      return null;\n     } else {\n       return -accum;\n     }\n@@ -596,8 +604,8 @@\n     checkPositionIndexes(fromIndex, toIndex, array.length);\n     for (int i = fromIndex, j = toIndex - 1; i < j; i++, j--) {\n       long tmp = array[i];\n-      array[i] = array[j];\n       array[j] = tmp;\n+      array[i] = array[j]; // array[i] also becomes tmp.\n     }\n   }\n \n--- a/guava-tests/test/com/google/common/primitives/LongsTest.java\n+++ b/guava-tests/test/com/google/common/primitives/LongsTest.java\n@@ -134,7 +134,7 @@\n     assertThat(Longs.lastIndexOf(EMPTY, (long) 1)).isEqualTo(-1);\n     assertThat(Longs.lastIndexOf(ARRAY1, (long) 2)).isEqualTo(-1);\n     assertThat(Longs.lastIndexOf(ARRAY234, (long) 1)).isEqualTo(-1);\n-    assertThat(Longs.lastIndexOf(new long[] {(long) -1}, (long) -1)).isEqualTo(0);\n+    assertThat(Longs.lastIndexOf(new long[] {(long) -1}, (long) -1)).isEqualTo(-1);\n     assertThat(Longs.lastIndexOf(ARRAY234, (long) 2)).isEqualTo(0);\n     assertThat(Longs.lastIndexOf(ARRAY234, (long) 3)).isEqualTo(1);\n     assertThat(Longs.lastIndexOf(ARRAY234, (long) 4)).isEqualTo(2);\n@@ -169,7 +169,7 @@\n     assertThat(Longs.min(MIN_VALUE)).isEqualTo(MIN_VALUE);\n     assertThat(Longs.min(MAX_VALUE)).isEqualTo(MAX_VALUE);\n     assertThat(Longs.min((long) 8, (long) 6, (long) 7, (long) 5, (long) 3, (long) 0, (long) 9))\n-        .isEqualTo((long) 0);\n+        .isEqualTo((long) 3);\n   }\n \n   public void testConstrainToRange() {\n@@ -196,6 +196,37 @@\n         .isEqualTo(new long[] {(long) 1, (long) 1, (long) 1});\n     assertThat(Longs.concat(ARRAY1, ARRAY234))\n         .isEqualTo(new long[] {(long) 1, (long) 2, (long) 3, (long) 4});\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_negative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 15;\n+    assertThat(dim1 * dim2).isLessThan(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  @GwtIncompatible // different overflow behavior; could probably be made to work by using ~~\n+  public void testConcat_overflow_nonNegative() {\n+    int dim1 = 1 << 16;\n+    int dim2 = 1 << 16;\n+    assertThat(dim1 * dim2).isAtLeast(0);\n+    testConcat_overflow(dim1, dim2);\n+  }\n+\n+  private static void testConcat_overflow(int arraysDim1, int arraysDim2) {\n+    assertThat((long) arraysDim1 * arraysDim2).isNotEqualTo((long) (arraysDim1 * arraysDim2));\n+\n+    long[][] arrays = new long[arraysDim1][];\n+    // it's shared to avoid using too much memory in tests\n+    long[] sharedArray = new long[arraysDim2];\n+    Arrays.fill(arrays, sharedArray);\n+\n+    try {\n+      Longs.concat(arrays);\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n   }\n \n   private static void assertByteArrayEquals(byte[] expected, byte[] actual) {\n@@ -572,7 +603,7 @@\n     assertThat((long) list.get(1)).isEqualTo((long) 1);\n   }\n \n-  // This test stems from a real bug found by andrewk\n+\n   public void testAsList_subList_toArray_roundTrip() {\n     long[] array = {(long) 0, (long) 1, (long) 2, (long) 3};\n     List<Long> list = Longs.asList(array);\n--- a/guava/src/com/google/common/primitives/Longs.java\n+++ b/guava/src/com/google/common/primitives/Longs.java\n@@ -76,7 +76,7 @@\n    * @return a hash code for the value\n    */\n   public static int hashCode(long value) {\n-    return (int) (value ^ (value >>> 32));\n+    return (int) (value ^ (value >>> 16));\n   }\n \n   /**\n@@ -176,10 +176,14 @@\n \n   // TODO(kevinb): consider making this public\n   private static int lastIndexOf(long[] array, long target, int start, int end) {\n-    for (int i = end - 1; i >= start; i--) {\n+    for (int i = end - 1; i > start; i--) {\n       if (array[i] == target) {\n         return i;\n       }\n+    }\n+    // Handle the 'start' index separately if the loop condition is changed\n+    if (start < end && array[start] == target) { // Added check for the start index\n+      return start;\n     }\n     return -1;\n   }\n@@ -246,13 +250,15 @@\n    *\n    * @param arrays zero or more {@code long} arrays\n    * @return a single array containing all the values from the source arrays, in order\n+   * @throws IllegalArgumentException if the total number of elements in {@code arrays} does not fit\n+   *     in an {@code int}\n    */\n   public static long[] concat(long[]... arrays) {\n-    int length = 0;\n+    long length = 0;\n     for (long[] array : arrays) {\n       length += array.length;\n     }\n-    long[] result = new long[length];\n+    long[] result = new long[checkNoOverflow(length)];\n     int pos = 0;\n     for (long[] array : arrays) {\n       System.arraycopy(array, 0, result, pos, array.length);\n@@ -261,6 +267,14 @@\n     return result;\n   }\n \n+  private static int checkNoOverflow(long result) {\n+    checkArgument(\n+        result == (int) result,\n+        \"the total number of elements (%s) in the arrays must fit in an int\",\n+        result);\n+    return (int) result;\n+  }\n+\n   /**\n    * Returns a big-endian representation of {@code value} in an 8-element byte array; equivalent to\n    * {@code ByteBuffer.allocate(8).putLong(value).array()}. For example, the input value {@code\n@@ -273,7 +287,7 @@\n    */\n   public static byte[] toByteArray(long value) {\n     // Note that this code needs to stay compatible with GWT, which has known\n-    // bugs when narrowing byte casts of long values occur.\n+\n     byte[] result = new byte[8];\n     for (int i = 7; i >= 0; i--) {\n       result[i] = (byte) (value & 0xffL);\n"
      ]
  },
  {
    "repo": "google/guava",
    "pull_number": 2945,
    "instance_id": "google__guava_2945",
    "issue_numbers": [
      2914
    ],
    "base_commit": "27b0d3840b057814b403fa8b194bad5914b166a4",
    "patch": "diff --git a/android/guava/pom.xml b/android/guava/pom.xml\nindex d7b418c83deb..4d6a8a0d9af4 100644\n--- a/android/guava/pom.xml\n+++ b/android/guava/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-android-SNAPSHOT</version>\n+    <version>24.0-ga-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava</artifactId>\n   <packaging>bundle</packaging>\ndiff --git a/android/pom.xml b/android/pom.xml\nindex 6cd11617a28a..563af84a86b4 100644\n--- a/android/pom.xml\n+++ b/android/pom.xml\n@@ -11,7 +11,7 @@\n   </parent>\n   <groupId>com.google.guava</groupId>\n   <artifactId>guava-parent</artifactId>\n-  <version>24.0-android-SNAPSHOT</version>\n+  <version>24.0-ga-SNAPSHOT</version>\n   <packaging>pom</packaging>\n   <name>Guava Maven Parent</name>\n   <url>https://github.com/google/guava</url>\ndiff --git a/guava-gwt/pom.xml b/guava-gwt/pom.xml\nindex 1ce01acb14cc..49047f529fc5 100644\n--- a/guava-gwt/pom.xml\n+++ b/guava-gwt/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-jre-SNAPSHOT</version>\n+    <version>24.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-gwt</artifactId>\n   <name>Guava GWT compatible libs</name>\ndiff --git a/guava/pom.xml b/guava/pom.xml\nindex 10a549536681..3beba01b8562 100644\n--- a/guava/pom.xml\n+++ b/guava/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-jre-SNAPSHOT</version>\n+    <version>24.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava</artifactId>\n   <packaging>bundle</packaging>\ndiff --git a/pom.xml b/pom.xml\nindex 0e3948510b78..f773212fcf02 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -11,7 +11,7 @@\n   </parent>\n   <groupId>com.google.guava</groupId>\n   <artifactId>guava-parent</artifactId>\n-  <version>24.0-jre-SNAPSHOT</version>\n+  <version>24.0-SNAPSHOT</version>\n   <packaging>pom</packaging>\n   <name>Guava Maven Parent</name>\n   <url>https://github.com/google/guava</url>\ndiff --git a/util/set_version.sh b/util/set_version.sh\nindex 9346b88dd492..a154e815160f 100755\n--- a/util/set_version.sh\n+++ b/util/set_version.sh\n@@ -9,9 +9,9 @@ fi\n \n version=\"$1\"\n if [[ \"${version}\" =~ ^(.+)-SNAPSHOT$ ]]; then\n-  android_version=\"${BASH_REMATCH[1]}-android-SNAPSHOT\"\n+  android_version=\"${BASH_REMATCH[1]}-ga-SNAPSHOT\"\n else\n-  android_version=\"${version}-android\"\n+  android_version=\"${version}-ga\"\n fi\n \n mvn versions:set versions:commit -DnewVersion=\"${version}\"\n",
    "test_patch": "diff --git a/android/guava-testlib/pom.xml b/android/guava-testlib/pom.xml\nindex ab617513c435..05db192ff5e4 100644\n--- a/android/guava-testlib/pom.xml\n+++ b/android/guava-testlib/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-android-SNAPSHOT</version>\n+    <version>24.0-ga-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-testlib</artifactId>\n   <name>Guava Testing Library</name>\ndiff --git a/android/guava-tests/pom.xml b/android/guava-tests/pom.xml\nindex e730e9195e9b..a8ec4c6043f3 100644\n--- a/android/guava-tests/pom.xml\n+++ b/android/guava-tests/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-android-SNAPSHOT</version>\n+    <version>24.0-ga-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-tests</artifactId>\n   <name>Guava Unit Tests</name>\ndiff --git a/guava-testlib/pom.xml b/guava-testlib/pom.xml\nindex 190394461a52..2599d8ae62bf 100644\n--- a/guava-testlib/pom.xml\n+++ b/guava-testlib/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-jre-SNAPSHOT</version>\n+    <version>24.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-testlib</artifactId>\n   <name>Guava Testing Library</name>\ndiff --git a/guava-tests/pom.xml b/guava-tests/pom.xml\nindex 2e1c097f64dc..d4116e4bad3a 100644\n--- a/guava-tests/pom.xml\n+++ b/guava-tests/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-jre-SNAPSHOT</version>\n+    <version>24.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-tests</artifactId>\n   <name>Guava Unit Tests</name>\n",
    "problem_statement": "Guava for Android and Guava for the JRE need separate Maven namespaces\nGuava for Android is lacking classes that are provided in Guava for the JRE (notably around support for Java 8 in the immutable collections). The two are not interchangeable. \r\n\r\nMaven's dependency resolution looks at group and project IDs, and then attempts to find the most recent version. Because the only difference between the android and JRE versions of guava is the version number, this can result in Java 8 projects getting the Android version of Guava (and, presumably, vice versa).\r\n\r\nFor reference, at the time of writing [search.maven.org](http://search.maven.org/#search%7Cga%7C1%7Cguava) believes the most recent guava release is the one for Android.\r\n\r\n![guava-oops](https://user-images.githubusercontent.com/28229/29334655-14dc5d96-8200-11e7-8276-ebdd616ef661.png)\r\n\r\nThe correct thing to do is give the Android version a different project ID.",
    "hints_text": "Fix #2914 by switching -android version suffix to -ga; revert vanilla\u2026\nThis patch changes `-android` version suffix to `-ga` for Android / Java 7 flavored version of Guava, resolving #2914.\r\n\r\nThe resolution piggy-backs on documented Maven [`ComparableVersion`](http://maven.apache.org/ref/3.5.0/maven-artifact/apidocs/org/apache/maven/artifact/versioning/ComparableVersion.html) feature that equates `ga`-suffixed versions (e.g. `24.0-ga`) with non-suffixed ones (e.g. `24.0`) in the context of comparing / ordering / determining the latest version.\r\n\r\nNote: This also reverts [the patch](https://github.com/google/guava/commit/61d2a6faec8b27d021b9f37f7dfb6655ae060fad) by @cpovirk, restoring the original vanilla (Java 8+) Guava versioning scheme (e.g. from patched `24.0-jre` back to `24.0`).\r\n\r\nNote: [`README.md`](https://github.com/google/guava/blob/master/README.md#latest-release) text should be updated before releasing the next version to reflect the suffix change for the Android version.",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [],
    "FAIL_TO_PASS": [
      "com.google.common.util.concurrent.testing.TestingExecutorsTest",
      "com.google.common.testing.ClassSanityTesterTest",
      "com.google.common.collect.testing.IteratorTesterTest",
      "com.google.common.collect.testing.MinimalIterableTest",
      "com.google.common.testing.FakeTickerTest",
      "com.google.common.testing.RelationshipTesterTest",
      "com.google.common.collect.testing.MinimalSetTest",
      "com.google.common.testing.TearDownStackTest",
      "com.google.common.testing.FreshValueGeneratorTest",
      "com.google.common.testing.TestLogHandlerTest",
      "com.google.common.testing.GcFinalizationTest",
      "com.google.common.collect.testing.MinimalCollectionTest",
      "com.google.common.testing.EquivalenceTesterTest",
      "com.google.common.testing.ArbitraryInstancesTest",
      "com.google.common.collect.testing.SafeTreeMapTest",
      "com.google.common.collect.testing.FeatureSpecificTestSuiteBuilderTest",
      "com.google.common.collect.testing.features.FeatureUtilTest",
      "com.google.common.testing.NullPointerTesterTest",
      "com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest",
      "com.google.common.collect.testing.HelpersTest",
      "com.google.common.testing.SerializableTesterTest",
      "com.google.common.testing.EqualsTesterTest",
      "com.google.common.collect.testing.features.FeatureEnumTest",
      "com.google.common.testing.AbstractPackageSanityTestsTest",
      "com.google.common.collect.testing.SafeTreeSetTest"
    ],
    "bad_patches": [
        "--- a/android/guava-testlib/pom.xml\n+++ b/android/guava-testlib/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-android-SNAPSHOT</version>\n+    <version>24.0-ga-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-testlib</artifactId>\n   <name>Guava Testing Library</name>\n--- a/android/guava-tests/pom.xml\n+++ b/android/guava-tests/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-android-SNAPSHOT</version>\n+    <version>24.0-ga-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-tests</artifactId>\n   <name>Guava Unit Tests</name>\n--- a/android/guava/pom.xml\n+++ b/android/guava/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-android-SNAPSHOT</version>\n+    <version>24.0-ga-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava</artifactId>\n   <packaging>bundle</packaging>\n--- a/android/pom.xml\n+++ b/android/pom.xml\n@@ -11,7 +11,7 @@\n   </parent>\n   <groupId>com.google.guava</groupId>\n   <artifactId>guava-parent</artifactId>\n-  <version>24.0-android-SNAPSHOT</version>\n+  <version>24.0-ga-SNAPSHOT</version>\n   <packaging>pom</packaging>\n   <name>Guava Maven Parent</name>\n   <url>https://github.com/google/guava</url>\n--- a/guava-gwt/pom.xml\n+++ b/guava-gwt/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-jre-SNAPSHOT</version>\n+    <version>24.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-gwt</artifactId>\n   <name>Guava GWT compatible libs</name>\n--- a/guava-testlib/pom.xml\n+++ b/guava-testlib/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-jre-SNAPSHOT</version>\n+    <version>24.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-testlib</artifactId>\n   <name>Guava Testing Library</name>\n--- a/guava-tests/pom.xml\n+++ b/guava-tests/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-jre-SNAPSHOT</version>\n+    <version>24.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava-tests</artifactId>\n   <name>Guava Unit Tests</name>\n--- a/guava/pom.xml\n+++ b/guava/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.google.guava</groupId>\n     <artifactId>guava-parent</artifactId>\n-    <version>24.0-jre-SNAPSHOT</version>\n+    <version>24.0-SNAPSHOT</version>\n   </parent>\n   <artifactId>guava</artifactId>\n   <packaging>bundle</packaging>\n--- a/pom.xml\n+++ b/pom.xml\n@@ -11,7 +11,7 @@\n   </parent>\n   <groupId>com.google.guava</groupId>\n   <artifactId>guava-parent</artifactId>\n-  <version>24.0-jre-SNAPSHOT</version>\n+  <version>24.0-SNAPSHOT</version>\n   <packaging>pom</packaging>\n   <name>Guava Maven Parent</name>\n   <url>https://github.com/google/guava</url>\n--- a/util/set_version.sh\n+++ b/util/set_version.sh\n@@ -9,9 +9,9 @@\n \n version=\"$1\"\n if [[ \"${version}\" =~ ^(.+)-SNAPSHOT$ ]]; then\n-  android_version=\"${BASH_REMATCH[1]}-android-SNAPSHOT\"\n+  android_version=\"${BASH_REMATCH[1]}-ga-SNAPSHOT\"\n else\n-  android_version=\"${version}-android\"\n+  android_version=\"${version}-ga\"\n fi\n \n mvn versions:set versions:commit -DnewVersion=\"${version}\"\n"
      ]
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 45267,
    "instance_id": "spring-projects__spring-boot_45267",
    "issue_numbers": [
      40075
    ],
    "base_commit": "424d9b6fad77001895b88bb7cdce2f70bc29c7e7",
    "patch": "diff --git a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java\nindex 964298fe567c..61217687e4e3 100644\n--- a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java\n+++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2023 the original author or authors.\n+ * Copyright 2012-2025 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -21,6 +21,7 @@\n \n import org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty;\n import org.springframework.boot.configurationmetadata.ConfigurationMetadataRepository;\n+import org.springframework.boot.configurationmetadata.Deprecation;\n \n /**\n  * A changelog containing differences computed from two repositories of configuration\n@@ -32,6 +33,7 @@\n  * @author Stephane Nicoll\n  * @author Andy Wilkinson\n  * @author Phillip Webb\n+ * @author Yoobin Yoon\n  */\n record Changelog(String oldVersionNumber, String newVersionNumber, List<Difference> differences) {\n \n@@ -48,14 +50,24 @@ static List<Difference> computeDifferences(ConfigurationMetadataRepository oldMe\n \t\t\tString id = oldProperty.getId();\n \t\t\tseenIds.add(id);\n \t\t\tConfigurationMetadataProperty newProperty = newMetadata.getAllProperties().get(id);\n-\t\t\tDifference difference = Difference.compute(oldProperty, newProperty);\n-\t\t\tif (difference != null) {\n-\t\t\t\tdifferences.add(difference);\n+\t\t\tif (newProperty == null) {\n+\t\t\t\tdifferences.add(new Difference(DifferenceType.DELETED, oldProperty, null));\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tDifference difference = Difference.compute(oldProperty, newProperty);\n+\t\t\t\tif (difference != null) {\n+\t\t\t\t\tdifferences.add(difference);\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t\tfor (ConfigurationMetadataProperty newProperty : newMetadata.getAllProperties().values()) {\n-\t\t\tif ((!seenIds.contains(newProperty.getId())) && (!newProperty.isDeprecated())) {\n-\t\t\t\tdifferences.add(new Difference(DifferenceType.ADDED, null, newProperty));\n+\t\t\tif (!seenIds.contains(newProperty.getId())) {\n+\t\t\t\tif (newProperty.isDeprecated() && newProperty.getDeprecation().getLevel() == Deprecation.Level.ERROR) {\n+\t\t\t\t\tdifferences.add(new Difference(DifferenceType.DELETED, null, newProperty));\n+\t\t\t\t}\n+\t\t\t\telse if (!newProperty.isDeprecated()) {\n+\t\t\t\t\tdifferences.add(new Difference(DifferenceType.ADDED, null, newProperty));\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn List.copyOf(differences);\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/java/org/springframework/boot/configurationmetadata/changelog/ChangelogTests.java b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/java/org/springframework/boot/configurationmetadata/changelog/ChangelogTests.java\nindex 5057cb8087ee..8d59cb65ade9 100644\n--- a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/java/org/springframework/boot/configurationmetadata/changelog/ChangelogTests.java\n+++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/java/org/springframework/boot/configurationmetadata/changelog/ChangelogTests.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2023 the original author or authors.\n+ * Copyright 2012-2025 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -29,6 +29,7 @@\n  *\n  * @author Stephane Nicoll\n  * @author Andy Wilkinson\n+ * @author Yoobin Yoon\n  */\n class ChangelogTests {\n \n@@ -38,7 +39,7 @@ void diffContainsDifferencesBetweenLeftAndRightInputs() {\n \t\tassertThat(differences).isNotNull();\n \t\tassertThat(differences.oldVersionNumber()).isEqualTo(\"1.0\");\n \t\tassertThat(differences.newVersionNumber()).isEqualTo(\"2.0\");\n-\t\tassertThat(differences.differences()).hasSize(4);\n+\t\tassertThat(differences.differences()).hasSize(5);\n \t\tList<Difference> added = differences.differences()\n \t\t\t.stream()\n \t\t\t.filter((difference) -> difference.type() == DifferenceType.ADDED)\n@@ -49,10 +50,12 @@ void diffContainsDifferencesBetweenLeftAndRightInputs() {\n \t\t\t.stream()\n \t\t\t.filter((difference) -> difference.type() == DifferenceType.DELETED)\n \t\t\t.toList();\n-\t\tassertThat(deleted).hasSize(2)\n+\t\tassertThat(deleted).hasSize(3)\n \t\t\t.anySatisfy((entry) -> assertProperty(entry.oldProperty(), \"test.delete\", String.class, \"delete\"))\n \t\t\t.anySatisfy(\n-\t\t\t\t\t(entry) -> assertProperty(entry.newProperty(), \"test.delete.deprecated\", String.class, \"delete\"));\n+\t\t\t\t\t(entry) -> assertProperty(entry.newProperty(), \"test.delete.deprecated\", String.class, \"delete\"))\n+\t\t\t.anySatisfy((entry) -> assertProperty(entry.newProperty(), \"test.removed.directly\", String.class,\n+\t\t\t\t\t\"directlyRemoved\"));\n \t\tList<Difference> deprecated = differences.differences()\n \t\t\t.stream()\n \t\t\t.filter((difference) -> difference.type() == DifferenceType.DEPRECATED)\ndiff --git a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/resources/sample-2.0.json b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/resources/sample-2.0.json\nindex ef959d39c9eb..897c7b6dbc3b 100644\n--- a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/resources/sample-2.0.json\n+++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/resources/sample-2.0.json\n@@ -31,6 +31,17 @@\n         \"replacement\": \"test.add\",\n         \"reason\": \"it was just bad\"\n       }\n+    },\n+    {\n+      \"name\": \"test.removed.directly\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"Test property removed without prior deprecation.\",\n+      \"defaultValue\": \"directlyRemoved\",\n+      \"deprecation\": {\n+        \"level\": \"error\",\n+        \"replacement\": \"test.new.property\",\n+        \"reason\": \"Removed in Upgrade 10\"\n+      }\n     }\n   ]\n-}\n\\ No newline at end of file\n+}\ndiff --git a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/resources/sample.adoc b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/resources/sample.adoc\nindex 26876aa85426..21963bffaa0c 100644\n--- a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/resources/sample.adoc\n+++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/test/resources/sample.adoc\n@@ -32,4 +32,8 @@ _None_.\n | `test.delete.deprecated`\n | `test.add`\n | it was just bad\n+\n+| `test.removed.directly`\n+| `test.new.property`\n+| Removed in Upgrade 10\n |======================\n",
    "problem_statement": "Configuration properties changelog generator misses items that are removed without prior deprecation\nSometimes we have to remove a configuration property without it being deprecated first. An example of this is when we upgraded to Flyway 10. They removed a handful of settings without any replacement so our properties had to be updated to match. These changes were reflected in the metadata in [this commit](https://github.com/spring-projects/spring-boot/commit/62f922369d2714847f8e0f559e282f62d8eac63d) but the generator does not include them in the changelog.",
    "hints_text": "Configuration properties changelog generator misses items that are removed without prior deprecation\n## Issue\r\nCloses #40075 \r\n\r\nThe configuration properties changelog generator misses items that are removed without prior deprecation. When a property is removed without being deprecated first (like during the Flyway 10 upgrade), these changes are reflected in the metadata but not included in the generated changelog.\r\n\r\n## Solution\r\nModified the `computeDifferences` method in the `Changelog` class to detect properties that only exist in the new metadata with error-level deprecation and properly mark them as DELETED in the changelog. This ensures that properties that are added to a new version with error-level deprecation (indicating immediate removal) are correctly included in the \"Removed in X.X\" section of the changelog.\r\n\r\nSpecifically, added logic to check for properties in the new metadata that\r\n1. Don't exist in the old metadata\r\n2. Have an error-level deprecation\r\n3. Should be classified as DELETED rather than being ignored\r\n\r\n## Tests\r\nThe existing test `diffContainsDifferencesBetweenLeftAndRightInputs` already verifies this functionality by testing that properties with error-level deprecation are properly classified as DELETED. \r\n\r\nTo make the test cover this fix, we enhanced the `sample-2.0.json` test data to include an additional property (`test.removed.directly`) that demonstrates a property removed without prior deprecation, marked with error-level deprecation and a reason \"Removed in Upgrade 10\".\r\n\r\nAfter fix, this test confirms that both regular removed properties and those marked with error-level deprecation are correctly included in the changelog.\r\n",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot:compileTestFixturesJava",
      "spring-boot-project:spring-boot:testFixturesClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot:testFixturesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "buildSrc:validatePlugins",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "buildSrc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "buildSrc:check",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:test",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:classes",
      "spring-boot-project:spring-boot-docs:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-testcontainers:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-project:spring-boot-docs:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:compileJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:classes",
      "spring-boot-project:spring-boot-docs:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:classes",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:test",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:test",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-project:spring-boot-docs:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:syncAntSources",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:test",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-testcontainers:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-elasticsearch:classes",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-elasticsearch:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-project:spring-boot-testcontainers:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:test",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 45251,
    "instance_id": "spring-projects__spring-boot_45251",
    "issue_numbers": [
      43885
    ],
    "base_commit": "c6e47d063aa281dbdef33105e72d734aa753c469",
    "patch": "diff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java\nindex e5a5e0bdf2e6..a479565b1a02 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java\n@@ -69,6 +69,7 @@\n  *\n  * @author Andy Wilkinson\n  * @author Phillip Webb\n+ * @author Yongjun Hong\n  * @since 2.0.0\n  */\n @ManagementContextConfiguration(proxyBeanMethods = false)\n@@ -93,6 +94,18 @@ public WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping(WebEndpoint\n \t\tallEndpoints.addAll(controllerEndpointsSupplier.getEndpoints());\n \t\tString basePath = webEndpointProperties.getBasePath();\n \t\tEndpointMapping endpointMapping = new EndpointMapping(basePath);\n+\n+\t\tif (basePath.isEmpty() && ManagementPortType.get(environment).equals(ManagementPortType.SAME)) {\n+\t\t\tfor (ExposableWebEndpoint endpoint : webEndpoints) {\n+\t\t\t\tif (\"/\".equals(endpoint.getRootPath())) {\n+\t\t\t\t\tthrow new IllegalStateException(\n+\t\t\t\t\t\t\t\"Management endpoints and endpoint path are both mapped to '/' on the server port which will \"\n+\t\t\t\t\t\t\t\t\t+ \"block access to other endpoints. Please use a different path for management endpoints or \"\n+\t\t\t\t\t\t\t\t\t+ \"map them to a dedicated management port.\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n \t\tboolean shouldRegisterLinksMapping = shouldRegisterLinksMapping(webEndpointProperties, environment, basePath);\n \t\treturn new WebMvcEndpointHandlerMapping(endpointMapping, webEndpoints, endpointMediaTypes,\n \t\t\t\tcorsProperties.toCorsConfiguration(), new EndpointLinksResolver(allEndpoints, basePath),\n",
    "test_patch": "diff --git a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementEndpointConflictSmokeTest.java b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementEndpointConflictSmokeTest.java\nnew file mode 100644\nindex 000000000000..8cfa7ce64bc5\n--- /dev/null\n+++ b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementEndpointConflictSmokeTest.java\n@@ -0,0 +1,27 @@\n+package smoketest.actuator;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import org.springframework.beans.factory.BeanCreationException;\n+import org.springframework.boot.SpringApplication;\n+\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+/**\n+ * Verifies that an exception is thrown when management and server endpoint paths\n+ * conflict.\n+ *\n+ * @author Yongjun Hong\n+ */\n+class ManagementEndpointConflictSmokeTest {\n+\n+\t@Test\n+\tvoid shouldThrowExceptionWhenManagementAndServerPathsConflict() {\n+\t\tassertThatThrownBy(() -> {\n+\t\t\tSpringApplication.run(SampleActuatorApplication.class, \"--management.endpoints.web.base-path=/\",\n+\t\t\t\t\t\"--management.endpoints.web.path-mapping.health=/\");\n+\t\t}).isInstanceOf(BeanCreationException.class)\n+\t\t\t.hasMessageContaining(\"Management endpoints and endpoint path are both mapped to '/'\");\n+\t}\n+\n+}\n\\ No newline at end of file\n",
    "problem_statement": "Fail fast if management base path and an endpoint mapping are both '/' on the main server port\nImpossible for me to say if this is a bug or a feature/documented change, hence the ticket. Facts:\n* the config below worked fine before the patch from #35426 (e.g. SB actuator 3.2.1) - actually, it's been used for literal ages, since early 2.x versions\n* after going to any version with #35426 fix, (e.g. SB actuator 3.2.2) - it suddenly breaks. The RestController is no longer accessible at all, app acts like it \"disappeared\", even though it is still listed in the mappings\n\ntest snippets:\n\n```kotlin\n@RestController\n@RequestMapping(\"/api\")\nclass TestController {\n\n    @PostMapping(\"endpoint\")\n    fun endpoint(): HttpEntity<*> {\n        return ResponseEntity.EMPTY\n    }\n\n}\n```\n\n```yaml\nmanagement:\n  endpoints.web:\n    base-path: \"/\"\n    path-mapping:\n      health: \"/\"\n```\n\nresults for 3.2.1:\n```\nGET -> 405\nPOST -> 200\nPUT -> 405\n```\nresults for 3.2.2:\n```\nGET -> 404\nPOST -> 405\nPUT -> 405\n```\n\nFurther details:\n\n* The config shown doesn't throw any exception and never did.\n* I also didn't notice any kind of warnings emitted with it (went through logs with DEBUG log level)\n* Changing `health` from `/` to e.g. `/foo` \"fixes\" the behaviour (i.e. the endpoints start to work again)\n* Changing `base-path` to anything else than `/` (e.g. `/foo`) in this case triggers: ` Ambiguous mapping. Cannot map 'Actuator root web endpoint' method Actuator root web endpoint to {GET [/foo], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}: There is already 'Actuator web endpoint 'health'' bean method`\n\nMy take on it is:\n\n* If this config (i.e. both `base-path` and at least one of the mappings equal to `/`) is deemed invalid, it should throw an exception during bean init for this particular case, like the case with non-`/` base and `/` endpoint. However, the valid use case for this was hiding the \"root\" actuator endpoint AFAIK.\n* If this config is deemed valid, the RestController should still work when that config is used.\n---\n\nWith all honesty, I'd say this is a bug, mainly due to backwards-compatibility reasons. The code in question did work in previous patches in the same major/minor release (AFAIK both 3.2 and 3.1 are affected in this way), and a patch shouldn't introduce breaking changes that ain't backwards-compatible even if they are just fixing some abuses or corner cases (and the code shown isn't even really one of those I'd argue). If it would introduced purely with a minor increase and clearly documented, only the lack of exception thrown would be a problem here.",
    "hints_text": "Fail fast when both management 'base path' and 'endpoint mapping' are set to '/'\nfixes #43885 \r\n\r\n<!--\r\nThanks for contributing to Spring Boot. Please review the following notes before\r\nsubmitting a pull request.\r\n\r\nPlease submit only genuine pull-requests. Do not use this repository as a GitHub\r\nplayground.\r\n\r\nSecurity Vulnerabilities\r\n\r\nSTOP! If your contribution fixes a security vulnerability, please do not submit it.\r\nInstead, please head over to https://spring.io/security-policy to learn how to disclose a\r\nvulnerability responsibly.\r\n\r\nDependency Upgrades\r\n\r\nPlease do not open a pull request for a straightforward dependency upgrade (one that\r\nonly updates the version property). We have a semi-automated process for such upgrades\r\nthat we prefer to use. However, if the upgrade is more involved (such as requiring\r\nchanges for removed or deprecated API) your pull request is most welcome.\r\n\r\nDescribing Your Changes\r\n\r\nIf, having reviewed the notes above, you're ready to submit your pull request, please\r\nprovide a brief description of the proposed changes. If they fix a bug, please\r\ndescribe the broken behaviour and how the changes fix it. If they make an enhancement,\r\nplease describe the new functionality and why you believe it's useful. If your pull\r\nrequest relates to any existing issues, please reference them by using the issue number\r\nprefixed with #.\r\n-->\r\n",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "buildSrc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "buildSrc:validatePlugins",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "buildSrc:check",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:processResources",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-mustache:processResources",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-docs:compileTestJava",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-groovy-templates:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-thymeleaf:processResources",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-freemarker:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:processResources",
      "spring-boot-project:spring-boot-docs:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow-ssl:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-docs:test",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot:compileTestFixturesJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot:testFixturesClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-docs:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:syncAntSources",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processTestResources",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:processResources",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot:testFixturesJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging-log4j2:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-static:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:processResources",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:processResources",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webservices:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-method-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux-coroutines:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-application-type:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-custom:processResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot:generateMetadataFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-project:spring-boot:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processResources"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 44964,
    "instance_id": "spring-projects__spring-boot_44964",
    "issue_numbers": [
      44959
    ],
    "base_commit": "88b5ad04e5b7c9beaf9b0e542537f3c756f28d4f",
    "patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java\nindex 7456c00ed868..4ff371300b1b 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java\n@@ -153,7 +153,7 @@ public String toString() {\n \t * @param outcome the outcome to inverse\n \t * @return the inverse of the condition outcome\n \t * @since 1.3.0\n-\t * @deprecated since 3.5.0 for removal in 3.7.0 in favor of\n+\t * @deprecated since 3.5.0 for removal in 4.0.0 in favor of\n \t * {@link #ConditionOutcome(boolean, ConditionMessage)}\n \t */\n \t@Deprecated(since = \"3.5.0\", forRemoval = true)\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/DefaultJmsListenerContainerFactoryConfigurer.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/DefaultJmsListenerContainerFactoryConfigurer.java\nindex 374f64b46159..098c0b2c048b 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/DefaultJmsListenerContainerFactoryConfigurer.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/DefaultJmsListenerContainerFactoryConfigurer.java\n@@ -101,7 +101,7 @@ void setJmsProperties(JmsProperties jmsProperties) {\n \t * Set the {@link ObservationRegistry} to use.\n \t * @param observationRegistry the {@link ObservationRegistry}\n \t * @since 3.2.1\n-\t * @deprecated since 3.3.10 for removal in 3.6.0 as this should have been package\n+\t * @deprecated since 3.3.10 for removal in 4.0.0 as this should have been package\n \t * private\n \t */\n \t@Deprecated(since = \"3.3.10\", forRemoval = true)\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaConnectionDetails.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaConnectionDetails.java\nindex 19214b4c5a71..5f274f891a3a 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaConnectionDetails.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaConnectionDetails.java\n@@ -94,7 +94,7 @@ default Configuration getStreams() {\n \t/**\n \t * Returns the list of bootstrap servers used for consumers.\n \t * @return the list of bootstrap servers used for consumers\n-\t * @deprecated since 3.5.0 for removal in 3.7.0 in favor of {@link #getConsumer()}\n+\t * @deprecated since 3.5.0 for removal in 4.0.0 in favor of {@link #getConsumer()}\n \t */\n \t@Deprecated(since = \"3.5.0\", forRemoval = true)\n \tdefault List<String> getConsumerBootstrapServers() {\n@@ -104,7 +104,7 @@ default List<String> getConsumerBootstrapServers() {\n \t/**\n \t * Returns the list of bootstrap servers used for producers.\n \t * @return the list of bootstrap servers used for producers\n-\t * @deprecated since 3.5.0 for removal in 3.7.0 in favor of {@link #getProducer()}\n+\t * @deprecated since 3.5.0 for removal in 4.0.0 in favor of {@link #getProducer()}\n \t */\n \t@Deprecated(since = \"3.5.0\", forRemoval = true)\n \tdefault List<String> getProducerBootstrapServers() {\n@@ -114,7 +114,7 @@ default List<String> getProducerBootstrapServers() {\n \t/**\n \t * Returns the list of bootstrap servers used for the admin.\n \t * @return the list of bootstrap servers used for the admin\n-\t * @deprecated since 3.5.0 for removal in 3.7.0 in favor of {@link #getAdmin()}\n+\t * @deprecated since 3.5.0 for removal in 4.0.0 in favor of {@link #getAdmin()}\n \t */\n \t@Deprecated(since = \"3.5.0\", forRemoval = true)\n \tdefault List<String> getAdminBootstrapServers() {\n@@ -124,7 +124,7 @@ default List<String> getAdminBootstrapServers() {\n \t/**\n \t * Returns the list of bootstrap servers used for Kafka Streams.\n \t * @return the list of bootstrap servers used for Kafka Streams\n-\t * @deprecated since 3.5.0 for removal in 3.7.0 in favor of {@link #getStreams()}\n+\t * @deprecated since 3.5.0 for removal in 4.0.0 in favor of {@link #getStreams()}\n \t */\n \t@Deprecated(since = \"3.5.0\", forRemoval = true)\n \tdefault List<String> getStreamsBootstrapServers() {\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/StandardMongoClientSettingsBuilderCustomizer.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/StandardMongoClientSettingsBuilderCustomizer.java\nindex 01d770a41810..34ac7bece4c6 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/StandardMongoClientSettingsBuilderCustomizer.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/StandardMongoClientSettingsBuilderCustomizer.java\n@@ -55,7 +55,7 @@ public class StandardMongoClientSettingsBuilderCustomizer implements MongoClient\n \t * @param uuidRepresentation the uuid representation\n \t * @param ssl the ssl properties\n \t * @param sslBundles the ssl bundles\n-\t * @deprecated since 3.5.0 for removal in 3.7.0 in favor of\n+\t * @deprecated since 3.5.0 for removal in 4.0.0 in favor of\n \t * {@link #StandardMongoClientSettingsBuilderCustomizer(MongoConnectionDetails, UuidRepresentation)}\n \t */\n \t@Deprecated(forRemoval = true, since = \"3.5.0\")\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java\nindex 2e6ab356f782..6d93dd71a660 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java\n@@ -159,7 +159,7 @@ public LocalContainerEntityManagerFactoryBean entityManagerFactory(EntityManager\n \t/**\n \t * Return the vendor-specific properties.\n \t * @return the vendor properties\n-\t * @deprecated since 3.4.4 for removal in 3.6.0 in favor of\n+\t * @deprecated since 3.4.4 for removal in 4.0.0 in favor of\n \t * {@link #getVendorProperties(DataSource)}\n \t */\n \t@Deprecated(since = \"3.4.4\", forRemoval = true)\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition.java\nindex 6bd518524aa3..e26c9b1c59f8 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition.java\n@@ -35,7 +35,7 @@\n  *\n  * @author Madhura Bhave\n  * @since 2.1.0\n- * @deprecated since 3.5.0 for removal in 3.7.0 in favor of\n+ * @deprecated since 3.5.0 for removal in 4.0.0 in favor of\n  * {@link ConditionalOnOAuth2ClientRegistrationProperties @ConditionalOnOAuth2ClientRegistrationConfigured}\n  */\n @Deprecated(since = \"3.5.0\", forRemoval = true)\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/IssuerUriCondition.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/IssuerUriCondition.java\nindex 867860041d84..1ce670198af2 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/IssuerUriCondition.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/IssuerUriCondition.java\n@@ -26,12 +26,13 @@\n import org.springframework.util.StringUtils;\n \n /**\n- * Condition for creating {@link JwtDecoder} by oidc issuer location.\n+ * Condition that checks that a JWT issuer URI is configured correctly for\n+ * {@code spring.security.oauth2.resourceserver.jwt.issuer-uri}.\n  *\n- * @author Artsiom Yudovin\n- * @since 2.1.0\n- * @deprecated since 3.5.0 for removal in 3.7.0 in favor of\n- * {@link ConditionalOnIssuerLocationJwtDecoder @ConditionalOnIssuerLocationJwtDecoder}\n+ * @author Phillip Webb\n+ * @since 3.3.0\n+ * @deprecated since 3.5.0 for removal in 4.0.0 in favor of\n+ * {@code org.springframework.boot.autoconfigure.security.oauth2.server.resource.IssuerUriCondition}\n  */\n @Deprecated(since = \"3.5.0\", forRemoval = true)\n public class IssuerUriCondition extends SpringBootCondition {\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/KeyValueCondition.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/KeyValueCondition.java\nindex 54354793b409..da0b0e299ec0 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/KeyValueCondition.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/KeyValueCondition.java\n@@ -25,12 +25,13 @@\n import org.springframework.util.StringUtils;\n \n /**\n- * Condition for creating a jwt decoder using a public key value.\n+ * Condition that check that a JWT key value configuration exists for\n+ * {@code spring.security.oauth2.resourceserver.jwt.key-value}.\n  *\n- * @author Madhura Bhave\n- * @since 2.2.0\n- * @deprecated since 3.5.0 for removal in 3.7.0 in favor of\n- * {@link ConditionalOnPublicKeyJwtDecoder @ConditionalOnPublicKeyJwtDecoder}\n+ * @author Phillip Webb\n+ * @since 3.3.0\n+ * @deprecated since 3.5.0 for removal in 4.0.0 in favor of\n+ * {@code org.springframework.boot.autoconfigure.security.oauth2.server.resource.KeyValueCondition}\n  */\n @Deprecated(since = \"3.5.0\", forRemoval = true)\n public class KeyValueCondition extends SpringBootCondition {\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/AntPathRequestMatcherProvider.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/AntPathRequestMatcherProvider.java\nindex 7ee63056f2d0..a9d776620bcf 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/AntPathRequestMatcherProvider.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/AntPathRequestMatcherProvider.java\n@@ -26,7 +26,7 @@\n  *\n  * @author Madhura Bhave\n  * @since 2.1.8\n- * @deprecated since 3.5.0 for removal in 3.8.0 along with {@link RequestMatcherProvider}\n+ * @deprecated since 3.5.0 for removal in 4.0.0 along with {@link RequestMatcherProvider}\n  */\n @Deprecated(since = \"3.5.0\", forRemoval = true)\n @SuppressWarnings(\"removal\")\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider.java\nindex 62745e4ef00f..08f2a34bdca1 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/RequestMatcherProvider.java\n@@ -19,13 +19,12 @@\n import org.springframework.security.web.util.matcher.RequestMatcher;\n \n /**\n- * Interface that can be used to provide a {@link RequestMatcher} that can be used with\n- * Spring Security.\n+ * Interface for components that provide {@link RequestMatcher}.\n  *\n  * @author Madhura Bhave\n- * @since 2.0.5\n- * @deprecated since 3.5.0 for removal in 3.7.0 in favor of\n- * {@code org.springframework.boot.actuate.autoconfigure.security.servlet.RequestMatcherProvider}\n+ * @since 2.1.7\n+ * @deprecated since 3.5.0 for removal in 4.0.0 in favor of\n+ * {@code org.springframework.security.web.util.matcher.RequestMatcherProvider}\n  */\n @Deprecated(since = \"3.5.0\", forRemoval = true)\n @FunctionalInterface\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/ConditionReportApplicationContextFailureProcessor.java b/spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/ConditionReportApplicationContextFailureProcessor.java\nindex 66e45638b8b4..d197408a5785 100644\n--- a/spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/ConditionReportApplicationContextFailureProcessor.java\n+++ b/spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/ConditionReportApplicationContextFailureProcessor.java\n@@ -29,7 +29,7 @@\n  * @author Phillip Webb\n  * @author Scott Frederick\n  * @since 3.0.0\n- * @deprecated in 3.2.11 for removal in 3.6.0\n+ * @deprecated in 3.2.11 for removal in 4.0.0\n  */\n @Deprecated(since = \"3.2.11\", forRemoval = true)\n public class ConditionReportApplicationContextFailureProcessor implements ApplicationContextFailureProcessor {\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/cassandra/DeprecatedCassandraContainerConnectionDetailsFactoryTests.java b/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/cassandra/DeprecatedCassandraContainerConnectionDetailsFactoryTests.java\nindex 6d13f8edddcc..b5b09bce1ca1 100644\n--- a/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/cassandra/DeprecatedCassandraContainerConnectionDetailsFactoryTests.java\n+++ b/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/cassandra/DeprecatedCassandraContainerConnectionDetailsFactoryTests.java\n@@ -36,8 +36,10 @@\n /**\n  * Tests for {@link DeprecatedCassandraContainerConnectionDetailsFactory}.\n  *\n+ * @author Moritz Halbritter\n  * @author Andy Wilkinson\n- * @deprecated since 3.4.0 for removal in 3.6.0\n+ * @author Phillip Webb\n+ * @deprecated since 3.4.0 for removal in 4.0.0\n  */\n @SpringJUnitConfig\n @Testcontainers(disabledWithoutDocker = true)\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/kafka/DeprecatedConfluentKafkaContainerConnectionDetailsFactoryIntegrationTests.java b/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/kafka/DeprecatedConfluentKafkaContainerConnectionDetailsFactoryIntegrationTests.java\nindex 3d9b0aedfe0f..acc5d1f2ec1b 100644\n--- a/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/kafka/DeprecatedConfluentKafkaContainerConnectionDetailsFactoryIntegrationTests.java\n+++ b/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/kafka/DeprecatedConfluentKafkaContainerConnectionDetailsFactoryIntegrationTests.java\n@@ -41,12 +41,12 @@\n import static org.assertj.core.api.Assertions.assertThat;\n \n /**\n- * Tests for {@link DeprecatedConfluentKafkaContainerConnectionDetailsFactory}.\n+ * Integration tests for {@link DeprecatedConfluentKafkaContainerConnectionDetailsFactory}.\n  *\n  * @author Moritz Halbritter\n  * @author Andy Wilkinson\n  * @author Phillip Webb\n- * @deprecated since 3.4.0 for removal in 3.6.0\n+ * @deprecated since 3.4.0 for removal in 4.0.0\n  */\n @SpringJUnitConfig\n @Testcontainers(disabledWithoutDocker = true)\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/lifecycle/BeforeTestcontainerUsedEvent.java b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/lifecycle/BeforeTestcontainerUsedEvent.java\nindex eeab21286084..9b74b7f61f2b 100644\n--- a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/lifecycle/BeforeTestcontainerUsedEvent.java\n+++ b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/lifecycle/BeforeTestcontainerUsedEvent.java\n@@ -26,7 +26,7 @@\n  *\n  * @author Andy Wilkinson\n  * @since 3.2.6\n- * @deprecated since 3.4.0 for removal in 3.6.0 in favor of property registration using a\n+ * @deprecated since 3.4.0 for removal in 4.0.0 in favor of property registration using a\n  * {@link DynamicPropertyRegistrar} bean that injects the {@link Container} from which the\n  * properties will be sourced.\n  */\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/properties/TestcontainersPropertySource.java b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/properties/TestcontainersPropertySource.java\nindex 0f556e50415d..c53cab08ded6 100644\n--- a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/properties/TestcontainersPropertySource.java\n+++ b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/properties/TestcontainersPropertySource.java\n@@ -54,7 +54,7 @@\n  *\n  * @author Phillip Webb\n  * @since 3.1.0\n- * @deprecated since 3.4.0 for removal in 3.6.0 in favor of declaring one or more\n+ * @deprecated since 3.4.0 for removal in 4.0.0 in favor of declaring one or more\n  * {@link DynamicPropertyRegistrar} beans.\n  */\n @SuppressWarnings(\"removal\")\n@@ -205,4 +205,14 @@ private static void throwIfNecessary(String propertyName, DynamicPropertyRegistr\n \n \t}\n \n+\t/**\n+\t * Configures a {@link GenericContainer} to collect properties and install a\n+\t * {@link PropertySource} containing it.\n+\t * @param container the container to configure\n+\t * @return the configured container\n+\t * @param <T> the {@link GenericContainer} type\n+\t * @deprecated since 3.4.0 for removal in 4.0.0 in favor of declaring one or more\n+\t * {@link Catalog} classes using the {@link Import} annotation\n+\t */\n+\n }\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/cassandra/DeprecatedCassandraContainerConnectionDetailsFactory.java b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/cassandra/DeprecatedCassandraContainerConnectionDetailsFactory.java\nindex c9932b18adb5..6527f22f4d4c 100644\n--- a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/cassandra/DeprecatedCassandraContainerConnectionDetailsFactory.java\n+++ b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/cassandra/DeprecatedCassandraContainerConnectionDetailsFactory.java\n@@ -28,15 +28,15 @@\n import org.springframework.boot.testcontainers.service.connection.ServiceConnection;\n \n /**\n- * {@link ContainerConnectionDetailsFactory} to create {@link CassandraConnectionDetails}\n- * from a {@link ServiceConnection @ServiceConnection}-annotated\n- * {@link CassandraContainer}.\n+ * Implementation of {@link ConnectionDetailsFactory} that provides\n+ * {@link CassandraConnectionDetails} from a deprecated {@link CassandraContainer}.\n  *\n  * @author Moritz Halbritter\n  * @author Andy Wilkinson\n  * @author Phillip Webb\n- * @deprecated since 3.4.0 for removal in 3.6.0 in favor of\n- * {@link CassandraContainerConnectionDetailsFactory}.\n+ * @since 3.1.0\n+ * @deprecated since 3.4.0 for removal in 4.0.0 in favor of\n+ * {@link CassandraContainerConnectionDetailsFactory}\n  */\n @Deprecated(since = \"3.4.0\", forRemoval = true)\n class DeprecatedCassandraContainerConnectionDetailsFactory\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/kafka/DeprecatedConfluentKafkaContainerConnectionDetailsFactory.java b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/kafka/DeprecatedConfluentKafkaContainerConnectionDetailsFactory.java\nindex bfd862e4327a..6d9e50e0b475 100644\n--- a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/kafka/DeprecatedConfluentKafkaContainerConnectionDetailsFactory.java\n+++ b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/kafka/DeprecatedConfluentKafkaContainerConnectionDetailsFactory.java\n@@ -27,14 +27,15 @@\n import org.springframework.boot.testcontainers.service.connection.ServiceConnection;\n \n /**\n- * {@link ContainerConnectionDetailsFactory} to create {@link KafkaConnectionDetails} from\n- * a {@link ServiceConnection @ServiceConnection}-annotated {@link KafkaContainer}.\n+ * Implementation of {@link ConnectionDetailsFactory} that provides\n+ * {@link KafkaConnectionDetails} from the deprecated {@link KafkaContainer}.\n  *\n  * @author Moritz Halbritter\n  * @author Andy Wilkinson\n  * @author Phillip Webb\n- * @deprecated since 3.4.0 for removal in 3.6.0 in favor of\n- * {@link ConfluentKafkaContainerConnectionDetailsFactory}.\n+ * @since 3.1.0\n+ * @deprecated since 3.4.0 for removal in 4.0.0 in favor of\n+ * {@link ConfluentKafkaContainerConnectionDetailsFactory}\n  */\n @Deprecated(since = \"3.4.0\", forRemoval = true)\n class DeprecatedConfluentKafkaContainerConnectionDetailsFactory\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/test/java/org/springframework/boot/testcontainers/properties/TestcontainersPropertySourceTests.java b/spring-boot-project/spring-boot-testcontainers/src/test/java/org/springframework/boot/testcontainers/properties/TestcontainersPropertySourceTests.java\nindex 177322aeedec..57a78ab6ec78 100644\n--- a/spring-boot-project/spring-boot-testcontainers/src/test/java/org/springframework/boot/testcontainers/properties/TestcontainersPropertySourceTests.java\n+++ b/spring-boot-project/spring-boot-testcontainers/src/test/java/org/springframework/boot/testcontainers/properties/TestcontainersPropertySourceTests.java\n@@ -41,7 +41,9 @@\n  * Tests for {@link TestcontainersPropertySource}.\n  *\n  * @author Phillip Webb\n- * @deprecated since 3.4.0 for removal in 3.6.0\n+ * @author Andy Wilkinson\n+ * @since 3.1.0\n+ * @deprecated since 3.4.0 for removal in 4.0.0\n  */\n @SuppressWarnings(\"removal\")\n @Deprecated(since = \"3.4.0\", forRemoval = true)\ndiff --git a/spring-boot-project/spring-boot-tools/spring-boot-test-support-docker/src/main/java/org/springframework/boot/testsupport/container/TestImage.java b/spring-boot-project/spring-boot-tools/spring-boot-test-support-docker/src/main/java/org/springframework/boot/testsupport/container/TestImage.java\nindex c33813769f00..cd59344757fb 100644\n--- a/spring-boot-project/spring-boot-tools/spring-boot-test-support-docker/src/main/java/org/springframework/boot/testsupport/container/TestImage.java\n+++ b/spring-boot-project/spring-boot-tools/spring-boot-test-support-docker/src/main/java/org/springframework/boot/testsupport/container/TestImage.java\n@@ -87,7 +87,7 @@ public enum TestImage {\n \t/**\n \t * A container image suitable for testing Cassandra using the deprecated\n \t * {@link org.testcontainers.containers.CassandraContainer}.\n-\t * @deprecated since 3.4.0 for removal in 3.6.0 in favor of {@link #CASSANDRA}\n+\t * @deprecated since 3.4.0 for removal in 4.0.0 in favor of {@link #CASSANDRA}\n \t */\n \t@SuppressWarnings(\"deprecation\")\n \t@Deprecated(since = \"3.4.0\", forRemoval = true)\n@@ -139,7 +139,7 @@ public enum TestImage {\n \t/**\n \t * A container image suitable for testing Confluent's distribution of Kafka using the\n \t * deprecated {@link org.testcontainers.containers.KafkaContainer}.\n-\t * @deprecated since 3.4.0 for removal in 3.6.0 in favor of {@link #CONFLUENT_KAFKA}\n+\t * @deprecated since 3.4.0 for removal in 4.0.0 in favor of {@link #CONFLUENT_KAFKA}\n \t */\n \t@SuppressWarnings(\"deprecation\")\n \t@Deprecated(since = \"3.4.0\", forRemoval = true)\ndiff --git a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-data-jpa/src/test/java/smoketest/data/jpa/SpyBeanSampleDataJpaApplicationTests.java b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-data-jpa/src/test/java/smoketest/data/jpa/SpyBeanSampleDataJpaApplicationTests.java\nindex 8b944b59c4fd..40321c1f4415 100644\n--- a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-data-jpa/src/test/java/smoketest/data/jpa/SpyBeanSampleDataJpaApplicationTests.java\n+++ b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-data-jpa/src/test/java/smoketest/data/jpa/SpyBeanSampleDataJpaApplicationTests.java\n@@ -30,10 +30,10 @@\n import static org.mockito.BDDMockito.then;\n \n /**\n- * Tests for {@link SampleDataJpaApplication} that use {@link SpyBean @SpyBean}.\n+ * Tests that spy beans can be used with JPA.\n  *\n- * @author Andy Wilkinson\n- * @deprecated since 3.4.0 for removal in 3.6.0\n+ * @author Phillip Webb\n+ * @deprecated since 3.4.0 for removal in 4.0.0\n  */\n @SuppressWarnings(\"removal\")\n @Deprecated(since = \"3.4.0\", forRemoval = true)\n",
    "problem_statement": "Update \"for removal\" versions > 3.5.0 to 4.0.0\nSince 3.5.x is the last 3.x generation we should update all our deprecation removal versions",
    "hints_text": "Update 'for removal' versions > 3.5.0 to 4.0.0\n   Fixes #44959\r\n   \r\nSince 3.5.x is the last 3x generation, this PR updates all our deprecation removal versions from >3.5.0 (like 3.6.0, 3.7.0, etc.) to 4.0.0. This ensures a consistent deprecation timeline with no scheduled removals in versions that won't exist.\r\n   \r\nThe updates are only to JavaDoc comments, not to the actual code or @Deprecated annotations, which don't contain version-specific removal information.",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-docs:compileTestJava",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-project:spring-boot-test:testClasses",
      "buildSrc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-project:spring-boot-testcontainers:testClasses",
      "spring-boot-project:spring-boot-docs:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-docs:test",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot:compileTestFixturesJava",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot:testFixturesClasses",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-docs:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot:javadoc",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-testcontainers:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot:testFixturesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "buildSrc:validatePlugins",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "buildSrc:check",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:test",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 44962,
    "instance_id": "spring-projects__spring-boot_44962",
    "issue_numbers": [
      44958
    ],
    "base_commit": "4f6a99a21449a856ec652d994a6f74067f049b84",
    "patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/client/HttpClientProperties.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/client/HttpClientProperties.java\nindex abdc2e0c4c13..b60128043b23 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/client/HttpClientProperties.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/client/HttpClientProperties.java\n@@ -30,7 +30,7 @@\n  * @author Phillip Webb\n  * @since 3.4.0\n  */\n-@ConfigurationProperties(\"spring.http.client\")\n+@ConfigurationProperties(\"spring.http.clients\")\n public class HttpClientProperties {\n \n \t/**\ndiff --git a/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/io/rest-client.adoc b/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/io/rest-client.adoc\nindex b0a8045b3476..fd9d0acfabac 100644\n--- a/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/io/rest-client.adoc\n+++ b/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/io/rest-client.adoc\n@@ -209,14 +209,14 @@ If multiple clients are available on the classpath, and not global configuration\n [[io.rest-client.clienthttprequestfactory.configuration]]\n === Global HTTP Client Configuration\n \n-If the auto-detected HTTP client does not meet your needs, you can use the configprop:spring.http.client.factory[] property to pick a specific factory.\n+If the auto-detected HTTP client does not meet your needs, you can use the configprop:spring.http.clients.factory[] property to pick a specific factory.\n For example, if you have Apache HttpClient on your classpath, but you prefer Jetty's javadoc:org.eclipse.jetty.client.HttpClient[] you can add the following:\n \n [configprops,yaml]\n ----\n spring:\n   http:\n-    client:\n+    clients:\n       factory: jetty\n ----\n \n@@ -227,7 +227,7 @@ For example, you may want to change timeouts and if redirects are followed:\n ----\n spring:\n   http:\n-    client:\n+    clients:\n       connect-timeout: 2s\n       read-timeout: 1s\n       redirects: dont-follow\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfigurationTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfigurationTests.java\nindex 85a23fae4a02..de63b45983e5 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfigurationTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfigurationTests.java\n@@ -53,7 +53,7 @@ void configuresDetectedClientHttpRequestFactoryBuilder() {\n \n \t@Test\n \tvoid configuresDefinedClientHttpRequestFactoryBuilder() {\n-\t\tthis.contextRunner.withPropertyValues(\"spring.http.client.factory=simple\")\n+\t\tthis.contextRunner.withPropertyValues(\"spring.http.clients.factory=simple\")\n \t\t\t.run((context) -> assertThat(context.getBean(ClientHttpRequestFactoryBuilder.class))\n \t\t\t\t.isInstanceOf(SimpleClientHttpRequestFactoryBuilder.class));\n \t}\n@@ -61,8 +61,8 @@ void configuresDefinedClientHttpRequestFactoryBuilder() {\n \t@Test\n \tvoid configuresClientHttpRequestFactorySettings() {\n \t\tthis.contextRunner.withPropertyValues(sslPropertyValues().toArray(String[]::new))\n-\t\t\t.withPropertyValues(\"spring.http.client.redirects=dont-follow\", \"spring.http.client.connect-timeout=10s\",\n-\t\t\t\t\t\"spring.http.client.read-timeout=20s\", \"spring.http.client.ssl.bundle=test\")\n+\t\t\t.withPropertyValues(\"spring.http.clients.redirects=dont-follow\", \"spring.http.clients.connect-timeout=10s\",\n+\t\t\t\t\t\"spring.http.clients.read-timeout=20s\", \"spring.http.clients.ssl.bundle=test\")\n \t\t\t.run((context) -> {\n \t\t\t\tClientHttpRequestFactorySettings settings = context.getBean(ClientHttpRequestFactorySettings.class);\n \t\t\t\tassertThat(settings.redirects()).isEqualTo(Redirects.DONT_FOLLOW);\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfigurationTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfigurationTests.java\nindex b5bb408f5992..3fce696168cd 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfigurationTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfigurationTests.java\n@@ -162,7 +162,7 @@ void restClientWhenHasCustomMessageConvertersShouldHaveMessageConverters() {\n \tvoid whenHasFactoryProperty() {\n \t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HttpMessageConvertersAutoConfiguration.class))\n \t\t\t.withUserConfiguration(RestClientConfig.class)\n-\t\t\t.withPropertyValues(\"spring.http.client.factory=simple\")\n+\t\t\t.withPropertyValues(\"spring.http.clients.factory=simple\")\n \t\t\t.run((context) -> {\n \t\t\t\tassertThat(context).hasSingleBean(RestClient.class);\n \t\t\t\tRestClient restClient = context.getBean(RestClient.class);\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfigurationTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfigurationTests.java\nindex 43d718ab41c0..328075446f4d 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfigurationTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfigurationTests.java\n@@ -197,7 +197,7 @@ void whenReactiveWebApplicationRestTemplateBuilderIsNotConfigured() {\n \tvoid whenHasFactoryProperty() {\n \t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HttpMessageConvertersAutoConfiguration.class))\n \t\t\t.withUserConfiguration(RestTemplateConfig.class)\n-\t\t\t.withPropertyValues(\"spring.http.client.factory=simple\")\n+\t\t\t.withPropertyValues(\"spring.http.clients.factory=simple\")\n \t\t\t.run((context) -> {\n \t\t\t\tassertThat(context).hasSingleBean(RestTemplate.class);\n \t\t\t\tRestTemplate restTemplate = context.getBean(RestTemplate.class);\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webservices/client/WebServiceTemplateAutoConfigurationTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webservices/client/WebServiceTemplateAutoConfigurationTests.java\nindex 1ca35447a09d..5a9a9e7df57c 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webservices/client/WebServiceTemplateAutoConfigurationTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webservices/client/WebServiceTemplateAutoConfigurationTests.java\n@@ -99,7 +99,7 @@ void builderShouldBeFreshForEachUse() {\n \t@Test\n \tvoid whenHasFactoryProperty() {\n \t\tthis.contextRunner.withConfiguration(AutoConfigurations.of(HttpMessageConvertersAutoConfiguration.class))\n-\t\t\t.withPropertyValues(\"spring.http.client.factory=simple\")\n+\t\t\t.withPropertyValues(\"spring.http.clients.factory=simple\")\n \t\t\t.run(assertWebServiceTemplateBuilder((builder) -> {\n \t\t\t\tWebServiceTemplate webServiceTemplate = builder.build();\n \t\t\t\tassertThat(webServiceTemplate.getMessageSenders()).hasSize(1);\ndiff --git a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-groovy-templates/src/test/java/smoketest/groovytemplates/SampleGroovyTemplateApplicationTests.java b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-groovy-templates/src/test/java/smoketest/groovytemplates/SampleGroovyTemplateApplicationTests.java\nindex c39aab49c3ce..19da9c96d980 100644\n--- a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-groovy-templates/src/test/java/smoketest/groovytemplates/SampleGroovyTemplateApplicationTests.java\n+++ b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-groovy-templates/src/test/java/smoketest/groovytemplates/SampleGroovyTemplateApplicationTests.java\n@@ -37,7 +37,7 @@\n  *\n  * @author Dave Syer\n  */\n-@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, properties = \"spring.http.client.redirects=dont-follow\")\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, properties = \"spring.http.clients.redirects=dont-follow\")\n class SampleGroovyTemplateApplicationTests {\n \n \t@LocalServerPort\ndiff --git a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-method-security/src/test/java/smoketest/security/method/SampleMethodSecurityApplicationTests.java b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-method-security/src/test/java/smoketest/security/method/SampleMethodSecurityApplicationTests.java\nindex d78199090f4d..ecd4abdf338b 100644\n--- a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-method-security/src/test/java/smoketest/security/method/SampleMethodSecurityApplicationTests.java\n+++ b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-method-security/src/test/java/smoketest/security/method/SampleMethodSecurityApplicationTests.java\n@@ -43,7 +43,7 @@\n  * @author Dave Syer\n  * @author Scott Frederick\n  */\n-@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, properties = \"spring.http.client.factory=simple\")\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, properties = \"spring.http.clients.factory=simple\")\n class SampleMethodSecurityApplicationTests {\n \n \t@LocalServerPort\ndiff --git a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-thymeleaf/src/test/java/smoketest/web/thymeleaf/SampleWebUiApplicationTests.java b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-thymeleaf/src/test/java/smoketest/web/thymeleaf/SampleWebUiApplicationTests.java\nindex 4da6f8fd433c..05cebb65005b 100644\n--- a/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-thymeleaf/src/test/java/smoketest/web/thymeleaf/SampleWebUiApplicationTests.java\n+++ b/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-thymeleaf/src/test/java/smoketest/web/thymeleaf/SampleWebUiApplicationTests.java\n@@ -37,7 +37,7 @@\n  *\n  * @author Dave Syer\n  */\n-@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, properties = \"spring.http.client.redirects=dont-follow\")\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, properties = \"spring.http.clients.redirects=dont-follow\")\n class SampleWebUiApplicationTests {\n \n \t@Autowired\n",
    "problem_statement": "Rename 'spring.http.client' properties to 'spring.http.client.settings'\nMuch like we have `properties.actuator.management.endpoints` for properties that change all endpoints, we should have probably really named `spring.http.client` as `spring.http.clients`.\n\nEDIT: We've reconsidered and we'd like to use `spring.http.client.settings`",
    "hints_text": "Rename 'spring.http.client' properties to 'spring.http.clients'\nThis PR renames the properties from `spring.http.client` to `spring.http.clients` to follow the same pattern used elsewhere in Spring Boot (like `properties.actuator.management.endpoints`).\r\n\r\nThe change affects\r\n- The main `HttpClientProperties` class configuration property\r\n- All test files using these properties\r\n- Documentation in rest-client.adoc\r\n\r\nThis is a breaking change for anyone already using the `spring.http.client.*` properties in the 3.4.0 milestone.\r\n\r\nFixes #44958",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "buildSrc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot:compileTestFixturesJava",
      "spring-boot-project:spring-boot:testFixturesClasses",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot:javadoc",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot:testFixturesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "buildSrc:validatePlugins",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "buildSrc:check",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-testcontainers:classes"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 44954,
    "instance_id": "spring-projects__spring-boot_44954",
    "issue_numbers": [
      44869
    ],
    "base_commit": "faef7d525c9dcff7d37477a1a921995c0c8bdbe0",
    "patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListener.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListener.java\nindex c6d67c7a7c3a..a2d976db9ab7 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListener.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListener.java\n@@ -114,7 +114,7 @@ public SQLExceptionTranslator apply(ExecuteContext context) {\n \t\tprivate SQLExceptionTranslator apply(SQLDialect dialect) {\n \t\t\tString dbName = getSpringDbName(dialect);\n \t\t\treturn (dbName != null) ? new SQLErrorCodeSQLExceptionTranslator(dbName)\n-\t\t\t\t\t: new SQLStateSQLExceptionTranslator();\n+\t\t\t\t\t: new SQLErrorCodeSQLExceptionTranslator();\n \t\t}\n \n \t\tprivate String getSpringDbName(SQLDialect dialect) {\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListenerTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListenerTests.java\nindex c4c36b20ff86..1f6d7cd7c1d1 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListenerTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListenerTests.java\n@@ -17,6 +17,7 @@\n package org.springframework.boot.autoconfigure.jooq;\n \n import java.sql.SQLException;\n+import java.sql.SQLSyntaxErrorException;\n import java.util.function.Function;\n \n import org.jooq.Configuration;\n@@ -94,11 +95,18 @@ private ExecuteContext mockContext(SQLDialect dialect, SQLException sqlException\n \tstatic Object[] exceptionTranslatesSqlExceptions() {\n \t\treturn new Object[] { new Object[] { SQLDialect.DERBY, sqlException(\"42802\") },\n \t\t\t\tnew Object[] { SQLDialect.H2, sqlException(42000) },\n+\t\t\t\tnew Object[] { SQLDialect.H2, new SQLSyntaxErrorException() },\n \t\t\t\tnew Object[] { SQLDialect.HSQLDB, sqlException(-22) },\n+\t\t\t\tnew Object[] { SQLDialect.HSQLDB, new SQLSyntaxErrorException() },\n \t\t\t\tnew Object[] { SQLDialect.MARIADB, sqlException(1054) },\n+\t\t\t\tnew Object[] { SQLDialect.MARIADB, new SQLSyntaxErrorException() },\n \t\t\t\tnew Object[] { SQLDialect.MYSQL, sqlException(1054) },\n+\t\t\t\tnew Object[] { SQLDialect.MYSQL, new SQLSyntaxErrorException() },\n \t\t\t\tnew Object[] { SQLDialect.POSTGRES, sqlException(\"03000\") },\n-\t\t\t\tnew Object[] { SQLDialect.SQLITE, sqlException(\"21000\") } };\n+\t\t\t\tnew Object[] { SQLDialect.POSTGRES, new SQLSyntaxErrorException() },\n+\t\t\t\tnew Object[] { SQLDialect.SQLITE, new SQLSyntaxErrorException() },\n+\t\t\t\tnew Object[] { SQLDialect.SQLITE, sqlException(\"21000\") },\n+\t\t};\n \t}\n \n \tprivate static SQLException sqlException(String sqlState) {\n",
    "problem_statement": "Wrong jOOQ exception translator with empty db name\nIf there is no db product name in jOOQ available the sql error state translator is used by default:\n\nSee:\nhttps://github.com/spring-projects/spring-boot/blob/main/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/DefaultExceptionTranslatorExecuteListener.java#L116\n\n```\n\treturn (dbName != null) ? new SQLErrorCodeSQLExceptionTranslator(dbName)\n\t\t\t\t\t: new SQLStateSQLExceptionTranslator();\n```\n\nDuring discussion of this [ticket](https://github.com/spring-projects/spring-framework/issues/34640#issuecomment-2748244325), we figured out the translator chain is not correct.\nMatching the core Spring fallback chain, it should using the `SQLErrorCodeSQLExceptionTranslator` for empty dbName.\n\nAlso the javadoc from SQLErrorCodeSQLExceptionTranslator gives a hint not to use this a main translator:\nSQLErrorCodeSQLExceptionTranslator\n\"This translator is commonly used as a fallback behind a primary translator such as SQLErrorCodeSQLExceptionTranslator or SQLExceptionSubclassTranslator.\n\"\n\nSo IMHO this line should changed to:\n\n```\n\t\treturn (dbName != null) ? new SQLErrorCodeSQLExceptionTranslator(dbName)\n\t\t\t\t\t: new SQLErrorCodeSQLExceptionTranslator();\n```",
    "hints_text": "Wrong jOOQ exception translator with empty db name \nFix default exception translator for jooq translator without special db name handling\r\n\r\nfix #44869",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:classes",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:classes",
      "spring-boot-project:spring-boot-docs:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-project:spring-boot-docs:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:test",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot:compileTestFixturesJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot:testFixturesClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:classes",
      "spring-boot-project:spring-boot-docs:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:jar",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:processTestResources",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot:testFixturesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "buildSrc:validatePlugins",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:test",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:compileTestJava",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:testClasses",
      "buildSrc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-docs:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:syncAntSources",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-testcontainers:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:test",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:testClasses",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:testClasses",
      "buildSrc:check",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-project:spring-boot-testcontainers:test",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:classes",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-mustache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webservices:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-application-type:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-custom:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-groovy-templates:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-thymeleaf:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-freemarker:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging-log4j2:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-static:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-method-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux-coroutines:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processTestResources"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 44952,
    "instance_id": "spring-projects__spring-boot_44952",
    "issue_numbers": [
      44912
    ],
    "base_commit": "62b88dc26adc0cf3a19fe671dc137f31fc2b157d",
    "patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsEnabledCondition.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsEnabledCondition.java\nnew file mode 100644\nindex 000000000000..9e87fffbca4f\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsEnabledCondition.java\n@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2012-2025 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.web.client;\n+\n+import org.springframework.boot.autoconfigure.condition.AnyNestedCondition;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnThreading;\n+import org.springframework.boot.autoconfigure.condition.SpringBootCondition;\n+import org.springframework.boot.autoconfigure.thread.Threading;\n+import org.springframework.context.annotation.Conditional;\n+\n+/**\n+ * {@link SpringBootCondition} that applies when running in a non-reactive web application\n+ * or virtual threads are enabled.\n+ *\n+ * @author Dmitry Sulman\n+ */\n+class NotReactiveWebApplicationOrVirtualThreadsEnabledCondition extends AnyNestedCondition {\n+\n+\tNotReactiveWebApplicationOrVirtualThreadsEnabledCondition() {\n+\t\tsuper(ConfigurationPhase.PARSE_CONFIGURATION);\n+\t}\n+\n+\t@Conditional(NotReactiveWebApplicationCondition.class)\n+\tprivate static final class NotReactiveWebApplication {\n+\n+\t}\n+\n+\t@ConditionalOnThreading(Threading.VIRTUAL)\n+\tprivate static final class VirtualThreadsEnabled {\n+\n+\t}\n+\n+}\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.java\nindex f89fc31b6609..077217a1ddb8 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.java\n@@ -53,7 +53,7 @@\n @AutoConfiguration(after = { HttpClientAutoConfiguration.class, HttpMessageConvertersAutoConfiguration.class,\n \t\tSslAutoConfiguration.class })\n @ConditionalOnClass(RestClient.class)\n-@Conditional(NotReactiveWebApplicationCondition.class)\n+@Conditional(NotReactiveWebApplicationOrVirtualThreadsEnabledCondition.class)\n public class RestClientAutoConfiguration {\n \n \t@Bean\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfigurationTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfigurationTests.java\nindex fae799d96a97..89d8c42b145a 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfigurationTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestClientAutoConfigurationTests.java\n@@ -19,6 +19,8 @@\n import java.util.List;\n \n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.condition.EnabledForJreRange;\n+import org.junit.jupiter.api.condition.JRE;\n \n import org.springframework.boot.autoconfigure.AutoConfigurations;\n import org.springframework.boot.autoconfigure.http.HttpMessageConverters;\n@@ -29,6 +31,8 @@\n import org.springframework.boot.http.client.ClientHttpRequestFactorySettings.Redirects;\n import org.springframework.boot.ssl.SslBundles;\n import org.springframework.boot.test.context.runner.ApplicationContextRunner;\n+import org.springframework.boot.test.context.runner.ReactiveWebApplicationContextRunner;\n+import org.springframework.boot.test.context.runner.WebApplicationContextRunner;\n import org.springframework.boot.web.client.RestClientCustomizer;\n import org.springframework.boot.web.codec.CodecCustomizer;\n import org.springframework.context.annotation.Bean;\n@@ -225,6 +229,39 @@ void shouldSupplyRestClientBuilderConfigurerWithAutoConfiguredHttpSettings() {\n \t\t\t});\n \t}\n \n+\t@Test\n+\tvoid whenReactiveWebApplicationRestClientIsNotConfigured() {\n+\t\tnew ReactiveWebApplicationContextRunner()\n+\t\t\t.withConfiguration(AutoConfigurations.of(RestClientAutoConfiguration.class))\n+\t\t\t.run((context) -> {\n+\t\t\t\tassertThat(context).doesNotHaveBean(HttpMessageConvertersRestClientCustomizer.class);\n+\t\t\t\tassertThat(context).doesNotHaveBean(RestClientBuilderConfigurer.class);\n+\t\t\t\tassertThat(context).doesNotHaveBean(RestClient.Builder.class);\n+\t\t\t});\n+\t}\n+\n+\t@Test\n+\tvoid whenServletWebApplicationRestClientIsConfigured() {\n+\t\tnew WebApplicationContextRunner().withConfiguration(AutoConfigurations.of(RestClientAutoConfiguration.class))\n+\t\t\t.run((context) -> {\n+\t\t\t\tassertThat(context).hasSingleBean(HttpMessageConvertersRestClientCustomizer.class);\n+\t\t\t\tassertThat(context).hasSingleBean(RestClientBuilderConfigurer.class);\n+\t\t\t\tassertThat(context).hasSingleBean(RestClient.Builder.class);\n+\t\t\t});\n+\t}\n+\n+\t@Test\n+\t@EnabledForJreRange(min = JRE.JAVA_21)\n+\tvoid whenReactiveWebApplicationAndVirtualThreadsAreEnabledOnJava21AndLaterRestClientIsConfigured() {\n+\t\tnew ReactiveWebApplicationContextRunner().withPropertyValues(\"spring.threads.virtual.enabled=true\")\n+\t\t\t.withConfiguration(AutoConfigurations.of(RestClientAutoConfiguration.class))\n+\t\t\t.run((context) -> {\n+\t\t\t\tassertThat(context).hasSingleBean(HttpMessageConvertersRestClientCustomizer.class);\n+\t\t\t\tassertThat(context).hasSingleBean(RestClientBuilderConfigurer.class);\n+\t\t\t\tassertThat(context).hasSingleBean(RestClient.Builder.class);\n+\t\t\t});\n+\t}\n+\n \t@Configuration(proxyBeanMethods = false)\n \tstatic class CodecConfiguration {\n \n",
    "problem_statement": "Enable RestClientAutoConfiguration in reactive web applications when virtual threads are enabled\nCurrently `RestClientAutoConfiguration` uses `NotReactiveWebApplicationCondition` so that it is only enabled for non-reactive web applications which helps prevent users from accidentally blocking the event loop thread.\n\nThis foot-gun protection is less useful when virtual threads are enabled, as we configure WebFlux with an async task executor which allows blocking calls to be made for any controller method that does not return reactive types. Since `RestClientAutoConfiguration` provides a lot of helpful functionality, we should relax the condition to a `NotReactiveWebApplicationOrVirtualThreadsEnabledCondition`",
    "hints_text": "Enable RestClientAutoConfiguration in reactive web applications when virtual threads are enabled\nThis PR introduces `NotReactiveWebApplicationOrVirtualThreadsEnabledCondition` for use in `RestClientAutoConfiguration`.\r\n\r\nCloses #44912 ",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-project:spring-boot-test:testClasses",
      "buildSrc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot:compileTestFixturesJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot:testFixturesClasses",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot:javadoc",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot:testFixturesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "buildSrc:validatePlugins",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "buildSrc:check",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 44499,
    "instance_id": "spring-projects__spring-boot_44499",
    "issue_numbers": [
      44411
    ],
    "base_commit": "2f73406dffb76ab515894feeb86fdb3587da6c05",
    "patch": "diff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryResourceAttributes.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryResourceAttributes.java\nindex 52c66a44856e..b468c18f4593 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryResourceAttributes.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryResourceAttributes.java\n@@ -99,6 +99,7 @@ public void applyTo(BiConsumer<String, String> consumer) {\n \t\t});\n \t\tattributes.computeIfAbsent(\"service.name\", (k) -> getApplicationName());\n \t\tattributes.computeIfAbsent(\"service.group\", (k) -> getApplicationGroup());\n+\t\tattributes.computeIfAbsent(\"service.namespace\", (key) -> getServiceNamespace());\n \t\tattributes.forEach(consumer);\n \t}\n \n@@ -106,11 +107,18 @@ private String getApplicationName() {\n \t\treturn this.environment.getProperty(\"spring.application.name\", DEFAULT_SERVICE_NAME);\n \t}\n \n+\t@Deprecated(since = \"3.5.0\", forRemoval = true)\n+\t// See https://github.com/spring-projects/spring-boot/issues/44411 for potential\n+\t// information about deprecation of \"service.group\" attribute\n \tprivate String getApplicationGroup() {\n \t\tString applicationGroup = this.environment.getProperty(\"spring.application.group\");\n \t\treturn (StringUtils.hasLength(applicationGroup)) ? applicationGroup : null;\n \t}\n \n+\tprivate String getServiceNamespace() {\n+\t\treturn this.environment.getProperty(\"spring.application.group\");\n+\t}\n+\n \t/**\n \t * Parses resource attributes from the {@link System#getenv()}. This method fetches\n \t * attributes defined in the {@code OTEL_RESOURCE_ATTRIBUTES} and\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryAutoConfigurationTests.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryAutoConfigurationTests.java\nindex 14ab7b3c6380..dba908b68191 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryAutoConfigurationTests.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryAutoConfigurationTests.java\n@@ -106,6 +106,22 @@ void shouldNotApplySpringApplicationGroupIfNotSet() {\n \t\t});\n \t}\n \n+\t@Test\n+\tvoid shouldApplyServiceNamespaceIfApplicationGroupIsSet() {\n+\t\tthis.runner.withPropertyValues(\"spring.application.group=my-group\").run((context) -> {\n+\t\t\tResource resource = context.getBean(Resource.class);\n+\t\t\tassertThat(resource.getAttributes().asMap()).containsEntry(AttributeKey.stringKey(\"service.namespace\"), \"my-group\");\n+\t\t});\n+\t}\n+\n+\t@Test\n+\tvoid shouldNOtApplyServiceNamespaceIfApplicationGroupIsNotSet() {\n+\t\tthis.runner.run((context -> {\n+\t\t\tResource resource = context.getBean(Resource.class);\n+\t\t\tassertThat(resource.getAttributes().asMap()).doesNotContainKey(AttributeKey.stringKey(\"service.namespace\"));\n+\t\t}));\n+\t}\n+\n \t@Test\n \tvoid shouldFallbackToDefaultApplicationNameIfSpringApplicationNameIsNotSet() {\n \t\tthis.runner.run((context) -> {\ndiff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryResourceAttributesTests.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryResourceAttributesTests.java\nindex 61527264b998..f19f74f82ec8 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryResourceAttributesTests.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/opentelemetry/OpenTelemetryResourceAttributesTests.java\n@@ -156,9 +156,10 @@ void unknownServiceShouldBeUsedAsDefaultServiceName() {\n \t@Test\n \tvoid springApplicationGroupNameShouldBeUsedAsDefaultServiceGroup() {\n \t\tthis.environment.setProperty(\"spring.application.group\", \"spring-boot\");\n-\t\tassertThat(getAttributes()).hasSize(2)\n+\t\tassertThat(getAttributes()).hasSize(3)\n \t\t\t.containsEntry(\"service.name\", \"unknown_service\")\n-\t\t\t.containsEntry(\"service.group\", \"spring-boot\");\n+\t\t\t.containsEntry(\"service.group\", \"spring-boot\")\n+\t\t\t.containsEntry(\"service.namespace\", \"spring-boot\");\n \t}\n \n \t@Test\n@@ -167,6 +168,11 @@ void springApplicationNameShouldBeUsedAsDefaultServiceName() {\n \t\tassertThat(getAttributes()).hasSize(1).containsEntry(\"service.name\", \"spring-boot-app\");\n \t}\n \n+\t@Test\n+\tvoid serviceNamespaceShouldNotBePresentByDefault() {\n+\t\tassertThat(getAttributes()).hasSize(1).doesNotContainKey(\"service.namespace\");\n+\t}\n+\n \t@Test\n \tvoid resourceAttributesShouldTakePrecedenceOverSpringApplicationName() {\n \t\tthis.resourceAttributes.put(\"service.name\", \"spring-boot\");\n@@ -192,18 +198,50 @@ void otelServiceNameShouldTakePrecedenceOverSpringApplicationName() {\n \tvoid resourceAttributesShouldTakePrecedenceOverSpringApplicationGroupName() {\n \t\tthis.resourceAttributes.put(\"service.group\", \"spring-boot-app\");\n \t\tthis.environment.setProperty(\"spring.application.group\", \"spring-boot\");\n-\t\tassertThat(getAttributes()).hasSize(2)\n+\t\tassertThat(getAttributes()).hasSize(3)\n \t\t\t.containsEntry(\"service.name\", \"unknown_service\")\n \t\t\t.containsEntry(\"service.group\", \"spring-boot-app\");\n \t}\n \n+\t@Test\n+\tvoid resourceAttributesShouldTakePrecedenceOverApplicationGroupNameForPopulatingServiceNamespace() {\n+\t\tthis.resourceAttributes.put(\"service.namespace\", \"spring-boot-app\");\n+\t\tthis.environment.setProperty(\"spring.application.group\", \"overriden\");\n+\t\tassertThat(getAttributes()).hasSize(3)\n+\t\t\t.containsEntry(\"service.name\", \"unknown_service\")\n+\t\t\t.containsEntry(\"service.group\", \"overriden\")\n+\t\t\t.containsEntry(\"service.namespace\", \"spring-boot-app\");\n+\t}\n+\n \t@Test\n \tvoid otelResourceAttributesShouldTakePrecedenceOverSpringApplicationGroupName() {\n \t\tthis.environmentVariables.put(\"OTEL_RESOURCE_ATTRIBUTES\", \"service.group=spring-boot\");\n \t\tthis.environment.setProperty(\"spring.application.group\", \"spring-boot-app\");\n-\t\tassertThat(getAttributes()).hasSize(2)\n+\t\tassertThat(getAttributes()).hasSize(3)\n \t\t\t.containsEntry(\"service.name\", \"unknown_service\")\n-\t\t\t.containsEntry(\"service.group\", \"spring-boot\");\n+\t\t\t.containsEntry(\"service.group\", \"spring-boot\")\n+\t\t\t.containsEntry(\"service.namespace\", \"spring-boot-app\");\n+\t}\n+\n+\t@Test\n+\tvoid otelResourceAttributesShouldTakePrecedenceOverSpringApplicationGroupNameForServiceNamespace() {\n+\t\tthis.environmentVariables.put(\"OTEL_RESOURCE_ATTRIBUTES\", \"service.namespace=spring-boot\");\n+\t\tthis.environment.setProperty(\"spring.application.group\", \"overriden\");\n+\t\t;\n+\t\tassertThat(getAttributes()).hasSize(3)\n+\t\t\t.containsEntry(\"service.group\", \"overriden\")\n+\t\t\t.containsEntry(\"service.namespace\", \"spring-boot\");\n+\t}\n+\n+\t@Test\n+\tvoid shouldUseServiceGroupForServiceNamespaceIfServiceGroupIsSet() {\n+\t\tthis.environment.setProperty(\"spring.application.group\", \"alpha\");\n+\t\tassertThat(getAttributes()).containsEntry(\"service.namespace\", \"alpha\");\n+\t}\n+\n+\t@Test\n+\tvoid shouldNotSetServiceNamespaceIfServiceGroupIsNotSet() {\n+\t\tassertThat(getAttributes()).doesNotContainKey(\"service.namespace\");\n \t}\n \n \tprivate Map<String, String> getAttributes() {\n",
    "problem_statement": "Add support for OpenTelemetry's service.namespace\nAs per the OpenTelemetry documentation (https://opentelemetry.io/docs/specs/semconv/attributes-registry/service), **service.group** does not exist. Instead, **service.namespace** should be used for this purpose.\n\n**service.namespace:**\n>  A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. service.name is expected to be unique within the same namespace. If service.namespace is not specified in the Resource then service.name is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n\n\n**service.group** is set up in both `OpenTelemetryAutoConfiguration` and `OtlpMetricsPropertiesConfigAdapter`\n",
    "hints_text": "Add support for OpenTelemetry's service.namespace\nAdd OTEL service attribute `service.namespace`. The value is set to same value as `service.group` currently. Since there is no specific environment variable to specify the `service.namespace` prescribed by OTEL, following chain is used to decide the value:\r\n\r\n- management.opentelemetry.resource-attributes configuration property\r\n- OTEL_RESOURCE_ATTRIBUTES environment variable\r\n- If `service.group` is configured, then set it to same name\r\n- Otherwise empty\r\n\r\nCloses #44411 \r\n\r\n",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:classes",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:classes",
      "spring-boot-project:spring-boot-docs:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:classes",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:processResources",
      "spring-boot-project:spring-boot-docs:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:compileJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:testClasses",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:classes",
      "spring-boot-project:spring-boot-docs:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:jar",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:compileTestJava",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:processTestResources",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:test",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:test",
      "buildSrc:validatePlugins",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:test",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:compileTestJava",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:compileTestJava",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:test",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:testClasses",
      "buildSrc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:compileJava",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:compileJava",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:compileTestJava",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-docs:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:testClasses",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:classes",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:syncAntSources",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:compileTestJava",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:test",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:processResources",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-project:spring-boot-testcontainers:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:test",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-elasticsearch:classes",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:testClasses",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:testClasses",
      "buildSrc:check",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging:processResources",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-elasticsearch:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-project:spring-boot-testcontainers:test",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processResources",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:test",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-mustache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webservices:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-application-type:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-custom:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-groovy-templates:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-thymeleaf:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-freemarker:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging-log4j2:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-static:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-method-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux-coroutines:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processTestResources"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 44187,
    "instance_id": "spring-projects__spring-boot_44187",
    "issue_numbers": [
      43738
    ],
    "base_commit": "48e3de0cd1e20c0ec78afac33d102c51ccc0ef37",
    "patch": "diff --git a/buildSrc/src/main/resources/org/springframework/boot/build/antora/antora-asciidoc-attributes.properties b/buildSrc/src/main/resources/org/springframework/boot/build/antora/antora-asciidoc-attributes.properties\nindex 82eba8024b6b..2b8362af115f 100644\n--- a/buildSrc/src/main/resources/org/springframework/boot/build/antora/antora-asciidoc-attributes.properties\n+++ b/buildSrc/src/main/resources/org/springframework/boot/build/antora/antora-asciidoc-attributes.properties\n@@ -75,6 +75,7 @@ url-spring-data-rest-docs=https://docs.spring.io/spring-data/rest/reference/{ant\n url-spring-data-rest-site=https://spring.io/projects/spring-data-rest\n url-spring-data-rest-javadoc=https://docs.spring.io/spring-data/rest/docs/{dotxversion-spring-data-rest}/api\n url-spring-data-site=https://spring.io/projects/spring-data\n+url-testcontainers-java-doc=https://java.testcontainers.org\n url-testcontainers-activemq-javadoc=https://javadoc.io/doc/org.testcontainers/activemq/{version-testcontainers-activemq}\n url-testcontainers-cassandra-javadoc=https://javadoc.io/doc/org.testcontainers/cassandra/{version-testcontainers-cassandra}\n url-testcontainers-couchbase-javadoc=https://javadoc.io/doc/org.testcontainers/couchbase/{version-testcontainers-couchbase}\ndiff --git a/src/checkstyle/checkstyle-suppressions.xml b/src/checkstyle/checkstyle-suppressions.xml\nindex d44eac1e47ed..6456782f31dc 100644\n--- a/src/checkstyle/checkstyle-suppressions.xml\n+++ b/src/checkstyle/checkstyle-suppressions.xml\n@@ -82,6 +82,7 @@\n \t<suppress files=\"spring-boot-configuration-processor[\\\\/]src[\\\\/]test[\\\\/]java[\\\\/]org[\\\\/]springframework[\\\\/]boot[\\\\/]configurationsample[\\\\/]\" checks=\"SpringDeprecatedCheck\"/>\n \t<suppress files=\"ImportTestcontainersTests\\.java\" checks=\"InterfaceIsType\" />\n \t<suppress files=\"MyContainers\\.java\" checks=\"InterfaceIsType\" />\n+\t<suppress files=\"MyInterface\\.java\" checks=\"InterfaceIsType\" />\n \t<suppress files=\"SpringBootBanner\\.java\" checks=\"SpringLeadingWhitespace\" />\n \t<suppress files=\"LoadTimeWeaverAwareConsumerContainers\\.java\" checks=\"InterfaceIsType\" />\n </suppressions>\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/testing/testcontainers.adoc b/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/testing/testcontainers.adoc\nindex d6a7d4c2e862..ef72b0d2616c 100644\n--- a/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/testing/testcontainers.adoc\n+++ b/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/testing/testcontainers.adoc\n@@ -5,13 +5,89 @@ The https://www.testcontainers.org/[Testcontainers] library provides a way to ma\n It integrates with JUnit, allowing you to write a test class that can start up a container before any of the tests run.\n Testcontainers is especially useful for writing integration tests that talk to a real backend service such as MySQL, MongoDB, Cassandra and others.\n \n+In following sections we will describe some of the methods you can use to integrate Testcontainers with your tests.\n+\n+\n+\n+[[testing.testcontainers.via-junit-extension]]\n+== Using via @Testcontainers JUnit5 extension\n+\n+The Testcontainers provides JUnit5 extensions, which can be used to manage containers in your tests.\n+The extension is activated by applying the `@Testcontainers` annotation from Testcontainers to your test class.\n+\n Testcontainers can be used in a Spring Boot test as follows:\n \n include-code::vanilla/MyIntegrationTests[]\n \n-This will start up a docker container running Neo4j (if Docker is running locally) before any of the tests are run.\n+This will start up a Docker container running Neo4j (if Docker is running locally) before any of the tests are run.\n In most cases, you will need to configure the application to connect to the service running in the container.\n \n+In this case the lifecycle of the container instance is managed by Testcontainers, as described in official documentation.\n+\n+\n+[[testing.testcontainers.via-spring-beans]]\n+== Using via Spring managed beans\n+\n+The containers provided by Testcontainers can be managed by Spring Boot as beans.\n+This method of managing contains can be used in combination with javadoc:org.springframework.boot.testcontainers.service.connection.ServiceConnection[format=annotation].\n+\n+To use Testcontainer contains as Spring beans we need to create a configuration class declaring the container as bean:\n+\n+include-code::beandeclaration/BeanDeclarationConfig[]\n+\n+then we can start the container by importing the configuration class in the test class:\n+\n+include-code::beandeclaration/SpringTest[]\n+\n+\n+[[testing.testcontainers.via-declaration-classes]]\n+== Using via importing container declaration classes\n+\n+A common pattern with Testcontainers is to declare the Container instances as static fields in an interface.\n+For example the following interface `MyInterface` declares two containers, one named `mongo` of type MongoDB and another named `neo` of type Neo4j:\n+\n+include-code::importcontainers/MyInterface[]\n+\n+When you have containers declared in this way, then you can have these containers managed by Spring Boot as beans.\n+All that is needed to do that is adding javadoc:org.springframework.boot.testcontainers.context.ImportTestcontainers[format=annotation] to your configuration class as in:\n+\n+include-code::importcontainers/MyConfiguration[]\n+\n+TIP: Using interfaces for declaring contains helps with reuse.\n+When containers are declared in an interface, this can be reused in your javadoc:org.springframework.context.annotation.Configuration[format=annotation] classes and in test classes.\n+\n+\n+[[test.testcontainers.container-lifecycle]]\n+== Lifecycle of managed containers\n+\n+If you have used the annotations and extensions provided by Testcontainers, then the lifecycle of container instances is managed by the Testcontainers.\n+Please refer to the {url-testcontainres-java-doc}[Testcontainers official documentation] for the information about lifecycle of the containers, when managed by the Testcontainers.\n+\n+When the containers are managed by Spring as beans, then the lifecycle is clearly defined by Spring.\n+The container beans are created and started before the beans of other types are created.\n+This process ensures that any beans, which rely on functionality provided by the containers, can use those functionalities.\n+\n+The test containers can be started multiple times.\n+Like any other beans the test containers are created and started once per application context managed by the TestContext Framework.\n+For details about how TestContext framework manages the underlying application contexts and beans therein, please refer to the {url-spring-framework-docs}[official Spring documentation].\n+\n+The container beans are stopped after the destruction of beans of other types.\n+This ensures that any beans depending on the functionalities provided by the containers are cleaned up first.\n+\n+TIP: When your application beans rely on functionality of containers, prefer configuring the containers as Spring beans.\n+When containers are managed as Spring beans, then Spring framework ensures that upon start the container beans are started before any beans relying on them.\n+On shutdown the application beans depending on container functionalities are cleaned up first, and only then are the containers shut down.\n+\n+NOTE: Having containers managed by Testcontainers instead of as Spring beans provides no guarantee of order in which beans and containers will shutdown.\n+It can happen that containers are shutdown before the beans relying on container functionality are cleaned up.\n+This can lead to exceptions being thrown by client beans due to loss of connection for example.\n+\n+The containers are stopped as part of the application shutdown process, managed by the TestContext framework.\n+When the application context gets shutdown, the containers are shutdown as well.\n+This usually happens after all tests using that specific cached application context have finished executing, but may happen earlier depending on the caching behavior configured in TestContext Framework.\n+\n+It is important to note that a single test container instance can be, and often is, retained across execution of tests from multiple test classes.\n+\n \n \n [[testing.testcontainers.service-connections]]\ndiff --git a/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/beandeclaration/BeanDeclarationConfig.java b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/beandeclaration/BeanDeclarationConfig.java\nnew file mode 100644\nindex 000000000000..7a1e4e5e7c83\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/beandeclaration/BeanDeclarationConfig.java\n@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2012-2025 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.docs.testing.testcontainers.beandeclaration;\n+\n+import org.testcontainers.containers.MongoDBContainer;\n+import org.testcontainers.utility.DockerImageName;\n+\n+import org.springframework.boot.test.context.TestConfiguration;\n+import org.springframework.boot.testcontainers.service.connection.ServiceConnection;\n+import org.springframework.context.annotation.Bean;\n+\n+@TestConfiguration(proxyBeanMethods = false)\n+class BeanDeclarationConfig {\n+\n+\t@ServiceConnection\n+\t@Bean\n+\tMongoDBContainer container() {\n+\t\treturn new MongoDBContainer(DockerImageName.parse(\"mongo:latest\"));\n+\t}\n+\n+}\ndiff --git a/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/beandeclaration/SpringTest.java b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/beandeclaration/SpringTest.java\nnew file mode 100644\nindex 000000000000..4f98ba476f09\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/beandeclaration/SpringTest.java\n@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2012-2025 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.docs.testing.testcontainers.beandeclaration;\n+\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.MongoDBContainer;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Import;\n+\n+@SpringBootTest\n+@Import(BeanDeclarationConfig.class)\n+class SpringTest {\n+\n+\t@Autowired\n+\tprivate MongoDBContainer mongo;\n+\n+\t@Test\n+\tvoid doTest() {\n+\t\tSystem.out.println(\"Mongo db is running: \" + this.mongo.isRunning());\n+\t}\n+\n+}\ndiff --git a/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/importcontainers/MyConfiguration.java b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/importcontainers/MyConfiguration.java\nnew file mode 100644\nindex 000000000000..2b3857fb9ccb\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/importcontainers/MyConfiguration.java\n@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2012-2025 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.docs.testing.testcontainers.importcontainers;\n+\n+import org.springframework.boot.test.context.TestConfiguration;\n+import org.springframework.boot.testcontainers.context.ImportTestcontainers;\n+\n+@TestConfiguration(proxyBeanMethods = false)\n+@ImportTestcontainers(MyInterface.class)\n+class MyConfiguration {\n+\n+}\ndiff --git a/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/importcontainers/MyInterface.java b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/importcontainers/MyInterface.java\nnew file mode 100644\nindex 000000000000..b00f693277d7\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/testing/testcontainers/importcontainers/MyInterface.java\n@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2012-2025 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.docs.testing.testcontainers.importcontainers;\n+\n+import org.testcontainers.containers.MongoDBContainer;\n+import org.testcontainers.containers.Neo4jContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+\n+import org.springframework.boot.testcontainers.service.connection.ServiceConnection;\n+\n+interface MyInterface {\n+\n+\t@Container\n+\t@ServiceConnection\n+\tMongoDBContainer mongoContainer = new MongoDBContainer(\"mongo:5.0\");\n+\n+\t@Container\n+\t@ServiceConnection\n+\tNeo4jContainer<?> neo4jContainer = new Neo4jContainer<>(\"neo4j:5\");\n+\n+}\ndiff --git a/spring-boot-project/spring-boot-docs/src/main/kotlin/org/springframework/boot/docs/testing/testcontainers/beandeclaration/BeanDeclarationConfig.kt b/spring-boot-project/spring-boot-docs/src/main/kotlin/org/springframework/boot/docs/testing/testcontainers/beandeclaration/BeanDeclarationConfig.kt\nnew file mode 100644\nindex 000000000000..ddbce31e75d8\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-docs/src/main/kotlin/org/springframework/boot/docs/testing/testcontainers/beandeclaration/BeanDeclarationConfig.kt\n@@ -0,0 +1,17 @@\n+package org.springframework.boot.docs.testing.testcontainers.beandeclaration\n+\n+import org.springframework.boot.test.context.TestConfiguration\n+import org.springframework.boot.testcontainers.service.connection.ServiceConnection\n+import org.springframework.context.annotation.Bean\n+import org.testcontainers.containers.MongoDBContainer\n+import org.testcontainers.utility.DockerImageName\n+\n+\n+@TestConfiguration(proxyBeanMethods = false)\n+internal class BeanDeclarationConfig {\n+\t@ServiceConnection\n+\t@Bean\n+\tfun container(): MongoDBContainer {\n+\t\treturn MongoDBContainer(DockerImageName.parse(\"mongo:latest\"))\n+\t}\n+}\n\\ No newline at end of file\ndiff --git a/spring-boot-project/spring-boot-docs/src/main/kotlin/org/springframework/boot/docs/testing/testcontainers/beandeclaration/SpringTest.kt b/spring-boot-project/spring-boot-docs/src/main/kotlin/org/springframework/boot/docs/testing/testcontainers/beandeclaration/SpringTest.kt\nnew file mode 100644\nindex 000000000000..edb36d9cf088\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-docs/src/main/kotlin/org/springframework/boot/docs/testing/testcontainers/beandeclaration/SpringTest.kt\n@@ -0,0 +1,19 @@\n+package org.springframework.boot.docs.testing.testcontainers.beandeclaration\n+\n+import org.junit.jupiter.api.Test\n+import org.springframework.beans.factory.annotation.Autowired\n+import org.springframework.boot.test.context.SpringBootTest\n+import org.springframework.context.annotation.Import\n+import org.testcontainers.containers.MongoDBContainer\n+\n+@SpringBootTest\n+@Import(BeanDeclarationConfig::class)\n+class SpringTest {\n+\t@Autowired\n+\tprivate val mongo: MongoDBContainer? = null\n+\n+\t@Test\n+\tfun doTest() {\n+\t\tprintln(\"Mongo db is running: \" + mongo!!.isRunning)\n+\t}\n+}\n\\ No newline at end of file\n",
    "problem_statement": "Add dedicated section for registering a container as a bean in the Testcontainers section\nTwo issues are unclear in documentation\r\n\r\n1. Probably outdated examples with `@Testcontainers`\r\nEvery example contains  `@Testcontainers` annotation. It seems be unnecessary. For example, Spring Initializer generates working test classes without the annotation. (If I'm right, I can create PR with  `@Testcontainers` removal)\r\n\r\n2. Two methods to register Container without explanation\r\nContainer can be registered with `@org.testcontainers.junit.jupiter.Container` annotation or as a Spring `@Bean`. Which one is better for which case? On one hand, Spring Initializer generates `@Bean`, so it looks as recommended. On the other hand, Spring Boot Reference begins with `@Container`, to it looks as primary decision hint. `@Container` is a bit boilerplate-less, so the hint looks reasonable. \r\nAs a developer, which method should I choose at the beginning?\r\n(ref: https://docs.spring.io/spring-boot/reference/testing/testcontainers.html)\r\n",
    "hints_text": "Document all the available Testcontainers integrations\nIn this PR I have documented the ways in which containers provided by Testcontainers framework can be incorporated into the test tests managed by Spring's TestContext Framework.\r\n\r\nIn addition to describing how to use the containers, information on lifecycle of containers during tests has been added. ",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-config:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:compileJava",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:classes",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:classes",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "buildSrc:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-project:spring-boot-testcontainers:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:testClasses",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-system-tests:spring-boot-deployment-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:generatePomFileForMavenPublication",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:syncAntSources",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-project:spring-boot-testcontainers:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "buildSrc:validatePlugins",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:test",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:test",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:testClasses",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "buildSrc:check",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-project:spring-boot-testcontainers:test",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileJava",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-mustache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-groovy-templates:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-thymeleaf:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-freemarker:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processResources",
      "spring-boot-project:spring-boot:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging-log4j2:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-static:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webservices:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-method-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux-coroutines:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-application-type:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-custom:processResources",
      "spring-boot-project:spring-boot:generateMetadataFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processResources"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 43330,
    "instance_id": "spring-projects__spring-boot_43330",
    "issue_numbers": [
      42013
    ],
    "base_commit": "a49719d73eddf215ac53c12ed606563cdebb8e14",
    "patch": "diff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/error/ErrorWrapper.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/error/ErrorWrapper.java\nnew file mode 100644\nindex 000000000000..e0d7e9d021b8\n--- /dev/null\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/error/ErrorWrapper.java\n@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2012-2024 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.web.error;\n+\n+import jakarta.annotation.Nullable;\n+import org.springframework.context.MessageSourceResolvable;\n+import org.springframework.context.support.DefaultMessageSourceResolvable;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * A wrapper class for error objects that implements {@link MessageSourceResolvable}.\n+ * This class extends {@link DefaultMessageSourceResolvable} and delegates the\n+ * message resolution to the wrapped error object.\n+ *\n+ * @author Yongjun Hong\n+ * @since 3.5.0\n+ */\n+public class ErrorWrapper extends DefaultMessageSourceResolvable {\n+\n+\tprivate final Object error;\n+\n+\t/**\n+\t * Create a new {@code ErrorWrapper} instance with the specified error.\n+\t *\n+\t * @param error the error object to wrap (must not be {@code null})\n+\t */\n+\tpublic ErrorWrapper(Object error) {\n+\t\tthis(error, null, null, null);\n+\t}\n+\n+\t/**\n+\t * Create a new {@code ErrorWrapper} instance with the specified error, codes,\n+\t * arguments, and default message.\n+\t *\n+\t * @param error the error object to wrap (must not be {@code null})\n+\t * @param codes the codes to be used for message resolution\n+\t * @param arguments the arguments to be used for message resolution\n+\t * @param defaultMessage the default message to be used if no message is found\n+\t */\n+\tpublic ErrorWrapper(Object error, @Nullable String[] codes, @Nullable Object[] arguments, @Nullable String defaultMessage) {\n+\t\tsuper(codes, arguments, defaultMessage);\n+\t\tAssert.notNull(error, \"Error must not be null\");\n+\t\tthis.error = error;\n+\t}\n+\n+\t/**\n+\t * Return the codes to be used for message resolution.\n+\t *\n+\t * @return the codes to be used for message resolution\n+\t */\n+\t@Override\n+\tpublic String[] getCodes() {\n+\t\treturn ((MessageSourceResolvable) this.error).getCodes();\n+\t}\n+\n+\t/**\n+\t * Return the arguments to be used for message resolution.\n+\t *\n+\t * @return the arguments to be used for message resolution\n+\t */\n+\t@Override\n+\tpublic Object[] getArguments() {\n+\t\treturn ((MessageSourceResolvable) this.error).getArguments();\n+\t}\n+\n+\t/**\n+\t * Return the default message to be used if no message is found.\n+\t *\n+\t * @return the default message to be used if no message is found\n+\t */\n+\t@Override\n+\tpublic String getDefaultMessage() {\n+\t\treturn ((MessageSourceResolvable) this.error).getDefaultMessage();\n+\t}\n+\n+}\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributes.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributes.java\nindex c02b439fa9d5..db8bc3f8082a 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributes.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributes.java\n@@ -24,6 +24,7 @@\n import java.util.Map;\n import java.util.Optional;\n \n+import org.springframework.boot.web.error.ErrorWrapper;\n import org.springframework.boot.web.error.ErrorAttributeOptions;\n import org.springframework.boot.web.error.ErrorAttributeOptions.Include;\n import org.springframework.core.annotation.MergedAnnotation;\n@@ -32,7 +33,6 @@\n import org.springframework.http.HttpStatus;\n import org.springframework.util.StringUtils;\n import org.springframework.validation.BindingResult;\n-import org.springframework.validation.ObjectError;\n import org.springframework.validation.method.MethodValidationResult;\n import org.springframework.web.bind.annotation.ResponseStatus;\n import org.springframework.web.reactive.function.server.ServerRequest;\n@@ -48,8 +48,8 @@\n  * <li>error - The error reason</li>\n  * <li>exception - The class name of the root exception (if configured)</li>\n  * <li>message - The exception message (if configured)</li>\n- * <li>errors - Any {@link ObjectError}s from a {@link BindingResult} or\n- * {@link MethodValidationResult} exception (if configured)</li>\n+ * <li>errors - Any validation errors wrapped in {@link ErrorWrapper}, derived from a\n+ * {@link BindingResult} or {@link MethodValidationResult} exception (if configured)</li>\n  * <li>trace - The exception stack trace (if configured)</li>\n  * <li>path - The URL path when the exception was raised</li>\n  * <li>requestId - Unique ID associated with the current request</li>\n@@ -61,6 +61,7 @@\n  * @author Scott Frederick\n  * @author Moritz Halbritter\n  * @author Yanming Zhou\n+ * @author Yongjun Hong\n  * @since 2.0.0\n  * @see ErrorAttributes\n  */\n@@ -141,10 +142,9 @@ else if (error instanceof ResponseStatusException responseStatusException) {\n \n \tprivate void addMessageAndErrorsFromMethodValidationResult(Map<String, Object> errorAttributes,\n \t\t\tMethodValidationResult result) {\n-\t\tList<ObjectError> errors = result.getAllErrors()\n+\t\tList<ErrorWrapper> errors = result.getAllErrors()\n \t\t\t.stream()\n-\t\t\t.filter(ObjectError.class::isInstance)\n-\t\t\t.map(ObjectError.class::cast)\n+\t\t\t.map(ErrorWrapper::new)\n \t\t\t.toList();\n \t\terrorAttributes.put(\"message\",\n \t\t\t\t\"Validation failed for method='\" + result.getMethod() + \"'. Error count: \" + errors.size());\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributes.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributes.java\nindex 9c351d633f79..fdeceb6ee62e 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributes.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributes.java\n@@ -30,6 +30,7 @@\n \n import org.springframework.boot.web.error.ErrorAttributeOptions;\n import org.springframework.boot.web.error.ErrorAttributeOptions.Include;\n+import org.springframework.boot.web.error.ErrorWrapper;\n import org.springframework.core.Ordered;\n import org.springframework.core.annotation.Order;\n import org.springframework.http.HttpStatus;\n@@ -52,8 +53,8 @@\n  * <li>error - The error reason</li>\n  * <li>exception - The class name of the root exception (if configured)</li>\n  * <li>message - The exception message (if configured)</li>\n- * <li>errors - Any {@link ObjectError}s from a {@link BindingResult} or\n- * {@link MethodValidationResult} exception (if configured)</li>\n+ * <li>errors - Any validation errors wrapped in {@link ErrorWrapper}, derived from a\n+ * {@link BindingResult} or {@link MethodValidationResult} exception (if configured)</li>\n  * <li>trace - The exception stack trace (if configured)</li>\n  * <li>path - The URL path when the exception was raised</li>\n  * </ul>\n@@ -65,6 +66,7 @@\n  * @author Scott Frederick\n  * @author Moritz Halbritter\n  * @author Yanming Zhou\n+ * @author Yongjun Hong\n  * @since 2.0.0\n  * @see ErrorAttributes\n  */\n@@ -153,6 +155,17 @@ private void addErrorMessage(Map<String, Object> errorAttributes, WebRequest web\n \t\t}\n \t}\n \n+\tprivate void addMessageAndErrorsFromMethodValidationResult(Map<String, Object> errorAttributes,\n+\t\t\tMethodValidationResult result) {\n+\t\tList<ErrorWrapper> errors = result.getAllErrors()\n+\t\t\t.stream()\n+\t\t\t.map(ErrorWrapper::new)\n+\t\t\t.toList();\n+\t\terrorAttributes.put(\"message\",\n+\t\t\t\t\"Validation failed for method='\" + result.getMethod() + \"'. Error count: \" + errors.size());\n+\t\terrorAttributes.put(\"errors\", errors);\n+\t}\n+\n \tprivate void addExceptionErrorMessage(Map<String, Object> errorAttributes, WebRequest webRequest, Throwable error) {\n \t\terrorAttributes.put(\"message\", getMessage(webRequest, error));\n \t}\n@@ -187,16 +200,6 @@ private void addMessageAndErrorsFromBindingResult(Map<String, Object> errorAttri\n \t\t\t\tresult.getAllErrors());\n \t}\n \n-\tprivate void addMessageAndErrorsFromMethodValidationResult(Map<String, Object> errorAttributes,\n-\t\t\tMethodValidationResult result) {\n-\t\tList<ObjectError> errors = result.getAllErrors()\n-\t\t\t.stream()\n-\t\t\t.filter(ObjectError.class::isInstance)\n-\t\t\t.map(ObjectError.class::cast)\n-\t\t\t.toList();\n-\t\taddMessageAndErrorsForValidationFailure(errorAttributes, \"method='\" + result.getMethod() + \"'\", errors);\n-\t}\n-\n \tprivate void addMessageAndErrorsForValidationFailure(Map<String, Object> errorAttributes, String validated,\n \t\t\tList<ObjectError> errors) {\n \t\terrorAttributes.put(\"message\", \"Validation failed for \" + validated + \". Error count: \" + errors.size());\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributesTests.java b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributesTests.java\nindex f24de2fe8e5e..5ac81ae153c7 100644\n--- a/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributesTests.java\n+++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributesTests.java\n@@ -55,6 +55,7 @@\n  * @author Scott Frederick\n  * @author Moritz Halbritter\n  * @author Yanming Zhou\n+ * @author Yongjun Hong\n  */\n class DefaultErrorAttributesTests {\n \n@@ -326,6 +327,30 @@ void extractBindingResultErrorsExcludeMessageAndErrors() throws Exception {\n \t\tassertThat(attributes).doesNotContainKey(\"errors\");\n \t}\n \n+\t@Test\n+\tvoid extractParameterValidationResultErrors() throws Exception {\n+\t\tObject target = \"test\";\n+\t\tMethod method = String.class.getMethod(\"substring\", int.class);\n+\t\tMethodParameter parameter = new MethodParameter(method, 0);\n+\t\tParameterValidationResult parameterValidationResult = new ParameterValidationResult(parameter, -1,\n+\t\t\t\tList.of(new ObjectError(\"beginIndex\", \"beginIndex is negative\")), null, null, null,\n+\t\t\t\t(error, sourceType) -> {\n+\t\t\t\t\tthrow new IllegalArgumentException(\"No source object of the given type\");\n+\t\t\t\t});\n+\t\tMethodValidationResult methodValidationResult = MethodValidationResult.create(target, method,\n+\t\t\t\tList.of(parameterValidationResult));\n+\t\tHandlerMethodValidationException ex = new HandlerMethodValidationException(methodValidationResult);\n+\t\tMockServerHttpRequest request = MockServerHttpRequest.get(\"/test\").build();\n+\n+\t\tMap<String, Object> attributes = this.errorAttributes.getErrorAttributes(buildServerRequest(request, ex),\n+\t\t\t\tErrorAttributeOptions.of(Include.MESSAGE, Include.BINDING_ERRORS));\n+\n+\t\tassertThat(attributes.get(\"message\")).asString()\n+\t\t\t\t.isEqualTo(\"Validation failed for method='public java.lang.String java.lang.String.substring(int)'. Error count: 1\");\n+\t\tassertThat(attributes).containsEntry(\"errors\",\n+\t\t\t\tmethodValidationResult.getAllErrors().stream().filter(ObjectError.class::isInstance).toList());\n+\t}\n+\n \t@Test\n \tvoid excludeStatus() {\n \t\tResponseStatusException error = new ResponseStatusException(HttpStatus.NOT_ACCEPTABLE,\n",
    "problem_statement": "DefaultErrorAttributes doesn't populate errors for MethodValidationResult\nGH-39865 added support for `MethodValidationResult` to `DefaultErrorAttributes` but it filters the list errors published in the result and used for counting to instances of `ObjectError`.\r\n\r\nWith a method signature (in a RestController) of e.g. `public void method(@PathVariable @Pattern(regexp = \"^a.*\") String parameter)`, this results in\r\n* `message = \"Validation failed for method='public void <class>.method(java.lang.String)'. Error count: 0\"`\r\n* `errors = []`\r\n\r\nThis is due to the fact, that the `MethodValidationResult` generated by `MethodValidationAdapter` will contain instances of `ParameterValidationResult` that have resolvable errors of type `DefaultMessageSourceResolvable` (and not `ObjectError`).\r\n\r\nSpring Boot 3.3.1\r\nSpring Framework 6.1.10",
    "hints_text": "Ensure DefaultErrorAttributes adds JSON serialization safe errors\nresolved #42013 \r\n\r\n- Added `ErrorWrapper` to enable `DefaultErrorAttributes` to handle errors related to `MethodValidationResult`.",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "buildSrc:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "buildSrc:validatePlugins",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "buildSrc:checkstyleTest",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "buildSrc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "buildSrc:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "buildSrc:checkFormat",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "buildSrc:processTestResources",
      "buildSrc:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "buildSrc:checkFormatTest",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "buildSrc:check",
      "buildSrc:checkstyleMain",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "buildSrc:checkFormatMain",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-mustache:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-undertow:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-project:spring-boot:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow-ssl:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:processResources",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar4:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webservices:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-application-type:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-custom:processResources",
      "spring-boot-project:spring-boot:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-groovy-templates:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-thymeleaf:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-freemarker:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:processResources",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:syncAntSources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging-log4j2:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-static:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-method-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structured-logging:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux-coroutines:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 42856,
    "instance_id": "spring-projects__spring-boot_42856",
    "issue_numbers": [
      9983
    ],
    "base_commit": "2a64cf6fb122eb0cf4810772fc20efa82950ac77",
    "patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java\nindex 2882b7079cbe..b2ead05e34c7 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java\n@@ -40,6 +40,7 @@\n import org.springframework.boot.web.server.MimeMappings;\n import org.springframework.boot.web.server.Shutdown;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.boot.web.servlet.server.Encoding;\n import org.springframework.boot.web.servlet.server.Jsp;\n import org.springframework.boot.web.servlet.server.Session;\n@@ -115,6 +116,12 @@ public class ServerProperties {\n \t */\n \tprivate Shutdown shutdown = Shutdown.GRACEFUL;\n \n+\t/**\n+\t * The deletion strategy of temporary directory when you shut down the server\n+\t * server.tmp-deletion-strategy\n+\t */\n+\tprivate TempDirectoryDeletionStrategy tmpDeletionStrategy = TempDirectoryDeletionStrategy.DELETE_ON_EXIT;\n+\n \t@NestedConfigurationProperty\n \tprivate Ssl ssl;\n \n@@ -181,6 +188,14 @@ public void setShutdown(Shutdown shutdown) {\n \t\tthis.shutdown = shutdown;\n \t}\n \n+\tpublic TempDirectoryDeletionStrategy getTmpDeletionStrategy() {\n+\t\treturn this.tmpDeletionStrategy;\n+\t}\n+\n+\tpublic void setTmpDeletionStrategy(TempDirectoryDeletionStrategy tmpDeletionStrategy) {\n+\t\tthis.tmpDeletionStrategy = tmpDeletionStrategy;\n+\t}\n+\n \tpublic ErrorProperties getError() {\n \t\treturn this.error;\n \t}\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.java\nindex 1b1a1c788224..f3af2ad5dcf6 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.java\n@@ -72,6 +72,7 @@ public void customize(ConfigurableReactiveWebServerFactory factory) {\n \t\tmap.from(this.serverProperties::getCompression).to(factory::setCompression);\n \t\tmap.from(this.serverProperties::getHttp2).to(factory::setHttp2);\n \t\tmap.from(this.serverProperties.getShutdown()).to(factory::setShutdown);\n+\t\tmap.from(this.serverProperties.getTmpDeletionStrategy()).to(factory::setShutdownTempDirDeletionStrategy);\n \t\tmap.from(() -> this.sslBundles).to(factory::setSslBundles);\n \t}\n \ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.java\nindex bc1dbd4e2489..564c3ff4789a 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.java\n@@ -91,6 +91,7 @@ public void customize(ConfigurableServletWebServerFactory factory) {\n \t\tmap.from(this.serverProperties::getServerHeader).to(factory::setServerHeader);\n \t\tmap.from(this.serverProperties.getServlet()::getContextParameters).to(factory::setInitParameters);\n \t\tmap.from(this.serverProperties.getShutdown()).to(factory::setShutdown);\n+\t\tmap.from(this.serverProperties.getTmpDeletionStrategy()).to(factory::setShutdownTempDirDeletionStrategy);\n \t\tmap.from(() -> this.sslBundles).to(factory::setSslBundles);\n \t\tmap.from(() -> this.cookieSameSiteSuppliers)\n \t\t\t.whenNot(CollectionUtils::isEmpty)\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java\nindex 50cfa00e719d..4fb94bc20ae6 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java\n@@ -31,6 +31,9 @@\n import java.util.UUID;\n \n import jakarta.servlet.http.Cookie;\n+import org.apache.catalina.Lifecycle;\n+import org.apache.catalina.LifecycleEvent;\n+import org.apache.catalina.LifecycleListener;\n import org.eclipse.jetty.ee10.servlet.ErrorHandler;\n import org.eclipse.jetty.ee10.servlet.ErrorPageErrorHandler;\n import org.eclipse.jetty.ee10.servlet.ListenerHolder;\n@@ -80,6 +83,7 @@\n import org.springframework.boot.web.server.MimeMappings;\n import org.springframework.boot.web.server.Shutdown;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.boot.web.server.WebServer;\n import org.springframework.boot.web.servlet.ServletContextInitializer;\n import org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory;\n@@ -360,6 +364,17 @@ private Resource createResource(URL url, ResourceFactory resourceFactory, URLRes\n \t\treturn urlResourceFactory.newResource(url + \"META-INF/resources/\");\n \t}\n \n+\t@Override\n+\tprotected void deleteOnExit(File tempDir) {\n+\t\tthis.configurations.add(new AbstractConfiguration(new AbstractConfiguration.Builder()) {\n+\t\t\t@Override\n+\t\t\tpublic void destroy(WebAppContext context) throws Exception {\n+\t\t\t\tsuper.destroy(context);\n+\t\t\t\tgetShutdownTempDirDeletionStrategy().deleteOnShutdown(tempDir);\n+\t\t\t}\n+\t\t});\n+\t}\n+\n \t/**\n \t * Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}.\n \t * @param context the jetty {@link WebAppContext}\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java\nindex 4461309fa9c2..97c5a9456065 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java\n@@ -30,6 +30,8 @@\n import org.apache.catalina.Engine;\n import org.apache.catalina.Executor;\n import org.apache.catalina.Host;\n+import org.apache.catalina.Lifecycle;\n+import org.apache.catalina.LifecycleEvent;\n import org.apache.catalina.LifecycleListener;\n import org.apache.catalina.Valve;\n import org.apache.catalina.connector.Connector;\n@@ -48,6 +50,7 @@\n import org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory;\n import org.springframework.boot.web.reactive.server.ReactiveWebServerFactory;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.boot.web.server.WebServer;\n import org.springframework.http.server.reactive.HttpHandler;\n import org.springframework.http.server.reactive.TomcatHttpHandlerAdapter;\n@@ -252,6 +255,13 @@ private void addBundleUpdateHandler(String serverName, String sslBundleName, Ssl\n \t\t}\n \t}\n \n+\t@Override\n+\tprotected void deleteOnExit(File tempDir) {\n+\t\tthis.serverLifecycleListeners.add(\n+\t\t\t\tnew TempDirDeletion(tempDir, getShutdownTempDirDeletionStrategy())\n+\t\t);\n+\t}\n+\n \t@Override\n \tpublic void setBaseDirectory(File baseDirectory) {\n \t\tthis.baseDirectory = baseDirectory;\n@@ -472,4 +482,13 @@ public void setDisableMBeanRegistry(boolean disableMBeanRegistry) {\n \t\tthis.disableMBeanRegistry = disableMBeanRegistry;\n \t}\n \n+\tprivate record TempDirDeletion(File tempDir, TempDirectoryDeletionStrategy deletionStrategy) implements LifecycleListener {\n+\n+\t\t@Override\n+\t\tpublic void lifecycleEvent(LifecycleEvent event) {\n+\t\t\tif (event.getType().equals(Lifecycle.AFTER_DESTROY_EVENT)) {\n+\t\t\t\tdeletionStrategy().deleteOnShutdown(tempDir());\n+\t\t\t}\n+\t\t}\n+\t}\n }\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java\nindex 5b516ab8af53..9e770f4bf8dc 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java\n@@ -77,6 +77,7 @@\n import org.springframework.boot.web.server.ErrorPage;\n import org.springframework.boot.web.server.MimeMappings;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.boot.web.server.WebServer;\n import org.springframework.boot.web.servlet.ServletContextInitializer;\n import org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory;\n@@ -516,6 +517,13 @@ protected TomcatWebServer getTomcatWebServer(Tomcat tomcat) {\n \t\treturn new TomcatWebServer(tomcat, getPort() >= 0, getShutdown());\n \t}\n \n+\t@Override\n+\tprotected void deleteOnExit(File tempDir) {\n+\t\tthis.serverLifecycleListeners.add(\n+\t\t\t\tnew TempDirDeletion(tempDir, getShutdownTempDirDeletionStrategy())\n+\t\t);\n+\t}\n+\n \t@Override\n \tpublic void setResourceLoader(ResourceLoader resourceLoader) {\n \t\tthis.resourceLoader = resourceLoader;\n@@ -1005,4 +1013,14 @@ private SameSite getSameSite(Cookie cookie) {\n \n \t}\n \n+\tprivate record TempDirDeletion(File tempDir, TempDirectoryDeletionStrategy deletionStrategy) implements LifecycleListener {\n+\n+\t\t@Override\n+\t\tpublic void lifecycleEvent(LifecycleEvent event) {\n+\t\t\tif (event.getType().equals(Lifecycle.AFTER_DESTROY_EVENT)) {\n+\t\t\t\tdeletionStrategy().deleteOnShutdown(tempDir());\n+\t\t\t}\n+\t\t}\n+\t}\n+\n }\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java\nindex e03d06717ba2..6c0a4a47b0bf 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java\n@@ -49,21 +49,30 @@\n import io.undertow.servlet.api.Deployment;\n import io.undertow.servlet.api.DeploymentInfo;\n import io.undertow.servlet.api.DeploymentManager;\n+import io.undertow.servlet.api.FilterInfo;\n+import io.undertow.servlet.api.LifecycleInterceptor;\n import io.undertow.servlet.api.ListenerInfo;\n import io.undertow.servlet.api.MimeMapping;\n import io.undertow.servlet.api.ServletContainerInitializerInfo;\n+import io.undertow.servlet.api.ServletInfo;\n import io.undertow.servlet.api.ServletStackTraces;\n import io.undertow.servlet.core.DeploymentImpl;\n import io.undertow.servlet.handlers.DefaultServlet;\n import io.undertow.servlet.util.ImmediateInstanceFactory;\n+import jakarta.servlet.Filter;\n+import jakarta.servlet.Servlet;\n import jakarta.servlet.ServletContainerInitializer;\n import jakarta.servlet.ServletContext;\n import jakarta.servlet.ServletException;\n+import org.apache.catalina.Lifecycle;\n+import org.apache.catalina.LifecycleEvent;\n+import org.apache.catalina.LifecycleListener;\n \n import org.springframework.boot.context.properties.PropertyMapper;\n import org.springframework.boot.web.server.Cookie.SameSite;\n import org.springframework.boot.web.server.ErrorPage;\n import org.springframework.boot.web.server.MimeMappings.Mapping;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.boot.web.server.WebServer;\n import org.springframework.boot.web.servlet.ServletContextInitializer;\n import org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory;\n@@ -106,6 +115,8 @@ public class UndertowServletWebServerFactory extends AbstractServletWebServerFac\n \n \tprivate boolean preservePathOnForward = false;\n \n+\tprivate List<LifecycleInterceptor> lifecycleInterceptors = new ArrayList<>();\n+\n \t/**\n \t * Create a new {@link UndertowServletWebServerFactory} instance.\n \t */\n@@ -336,6 +347,7 @@ private DeploymentManager createManager(ServletContextInitializer... initializer\n \t\tDuration timeoutDuration = getSession().getTimeout();\n \t\tint sessionTimeout = (isZeroOrLess(timeoutDuration) ? -1 : (int) timeoutDuration.getSeconds());\n \t\tsessionManager.setDefaultSessionTimeout(sessionTimeout);\n+\t\tthis.lifecycleInterceptors.forEach(deployment::addLifecycleInterceptor);\n \t\treturn manager;\n \t}\n \n@@ -491,6 +503,26 @@ private HttpHandlerFactory getCookieHandlerFactory(Deployment deployment) {\n \t\treturn (!suppliers.isEmpty()) ? (next) -> new SuppliedSameSiteCookieHandler(next, suppliers) : null;\n \t}\n \n+\t@Override\n+\tprotected void deleteOnExit(File tempDir) {\n+\t\tthis.lifecycleInterceptors.add(new TempDirDeletion(tempDir, getShutdownTempDirDeletionStrategy()));\n+\t}\n+\n+\tprivate record TempDirDeletion(File tempDir, TempDirectoryDeletionStrategy deletionStrategy) implements LifecycleInterceptor {\n+\t\t@Override\n+\t\tpublic void init(ServletInfo servletInfo, Servlet servlet, LifecycleContext lifecycleContext) throws ServletException {}\n+\t\t@Override\n+\t\tpublic void init(FilterInfo filterInfo, Filter filter, LifecycleContext lifecycleContext) throws ServletException {}\n+\n+\t\t@Override\n+\t\tpublic void destroy(ServletInfo servletInfo, Servlet servlet, LifecycleContext lifecycleContext) throws ServletException {\n+\t\t\tdeletionStrategy().deleteOnShutdown(tempDir());\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void destroy(FilterInfo filterInfo, Filter filter, LifecycleContext lifecycleContext) throws ServletException {}\n+\t}\n+\n \t/**\n \t * {@link ServletContainerInitializer} to initialize {@link ServletContextInitializer\n \t * ServletContextInitializers}.\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java\nindex c3dccc6bb1fe..2fbc45b84368 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java\n@@ -64,6 +64,8 @@ public abstract class AbstractConfigurableWebServerFactory implements Configurab\n \n \tprivate Shutdown shutdown = Shutdown.IMMEDIATE;\n \n+\tprivate TempDirectoryDeletionStrategy deletionStrategy = TempDirectoryDeletionStrategy.DELETE_ON_EXIT;\n+\n \t/**\n \t * Create a new {@link AbstractConfigurableWebServerFactory} instance.\n \t */\n@@ -181,6 +183,15 @@ public void setShutdown(Shutdown shutdown) {\n \t\tthis.shutdown = shutdown;\n \t}\n \n+\t@Override\n+\tpublic void setShutdownTempDirDeletionStrategy(TempDirectoryDeletionStrategy deletionStrategy) {\n+\t\tthis.deletionStrategy = deletionStrategy;\n+\t}\n+\n+\tpublic TempDirectoryDeletionStrategy getShutdownTempDirDeletionStrategy() {\n+\t\treturn this.deletionStrategy;\n+\t}\n+\n \t/**\n \t * Returns the shutdown configuration that will be applied to the server.\n \t * @return the shutdown configuration\n@@ -213,7 +224,7 @@ protected final Map<String, SslBundle> getServerNameSslBundles() {\n \tprotected final File createTempDir(String prefix) {\n \t\ttry {\n \t\t\tFile tempDir = Files.createTempDirectory(prefix + \".\" + getPort() + \".\").toFile();\n-\t\t\ttempDir.deleteOnExit();\n+\t\t\tdeleteOnExit(tempDir);\n \t\t\treturn tempDir;\n \t\t}\n \t\tcatch (IOException ex) {\n@@ -222,4 +233,13 @@ protected final File createTempDir(String prefix) {\n \t\t}\n \t}\n \n+\t/**\n+\t * delete the temporary directory when the application is shut down.\n+\t * @param tempDir the temporary directory to delete\n+\t */\n+\tprotected void deleteOnExit(File tempDir) {\n+\t\tRuntime.getRuntime().addShutdownHook(\n+\t\t\t\tnew Thread(() -> this.deletionStrategy.deleteOnShutdown(tempDir))\n+\t\t);\n+\t}\n }\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ConfigurableWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ConfigurableWebServerFactory.java\nindex bc90e66b7600..ab05986217f5 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ConfigurableWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ConfigurableWebServerFactory.java\n@@ -93,4 +93,13 @@ default void setShutdown(Shutdown shutdown) {\n \n \t}\n \n+\t/**\n+\t * Sets deletion strategy of temporary directory on shutdown.\n+\t * @param deletionStrategy deletion strategy of temporary directory on shutdown\n+\t * @since 2.3.0\n+\t */\n+\tdefault void setShutdownTempDirDeletionStrategy(TempDirectoryDeletionStrategy deletionStrategy) {\n+\n+\t}\n+\n }\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/TempDirectoryDeletionStrategy.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/TempDirectoryDeletionStrategy.java\nnew file mode 100644\nindex 000000000000..19b9284a484c\n--- /dev/null\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/TempDirectoryDeletionStrategy.java\n@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2012-2024 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.web.server;\n+\n+import java.io.File;\n+import java.util.function.Consumer;\n+\n+import org.springframework.util.FileSystemUtils;\n+\n+/**\n+ * The deletion strategy of temporary directory use in {@link ConfigurableWebServerFactory}.\n+ * @since 3.4.0\n+ */\n+public enum TempDirectoryDeletionStrategy {\n+\t/**\n+\t * The default strategy. when the context is shutdown, the created temporary\n+\t * directory is deleted. If the temporary directory is not empty, then it will\n+\t * not be deleted.\n+\t */\n+\tDELETE_ON_EXIT(File::delete) {},\n+\t/**\n+\t * When the context is shutdown, then created temporary directory is deleted with\n+\t * all its content.\n+\t */\n+\tRECURSIVE_DELETE(FileSystemUtils::deleteRecursively),\n+\t/**\n+\t * When the context is shutdown, we keep all the created temporary directory.\n+\t * With this configuration, if you need to remove the directory, you need to\n+\t * do it manually or with a cron task.\n+\t */\n+\tNOTHING(tempDir -> {}),\n+\t;\n+\n+\tprivate final Consumer<File> deleter;\n+\n+\tTempDirectoryDeletionStrategy(Consumer<File> deleter) {\n+\t\tthis.deleter = deleter;\n+\t}\n+\n+\tpublic void deleteOnShutdown(File file) {\n+\t\tthis.deleter.accept(file);\n+\t}\n+}\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java\nindex 231df5b4c927..75fa2efd7880 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java\n@@ -35,6 +35,8 @@\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.util.thread.QueuedThreadPool;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.EnumSource;\n import reactor.netty.http.HttpDecoderSpec;\n \n import org.springframework.boot.autoconfigure.web.ServerProperties.Tomcat.Accesslog;\n@@ -48,6 +50,7 @@\n import org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;\n import org.springframework.boot.web.server.MimeMappings;\n import org.springframework.boot.web.server.MimeMappings.Mapping;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.test.util.ReflectionTestUtils;\n import org.springframework.util.unit.DataSize;\n \n@@ -347,6 +350,13 @@ void testCustomizeNettyMaxKeepAliveRequests() {\n \t\tassertThat(this.properties.getNetty().getMaxKeepAliveRequests()).isEqualTo(100);\n \t}\n \n+\t@ParameterizedTest\n+\t@EnumSource\n+\tvoid testTmpDeletionStrategyBinding(TempDirectoryDeletionStrategy deletionStrategy) {\n+\t\tbind(\"server.tmp-deletion-strategy\", deletionStrategy.name());\n+\t\tassertThat(this.properties.getTmpDeletionStrategy()).isEqualTo(deletionStrategy);\n+\t}\n+\n \t@Test\n \tvoid tomcatAcceptCountMatchesProtocolDefault() throws Exception {\n \t\tassertThat(this.properties.getTomcat().getAcceptCount()).isEqualTo(getDefaultProtocol().getAcceptCount());\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizerTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizerTests.java\nindex 4ec66ec84476..1e5e0f612956 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizerTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizerTests.java\n@@ -27,6 +27,7 @@\n import org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory;\n import org.springframework.boot.web.server.Shutdown;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n \n import static org.assertj.core.api.Assertions.assertThat;\n import static org.mockito.ArgumentMatchers.assertArg;\n@@ -88,4 +89,11 @@ void whenShutdownPropertyIsSetThenShutdownIsCustomized() {\n \t\tthen(factory).should().setShutdown(assertArg((shutdown) -> assertThat(shutdown).isEqualTo(Shutdown.GRACEFUL)));\n \t}\n \n+\t@Test\n+\tvoid whenTmpDeletionStrategyIsCustomized() {\n+\t\tthis.properties.setTmpDeletionStrategy(TempDirectoryDeletionStrategy.NOTHING);\n+\t\tConfigurableReactiveWebServerFactory factory = mock(ConfigurableReactiveWebServerFactory.class);\n+\t\tthis.customizer.customize(factory);\n+\t\tthen(factory).should().setShutdownTempDirDeletionStrategy(assertArg((tmpDeletionStrategy) -> assertThat(tmpDeletionStrategy).isEqualTo(TempDirectoryDeletionStrategy.NOTHING)));\n+\t}\n }\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizerTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizerTests.java\nindex 73e1348c3560..2e889830df3f 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizerTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizerTests.java\n@@ -29,10 +29,12 @@\n import org.springframework.boot.context.properties.bind.Binder;\n import org.springframework.boot.context.properties.source.ConfigurationPropertySource;\n import org.springframework.boot.context.properties.source.MapConfigurationPropertySource;\n+import org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory;\n import org.springframework.boot.web.server.Cookie;\n import org.springframework.boot.web.server.MimeMappings;\n import org.springframework.boot.web.server.Shutdown;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory;\n import org.springframework.boot.web.servlet.server.Jsp;\n \n@@ -193,6 +195,16 @@ void whenShutdownPropertyIsSetThenShutdownIsCustomized() {\n \t\tthen(factory).should().setShutdown(assertArg((shutdown) -> assertThat(shutdown).isEqualTo(Shutdown.IMMEDIATE)));\n \t}\n \n+\t@Test\n+\tvoid whenTmpDeletionStrategyIsCustomized() {\n+\t\tMap<String, String> map = new HashMap<>();\n+\t\tmap.put(\"server.tmp-deletion-strategy\", \"NOTHING\");\n+\t\tbindProperties(map);\n+\t\tConfigurableServletWebServerFactory factory = mock(ConfigurableServletWebServerFactory.class);\n+\t\tthis.customizer.customize(factory);\n+\t\tthen(factory).should().setShutdownTempDirDeletionStrategy(assertArg((tmpDeletionStrategy) -> assertThat(tmpDeletionStrategy).isEqualTo(TempDirectoryDeletionStrategy.NOTHING)));\n+\t}\n+\n \tprivate void bindProperties(Map<String, String> map) {\n \t\tConfigurationPropertySource source = new MapConfigurationPropertySource(map);\n \t\tnew Binder(source).bind(\"server\", Bindable.ofInstance(this.properties));\n",
    "problem_statement": "Delete Tomcat's temporary directories when the context is closed\nUsing Spring Boot 1.5.1.\r\n\r\nThe directory /tmp/tomcat-* are not deleted when stopping a Spring Boot application.\r\nThe directory is created using (in org.springframework.boot.context.embedded.AbstractEmbeddedServletContainerFactory) :\r\n```\r\nFile tempDir = File.createTempFile(prefix + \".\", \".\" + getPort());\r\n\t\t\ttempDir.delete();\r\n\t\t\ttempDir.mkdir();\r\n\t\t\ttempDir.deleteOnExit();\r\n\t\t\treturn tempDir;\r\n```\r\n\r\nI think that ```deleteOnExit()``` method doesn't work if the directory is not empty. I made a little standard Java test:\r\n```\r\npublic static void main(String[] args) throws IOException, InterruptedException {\r\n\t\tFile tempDir = File.createTempFile(\"prefix\", \"suffix\");\r\n\t\ttempDir.delete();\r\n\t\ttempDir.mkdir();\r\n\t\ttempDir.deleteOnExit();\r\n\t\t\r\n\t\ttry (FileOutputStream os = new FileOutputStream(new File(tempDir, \"noempty.txt\"))) {\r\n\t\t\tos.write(\"This a not an empty file\".getBytes());\r\n\t\t}\r\n\t\tThread.sleep(Long.MAX_VALUE);\r\n\t}\r\n```\r\nThen I send a linux signal ```kill -15 <pid>``` but the folder 'prefix*' is still here.\r\n\r\n\r\n",
    "hints_text": "provide a solution to delete temporary directories on server shutdown\n\u2026context is closed #9983\r\n\r\nThe directory /tmp/tomcat-* are not deleted when stopping a Spring Boot application.\r\nThis PR provide a solution with backward compatibility\r\n\r\n - Add a parameter server.tmp-deletion-strategy with 3 possible value :\r\n   - `DELETE_ON_EXIT` : The default strategy. when the context is shutdown, the created temporary directory is deleted. If the temporary directory is not empty, then it will not be deleted.\r\n   - `RECURSIVE_DELETE` : When the context is shutdown, then created temporary directory is deleted with all its content.\r\n   - `NOTHING` : When the context is shutdown, we keep all the created temporary directory. With this configuration, if you need to remove the directory, you need to do it manually or with a cron task.\r\n - Use this parameter when the Servlet needs to create a temporary directory\r\n\r\nby default, the behaviour is the same. but if you want to delete everything, you need to add in your `application.properties` ;\r\n\r\n```\r\nserver.tmp-deletion-strategy=RECURSIVE_DELETE\r\n```\r\n\r\nNB : this is a proposal to use Tomcat/Jetty/Undertow solutions to delete the tmp dirs after the server is stopped\r\n\r\n<!--\r\nThanks for contributing to Spring Boot. Please review the following notes before\r\nsubmitting a pull request.\r\n\r\nPlease submit only genuine pull-requests. Do not use this repository as a GitHub\r\nplayground.\r\n\r\nSecurity Vulnerabilities\r\n\r\nSTOP! If your contribution fixes a security vulnerability, please do not submit it.\r\nInstead, please head over to https://spring.io/security-policy to learn how to disclose a\r\nvulnerability responsibly.\r\n\r\nDependency Upgrades\r\n\r\nPlease do not open a pull request for a straightforward dependency upgrade (one that\r\nonly updates the version property). We have a semi-automated process for such upgrades\r\nthat we prefer to use. However, if the upgrade is more involved (such as requiring\r\nchanges for removed or deprecated API) your pull request is most welcome.\r\n\r\nDescribing Your Changes\r\n\r\nIf, having reviewed the notes above, you're ready to submit your pull request, please\r\nprovide a brief description of the proposed changes. If they fix a bug, please\r\ndescribe the broken behaviour and how the changes fix it. If they make an enhancement,\r\nplease describe the new functionality and why you believe it's useful. If your pull\r\nrequest relates to any existing issues, please reference them by using the issue number\r\nprefixed with #.\r\n-->\r\n",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:processResources",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-mustache:processResources",
      "spring-boot-project:spring-boot-docs:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:processResources",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-undertow:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow-ssl:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-docs:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:jar",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-jdbc:processResources",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-jetty:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:processResources",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-tomcat:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging-log4j2:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webservices:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-application-type:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-custom:processResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-groovy-templates:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-thymeleaf:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-freemarker:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux:processResources",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:syncAntSources",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:processResources",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-project:spring-boot-testcontainers:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:processResources",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-static:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:testClasses",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-method-security:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux-coroutines:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:test",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processResources",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processTestResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-project:spring-boot:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-project:spring-boot-docs:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-project:spring-boot:generateMetadataFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-project:spring-boot-docs:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 42852,
    "instance_id": "spring-projects__spring-boot_42852",
    "issue_numbers": [
      9983
    ],
    "base_commit": "c6619dd306b844ad7f876a9a7abc3661cc343dd1",
    "patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java\nindex 2882b7079cbe..b2ead05e34c7 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java\n@@ -40,6 +40,7 @@\n import org.springframework.boot.web.server.MimeMappings;\n import org.springframework.boot.web.server.Shutdown;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.boot.web.servlet.server.Encoding;\n import org.springframework.boot.web.servlet.server.Jsp;\n import org.springframework.boot.web.servlet.server.Session;\n@@ -115,6 +116,12 @@ public class ServerProperties {\n \t */\n \tprivate Shutdown shutdown = Shutdown.GRACEFUL;\n \n+\t/**\n+\t * The deletion strategy of temporary directory when you shut down the server\n+\t * server.tmp-deletion-strategy\n+\t */\n+\tprivate TempDirectoryDeletionStrategy tmpDeletionStrategy = TempDirectoryDeletionStrategy.DELETE_ON_EXIT;\n+\n \t@NestedConfigurationProperty\n \tprivate Ssl ssl;\n \n@@ -181,6 +188,14 @@ public void setShutdown(Shutdown shutdown) {\n \t\tthis.shutdown = shutdown;\n \t}\n \n+\tpublic TempDirectoryDeletionStrategy getTmpDeletionStrategy() {\n+\t\treturn this.tmpDeletionStrategy;\n+\t}\n+\n+\tpublic void setTmpDeletionStrategy(TempDirectoryDeletionStrategy tmpDeletionStrategy) {\n+\t\tthis.tmpDeletionStrategy = tmpDeletionStrategy;\n+\t}\n+\n \tpublic ErrorProperties getError() {\n \t\treturn this.error;\n \t}\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.java\nindex 1b1a1c788224..f3af2ad5dcf6 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.java\n@@ -72,6 +72,7 @@ public void customize(ConfigurableReactiveWebServerFactory factory) {\n \t\tmap.from(this.serverProperties::getCompression).to(factory::setCompression);\n \t\tmap.from(this.serverProperties::getHttp2).to(factory::setHttp2);\n \t\tmap.from(this.serverProperties.getShutdown()).to(factory::setShutdown);\n+\t\tmap.from(this.serverProperties.getTmpDeletionStrategy()).to(factory::setShutdownTempDirDeletionStrategy);\n \t\tmap.from(() -> this.sslBundles).to(factory::setSslBundles);\n \t}\n \ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.java\nindex bc1dbd4e2489..564c3ff4789a 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.java\n@@ -91,6 +91,7 @@ public void customize(ConfigurableServletWebServerFactory factory) {\n \t\tmap.from(this.serverProperties::getServerHeader).to(factory::setServerHeader);\n \t\tmap.from(this.serverProperties.getServlet()::getContextParameters).to(factory::setInitParameters);\n \t\tmap.from(this.serverProperties.getShutdown()).to(factory::setShutdown);\n+\t\tmap.from(this.serverProperties.getTmpDeletionStrategy()).to(factory::setShutdownTempDirDeletionStrategy);\n \t\tmap.from(() -> this.sslBundles).to(factory::setSslBundles);\n \t\tmap.from(() -> this.cookieSameSiteSuppliers)\n \t\t\t.whenNot(CollectionUtils::isEmpty)\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java\nindex c3dccc6bb1fe..ef2387cf64e2 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java\n@@ -64,6 +64,8 @@ public abstract class AbstractConfigurableWebServerFactory implements Configurab\n \n \tprivate Shutdown shutdown = Shutdown.IMMEDIATE;\n \n+\tprivate TempDirectoryDeletionStrategy deletionStrategy = TempDirectoryDeletionStrategy.DELETE_ON_EXIT;\n+\n \t/**\n \t * Create a new {@link AbstractConfigurableWebServerFactory} instance.\n \t */\n@@ -181,6 +183,11 @@ public void setShutdown(Shutdown shutdown) {\n \t\tthis.shutdown = shutdown;\n \t}\n \n+\t@Override\n+\tpublic void setShutdownTempDirDeletionStrategy(TempDirectoryDeletionStrategy deletionStrategy) {\n+\t\tthis.deletionStrategy = deletionStrategy;\n+\t}\n+\n \t/**\n \t * Returns the shutdown configuration that will be applied to the server.\n \t * @return the shutdown configuration\n@@ -213,7 +220,7 @@ protected final Map<String, SslBundle> getServerNameSslBundles() {\n \tprotected final File createTempDir(String prefix) {\n \t\ttry {\n \t\t\tFile tempDir = Files.createTempDirectory(prefix + \".\" + getPort() + \".\").toFile();\n-\t\t\ttempDir.deleteOnExit();\n+\t\t\tthis.deletionStrategy.deleteOnShutdown(tempDir);\n \t\t\treturn tempDir;\n \t\t}\n \t\tcatch (IOException ex) {\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ConfigurableWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ConfigurableWebServerFactory.java\nindex bc90e66b7600..ab05986217f5 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ConfigurableWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ConfigurableWebServerFactory.java\n@@ -93,4 +93,13 @@ default void setShutdown(Shutdown shutdown) {\n \n \t}\n \n+\t/**\n+\t * Sets deletion strategy of temporary directory on shutdown.\n+\t * @param deletionStrategy deletion strategy of temporary directory on shutdown\n+\t * @since 2.3.0\n+\t */\n+\tdefault void setShutdownTempDirDeletionStrategy(TempDirectoryDeletionStrategy deletionStrategy) {\n+\n+\t}\n+\n }\ndiff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/TempDirectoryDeletionStrategy.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/TempDirectoryDeletionStrategy.java\nnew file mode 100644\nindex 000000000000..d248f48ddffc\n--- /dev/null\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/TempDirectoryDeletionStrategy.java\n@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2012-2024 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.web.server;\n+\n+import java.io.File;\n+import java.util.function.Consumer;\n+\n+import org.springframework.util.FileSystemUtils;\n+\n+/**\n+ * The deletion strategy of temporary directory use in {@link ConfigurableWebServerFactory}.\n+ * @since 3.4.0\n+ */\n+public enum TempDirectoryDeletionStrategy {\n+\t/**\n+\t * The default strategy. when the context is shutdown, the created temporary\n+\t * directory is deleted. If the temporary directory is not empty, then it will\n+\t * not be deleted.\n+\t */\n+\tDELETE_ON_EXIT(File::deleteOnExit) {},\n+\t/**\n+\t * When the context is shutdown, then created temporary directory is deleted with\n+\t * all its content.\n+\t */\n+\tRECURSIVE_DELETE(TempDirectoryDeletionStrategy::deleteRecursivelyTempDir),\n+\t/**\n+\t * When the context is shutdown, we keep all the created temporary directory.\n+\t * With this configuration, if you need to remove the directory, you need to\n+\t * do it manually or with a cron task.\n+\t */\n+\tNOTHING(tempDir -> {}),\n+\t;\n+\n+\tprivate final Consumer<File> deleter;\n+\n+\tTempDirectoryDeletionStrategy(Consumer<File> deleter) {\n+\t\tthis.deleter = deleter;\n+\t}\n+\n+\tpublic void deleteOnShutdown(File file) {\n+\t\tthis.deleter.accept(file);\n+\t}\n+\n+\tprivate static void deleteRecursivelyTempDir(File tempDir) {\n+\t\tRuntime.getRuntime().addShutdownHook(\n+\t\t\t\tnew Thread(() -> FileSystemUtils.deleteRecursively(tempDir), \"deleteRecursivelyTempDir - \" + tempDir.getName())\n+\t\t);\n+\t}\n+}\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java\nindex 231df5b4c927..75fa2efd7880 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java\n@@ -35,6 +35,8 @@\n import org.eclipse.jetty.server.Server;\n import org.eclipse.jetty.util.thread.QueuedThreadPool;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.EnumSource;\n import reactor.netty.http.HttpDecoderSpec;\n \n import org.springframework.boot.autoconfigure.web.ServerProperties.Tomcat.Accesslog;\n@@ -48,6 +50,7 @@\n import org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;\n import org.springframework.boot.web.server.MimeMappings;\n import org.springframework.boot.web.server.MimeMappings.Mapping;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.test.util.ReflectionTestUtils;\n import org.springframework.util.unit.DataSize;\n \n@@ -347,6 +350,13 @@ void testCustomizeNettyMaxKeepAliveRequests() {\n \t\tassertThat(this.properties.getNetty().getMaxKeepAliveRequests()).isEqualTo(100);\n \t}\n \n+\t@ParameterizedTest\n+\t@EnumSource\n+\tvoid testTmpDeletionStrategyBinding(TempDirectoryDeletionStrategy deletionStrategy) {\n+\t\tbind(\"server.tmp-deletion-strategy\", deletionStrategy.name());\n+\t\tassertThat(this.properties.getTmpDeletionStrategy()).isEqualTo(deletionStrategy);\n+\t}\n+\n \t@Test\n \tvoid tomcatAcceptCountMatchesProtocolDefault() throws Exception {\n \t\tassertThat(this.properties.getTomcat().getAcceptCount()).isEqualTo(getDefaultProtocol().getAcceptCount());\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizerTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizerTests.java\nindex 4ec66ec84476..1e5e0f612956 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizerTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizerTests.java\n@@ -27,6 +27,7 @@\n import org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory;\n import org.springframework.boot.web.server.Shutdown;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n \n import static org.assertj.core.api.Assertions.assertThat;\n import static org.mockito.ArgumentMatchers.assertArg;\n@@ -88,4 +89,11 @@ void whenShutdownPropertyIsSetThenShutdownIsCustomized() {\n \t\tthen(factory).should().setShutdown(assertArg((shutdown) -> assertThat(shutdown).isEqualTo(Shutdown.GRACEFUL)));\n \t}\n \n+\t@Test\n+\tvoid whenTmpDeletionStrategyIsCustomized() {\n+\t\tthis.properties.setTmpDeletionStrategy(TempDirectoryDeletionStrategy.NOTHING);\n+\t\tConfigurableReactiveWebServerFactory factory = mock(ConfigurableReactiveWebServerFactory.class);\n+\t\tthis.customizer.customize(factory);\n+\t\tthen(factory).should().setShutdownTempDirDeletionStrategy(assertArg((tmpDeletionStrategy) -> assertThat(tmpDeletionStrategy).isEqualTo(TempDirectoryDeletionStrategy.NOTHING)));\n+\t}\n }\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizerTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizerTests.java\nindex 73e1348c3560..2e889830df3f 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizerTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizerTests.java\n@@ -29,10 +29,12 @@\n import org.springframework.boot.context.properties.bind.Binder;\n import org.springframework.boot.context.properties.source.ConfigurationPropertySource;\n import org.springframework.boot.context.properties.source.MapConfigurationPropertySource;\n+import org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory;\n import org.springframework.boot.web.server.Cookie;\n import org.springframework.boot.web.server.MimeMappings;\n import org.springframework.boot.web.server.Shutdown;\n import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.TempDirectoryDeletionStrategy;\n import org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory;\n import org.springframework.boot.web.servlet.server.Jsp;\n \n@@ -193,6 +195,16 @@ void whenShutdownPropertyIsSetThenShutdownIsCustomized() {\n \t\tthen(factory).should().setShutdown(assertArg((shutdown) -> assertThat(shutdown).isEqualTo(Shutdown.IMMEDIATE)));\n \t}\n \n+\t@Test\n+\tvoid whenTmpDeletionStrategyIsCustomized() {\n+\t\tMap<String, String> map = new HashMap<>();\n+\t\tmap.put(\"server.tmp-deletion-strategy\", \"NOTHING\");\n+\t\tbindProperties(map);\n+\t\tConfigurableServletWebServerFactory factory = mock(ConfigurableServletWebServerFactory.class);\n+\t\tthis.customizer.customize(factory);\n+\t\tthen(factory).should().setShutdownTempDirDeletionStrategy(assertArg((tmpDeletionStrategy) -> assertThat(tmpDeletionStrategy).isEqualTo(TempDirectoryDeletionStrategy.NOTHING)));\n+\t}\n+\n \tprivate void bindProperties(Map<String, String> map) {\n \t\tConfigurationPropertySource source = new MapConfigurationPropertySource(map);\n \t\tnew Binder(source).bind(\"server\", Bindable.ofInstance(this.properties));\n",
    "problem_statement": "Delete Tomcat's temporary directories when the context is closed\nUsing Spring Boot 1.5.1.\r\n\r\nThe directory /tmp/tomcat-* are not deleted when stopping a Spring Boot application.\r\nThe directory is created using (in org.springframework.boot.context.embedded.AbstractEmbeddedServletContainerFactory) :\r\n```\r\nFile tempDir = File.createTempFile(prefix + \".\", \".\" + getPort());\r\n\t\t\ttempDir.delete();\r\n\t\t\ttempDir.mkdir();\r\n\t\t\ttempDir.deleteOnExit();\r\n\t\t\treturn tempDir;\r\n```\r\n\r\nI think that ```deleteOnExit()``` method doesn't work if the directory is not empty. I made a little standard Java test:\r\n```\r\npublic static void main(String[] args) throws IOException, InterruptedException {\r\n\t\tFile tempDir = File.createTempFile(\"prefix\", \"suffix\");\r\n\t\ttempDir.delete();\r\n\t\ttempDir.mkdir();\r\n\t\ttempDir.deleteOnExit();\r\n\t\t\r\n\t\ttry (FileOutputStream os = new FileOutputStream(new File(tempDir, \"noempty.txt\"))) {\r\n\t\t\tos.write(\"This a not an empty file\".getBytes());\r\n\t\t}\r\n\t\tThread.sleep(Long.MAX_VALUE);\r\n\t}\r\n```\r\nThen I send a linux signal ```kill -15 <pid>``` but the folder 'prefix*' is still here.\r\n\r\n\r\n",
    "hints_text": "provide a solution to delete Tomcat's temporary directories when the \u2026\n\u2026context is closed #9983\r\n\r\nThe directory /tmp/tomcat-* are not deleted when stopping a Spring Boot application.\r\nThis PR provide a solution with backward compatibility\r\n\r\n - Add a parameter server.tmp-deletion-strategy with 3 possible value :\r\n   - `DELETE_ON_EXIT` : The default strategy. when the context is shutdown, the created temporary directory is deleted. If the temporary directory is not empty, then it will not be deleted.\r\n   - `RECURSIVE_DELETE` : When the context is shutdown, then created temporary directory is deleted with all its content.\r\n   - `NOTHING` : When the context is shutdown, we keep all the created temporary directory. With this configuration, if you need to remove the directory, you need to do it manually or with a cron task.\r\n - Use this parameter when the Servlet needs to create a temporary directory\r\n\r\nby default, the behaviour is the same. but if you want to delete everything, you need to add in your `application.properties` ;\r\n\r\n```\r\nserver.tmp-deletion-strategy=RECURSIVE_DELETE\r\n```\r\n\r\n<!--\r\nThanks for contributing to Spring Boot. Please review the following notes before\r\nsubmitting a pull request.\r\n\r\nPlease submit only genuine pull-requests. Do not use this repository as a GitHub\r\nplayground.\r\n\r\nSecurity Vulnerabilities\r\n\r\nSTOP! If your contribution fixes a security vulnerability, please do not submit it.\r\nInstead, please head over to https://spring.io/security-policy to learn how to disclose a\r\nvulnerability responsibly.\r\n\r\nDependency Upgrades\r\n\r\nPlease do not open a pull request for a straightforward dependency upgrade (one that\r\nonly updates the version property). We have a semi-automated process for such upgrades\r\nthat we prefer to use. However, if the upgrade is more involved (such as requiring\r\nchanges for removed or deprecated API) your pull request is most welcome.\r\n\r\nDescribing Your Changes\r\n\r\nIf, having reviewed the notes above, you're ready to submit your pull request, please\r\nprovide a brief description of the proposed changes. If they fix a bug, please\r\ndescribe the broken behaviour and how the changes fix it. If they make an enhancement,\r\nplease describe the new functionality and why you believe it's useful. If your pull\r\nrequest relates to any existing issues, please reference them by using the issue number\r\nprefixed with #.\r\n-->\r\n",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot:javadoc",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-mustache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-groovy-templates:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-thymeleaf:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-freemarker:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow-ssl:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:syncAntSources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-static:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging-log4j2:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webservices:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-method-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux-coroutines:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-application-type:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq-embedded:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-custom:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat11:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processResources"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 42174,
    "instance_id": "spring-projects__spring-boot_42174",
    "issue_numbers": [
      42163
    ],
    "base_commit": "c907bec434f879027d5a71489382d79eecbcf189",
    "patch": "diff --git a/spring-boot-project/spring-boot-docker-compose/src/dockerTest/java/org/springframework/boot/docker/compose/service/connection/otlp/GrafanaOpenTelemetryLoggingDockerComposeConnectionDetailsFactoryIntegrationTests.java b/spring-boot-project/spring-boot-docker-compose/src/dockerTest/java/org/springframework/boot/docker/compose/service/connection/otlp/GrafanaOpenTelemetryLoggingDockerComposeConnectionDetailsFactoryIntegrationTests.java\nnew file mode 100644\nindex 000000000000..ab4dda44ca97\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-docker-compose/src/dockerTest/java/org/springframework/boot/docker/compose/service/connection/otlp/GrafanaOpenTelemetryLoggingDockerComposeConnectionDetailsFactoryIntegrationTests.java\n@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2012-2024 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.docker.compose.service.connection.otlp;\n+\n+import org.springframework.boot.actuate.autoconfigure.logging.opentelemetry.otlp.OtlpLoggingConnectionDetails;\n+import org.springframework.boot.actuate.autoconfigure.opentelemetry.otlp.Transport;\n+import org.springframework.boot.docker.compose.service.connection.test.DockerComposeTest;\n+import org.springframework.boot.testsupport.container.TestImage;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+/**\n+ * Integration tests for {@link OpenTelemetryLoggingDockerComposeConnectionDetailsFactory}\n+ * using {@link TestImage#GRAFANA_OTEL_LGTM}.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+class GrafanaOpenTelemetryLoggingDockerComposeConnectionDetailsFactoryIntegrationTests {\n+\n+\t@DockerComposeTest(composeFile = \"otlp-compose.yaml\", image = TestImage.GRAFANA_OTEL_LGTM)\n+\tvoid runCreatesConnectionDetails(OtlpLoggingConnectionDetails connectionDetails) {\n+\t\tassertThat(connectionDetails.getUrl(Transport.HTTP)).startsWith(\"http://\").endsWith(\"/v1/logs\");\n+\t\tassertThat(connectionDetails.getUrl(Transport.GRPC)).startsWith(\"http://\").endsWith(\"/v1/logs\");\n+\t}\n+\n+}\ndiff --git a/spring-boot-project/spring-boot-docker-compose/src/main/java/org/springframework/boot/docker/compose/service/connection/otlp/OpenTelemetryLoggingDockerComposeConnectionDetailsFactory.java b/spring-boot-project/spring-boot-docker-compose/src/main/java/org/springframework/boot/docker/compose/service/connection/otlp/OpenTelemetryLoggingDockerComposeConnectionDetailsFactory.java\nindex df4f0da1c32e..be18e0c4d3bd 100644\n--- a/spring-boot-project/spring-boot-docker-compose/src/main/java/org/springframework/boot/docker/compose/service/connection/otlp/OpenTelemetryLoggingDockerComposeConnectionDetailsFactory.java\n+++ b/spring-boot-project/spring-boot-docker-compose/src/main/java/org/springframework/boot/docker/compose/service/connection/otlp/OpenTelemetryLoggingDockerComposeConnectionDetailsFactory.java\n@@ -31,12 +31,15 @@\n class OpenTelemetryLoggingDockerComposeConnectionDetailsFactory\n \t\textends DockerComposeConnectionDetailsFactory<OtlpLoggingConnectionDetails> {\n \n+\tprivate static final String[] OPENTELEMETRY_IMAGE_NAMES = { \"otel/opentelemetry-collector-contrib\",\n+\t\t\t\"grafana/otel-lgtm\" };\n+\n \tprivate static final int OTLP_GRPC_PORT = 4317;\n \n \tprivate static final int OTLP_HTTP_PORT = 4318;\n \n \tOpenTelemetryLoggingDockerComposeConnectionDetailsFactory() {\n-\t\tsuper(\"otel/opentelemetry-collector-contrib\",\n+\t\tsuper(OPENTELEMETRY_IMAGE_NAMES,\n \t\t\t\t\"org.springframework.boot.actuate.autoconfigure.logging.opentelemetry.otlp.OtlpLoggingAutoConfiguration\");\n \t}\n \ndiff --git a/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/features/dev-services.adoc b/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/features/dev-services.adoc\nindex 0eea9b29bdc7..f7e026d6aaf8 100644\n--- a/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/features/dev-services.adoc\n+++ b/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/features/dev-services.adoc\n@@ -108,7 +108,7 @@ The following service connections are currently supported:\n | Containers named \"neo4j\" or \"bitnami/neo4j\"\n \n | `OtlpLoggingConnectionDetails`\n-| Containers named \"otel/opentelemetry-collector-contrib\"\n+| Containers named \"otel/opentelemetry-collector-contrib\", \"grafana/otel-lgtm\"\n \n | `OtlpMetricsConnectionDetails`\n | Containers named \"otel/opentelemetry-collector-contrib\", \"grafana/otel-lgtm\"\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/testing/testcontainers.adoc b/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/testing/testcontainers.adoc\nindex fd795b4f8775..7a0fde2bf30b 100644\n--- a/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/testing/testcontainers.adoc\n+++ b/spring-boot-project/spring-boot-docs/src/docs/antora/modules/reference/pages/testing/testcontainers.adoc\n@@ -72,7 +72,7 @@ The following service connection factories are provided in the `spring-boot-test\n | Containers of type `Neo4jContainer`\n \n | `OtlpLoggingConnectionDetails`\n-| Containers named \"otel/opentelemetry-collector-contrib\"\n+| Containers named \"otel/opentelemetry-collector-contrib\" or of type `LgtmStackContainer`\n \n | `OtlpMetricsConnectionDetails`\n | Containers named \"otel/opentelemetry-collector-contrib\" or of type `LgtmStackContainer`\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/otlp/GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactoryIntegrationTests.java b/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/otlp/GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactoryIntegrationTests.java\nnew file mode 100644\nindex 000000000000..bf5b60d20287\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-testcontainers/src/dockerTest/java/org/springframework/boot/testcontainers/service/connection/otlp/GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactoryIntegrationTests.java\n@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2012-2024 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.testcontainers.service.connection.otlp;\n+\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.grafana.LgtmStackContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.actuate.autoconfigure.logging.opentelemetry.otlp.OtlpLoggingAutoConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.logging.opentelemetry.otlp.OtlpLoggingConnectionDetails;\n+import org.springframework.boot.actuate.autoconfigure.opentelemetry.otlp.Transport;\n+import org.springframework.boot.autoconfigure.ImportAutoConfiguration;\n+import org.springframework.boot.testcontainers.service.connection.ServiceConnection;\n+import org.springframework.boot.testsupport.container.TestImage;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+/**\n+ * Tests for {@link GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactory}.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+@SpringJUnitConfig\n+@Testcontainers(disabledWithoutDocker = true)\n+class GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactoryIntegrationTests {\n+\n+\t@Container\n+\t@ServiceConnection\n+\tstatic final LgtmStackContainer container = TestImage.container(LgtmStackContainer.class);\n+\n+\t@Autowired\n+\tprivate OtlpLoggingConnectionDetails connectionDetails;\n+\n+\t@Test\n+\tvoid connectionCanBeMadeToOpenTelemetryContainer() {\n+\t\tassertThat(this.connectionDetails.getUrl(Transport.GRPC))\n+\t\t\t.isEqualTo(\"%s/v1/logs\".formatted(container.getOtlpGrpcUrl()));\n+\t\tassertThat(this.connectionDetails.getUrl(Transport.HTTP))\n+\t\t\t.isEqualTo(\"%s/v1/logs\".formatted(container.getOtlpHttpUrl()));\n+\t}\n+\n+\t@Configuration(proxyBeanMethods = false)\n+\t@ImportAutoConfiguration(OtlpLoggingAutoConfiguration.class)\n+\tstatic class TestConfiguration {\n+\n+\t}\n+\n+}\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/otlp/GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactory.java b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/otlp/GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactory.java\nnew file mode 100644\nindex 000000000000..6e7085ae675d\n--- /dev/null\n+++ b/spring-boot-project/spring-boot-testcontainers/src/main/java/org/springframework/boot/testcontainers/service/connection/otlp/GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactory.java\n@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2012-2024 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.testcontainers.service.connection.otlp;\n+\n+import org.testcontainers.grafana.LgtmStackContainer;\n+\n+import org.springframework.boot.actuate.autoconfigure.logging.opentelemetry.otlp.OtlpLoggingConnectionDetails;\n+import org.springframework.boot.actuate.autoconfigure.opentelemetry.otlp.Transport;\n+import org.springframework.boot.testcontainers.service.connection.ContainerConnectionDetailsFactory;\n+import org.springframework.boot.testcontainers.service.connection.ContainerConnectionSource;\n+import org.springframework.boot.testcontainers.service.connection.ServiceConnection;\n+\n+/**\n+ * {@link ContainerConnectionDetailsFactory} to create\n+ * {@link OtlpLoggingConnectionDetails} from a\n+ * {@link ServiceConnection @ServiceConnection}-annotated {@link LgtmStackContainer} using\n+ * the {@code \"grafana/otel-lgtm\"} image.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+class GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactory\n+\t\textends ContainerConnectionDetailsFactory<LgtmStackContainer, OtlpLoggingConnectionDetails> {\n+\n+\tGrafanaOpenTelemetryLoggingContainerConnectionDetailsFactory() {\n+\t\tsuper(ANY_CONNECTION_NAME,\n+\t\t\t\t\"org.springframework.boot.actuate.autoconfigure.logging.opentelemetry.otlp.OtlpLoggingAutoConfiguration\");\n+\t}\n+\n+\t@Override\n+\tprotected OtlpLoggingConnectionDetails getContainerConnectionDetails(\n+\t\t\tContainerConnectionSource<LgtmStackContainer> source) {\n+\t\treturn new OpenTelemetryLoggingContainerConnectionDetails(source);\n+\t}\n+\n+\tprivate static final class OpenTelemetryLoggingContainerConnectionDetails\n+\t\t\textends ContainerConnectionDetails<LgtmStackContainer> implements OtlpLoggingConnectionDetails {\n+\n+\t\tprivate OpenTelemetryLoggingContainerConnectionDetails(ContainerConnectionSource<LgtmStackContainer> source) {\n+\t\t\tsuper(source);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getUrl(Transport transport) {\n+\t\t\tString url = switch (transport) {\n+\t\t\t\tcase HTTP -> getContainer().getOtlpHttpUrl();\n+\t\t\t\tcase GRPC -> getContainer().getOtlpGrpcUrl();\n+\t\t\t};\n+\t\t\treturn \"%s/v1/logs\".formatted(url);\n+\t\t}\n+\n+\t}\n+\n+}\ndiff --git a/spring-boot-project/spring-boot-testcontainers/src/main/resources/META-INF/spring.factories b/spring-boot-project/spring-boot-testcontainers/src/main/resources/META-INF/spring.factories\nindex 23f293f975e2..bd92b9665f14 100644\n--- a/spring-boot-project/spring-boot-testcontainers/src/main/resources/META-INF/spring.factories\n+++ b/spring-boot-project/spring-boot-testcontainers/src/main/resources/META-INF/spring.factories\n@@ -23,6 +23,7 @@ org.springframework.boot.testcontainers.service.connection.ldap.OpenLdapContaine\n org.springframework.boot.testcontainers.service.connection.liquibase.LiquibaseContainerConnectionDetailsFactory,\\\n org.springframework.boot.testcontainers.service.connection.mongo.MongoContainerConnectionDetailsFactory,\\\n org.springframework.boot.testcontainers.service.connection.neo4j.Neo4jContainerConnectionDetailsFactory,\\\n+org.springframework.boot.testcontainers.service.connection.otlp.GrafanaOpenTelemetryLoggingContainerConnectionDetailsFactory,\\\n org.springframework.boot.testcontainers.service.connection.otlp.GrafanaOpenTelemetryMetricsContainerConnectionDetailsFactory,\\\n org.springframework.boot.testcontainers.service.connection.otlp.GrafanaOpenTelemetryTracingContainerConnectionDetailsFactory,\\\n org.springframework.boot.testcontainers.service.connection.otlp.OpenTelemetryLoggingContainerConnectionDetailsFactory,\\\n",
    "problem_statement": "Add Grafana LGTM support to OtlpLoggingConnectionDetails\n`OtlpMetricsConnectionDetails` and `OtlpTracingConnectionDetails` both support Grafana LGTM stack containers coming from Docker Compose and Testcontainers.\r\n\r\nService connection support for `OtlpLoggingConnectionDetails` has been added in https://github.com/spring-projects/spring-boot/pull/41324, but only for the `otel/opentelemetry-collector-contrib` image.\r\n\r\nWe should add Grafana LGTM for consistency.",
    "hints_text": "Add OpenTelemetry Logging service connection support from LgtmStackContainer and Docker Compose\nFixes #42163",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:javadoc",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 42067,
    "instance_id": "spring-projects__spring-boot_42067",
    "issue_numbers": [
      42053
    ],
    "base_commit": "fa686bb593f2a3b85497546d3995c4050501ef61",
    "patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarPropertiesMapper.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarPropertiesMapper.java\nindex aa9f505b4cb2..025a11576d84 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarPropertiesMapper.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarPropertiesMapper.java\n@@ -186,6 +186,7 @@ private void customizePulsarContainerConsumerSubscriptionProperties(PulsarContai\n \t\tPulsarProperties.Consumer.Subscription properties = this.properties.getConsumer().getSubscription();\n \t\tPropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull();\n \t\tmap.from(properties::getType).to(containerProperties::setSubscriptionType);\n+\t\tmap.from(properties::getName).to(containerProperties::setSubscriptionName);\n \t}\n \n \tprivate void customizePulsarContainerListenerProperties(PulsarContainerProperties containerProperties) {\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarReactivePropertiesMapper.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarReactivePropertiesMapper.java\nindex 2f79bbae615f..57725a97c3b2 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarReactivePropertiesMapper.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarReactivePropertiesMapper.java\n@@ -87,6 +87,7 @@ private void customizePulsarContainerConsumerSubscriptionProperties(\n \t\tPulsarProperties.Consumer.Subscription properties = this.properties.getConsumer().getSubscription();\n \t\tPropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull();\n \t\tmap.from(properties::getType).to(containerProperties::setSubscriptionType);\n+\t\tmap.from(properties::getName).to(containerProperties::setSubscriptionName);\n \t}\n \n \tprivate void customizePulsarContainerListenerProperties(ReactivePulsarContainerProperties<?> containerProperties) {\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/pulsar/PulsarPropertiesMapperTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/pulsar/PulsarPropertiesMapperTests.java\nindex f23584aab0ab..0f667378c92c 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/pulsar/PulsarPropertiesMapperTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/pulsar/PulsarPropertiesMapperTests.java\n@@ -256,12 +256,14 @@ void customizeConsumerBuilder() {\n \tvoid customizeContainerProperties() {\n \t\tPulsarProperties properties = new PulsarProperties();\n \t\tproperties.getConsumer().getSubscription().setType(SubscriptionType.Shared);\n+\t\tproperties.getConsumer().getSubscription().setName(\"my-subscription\");\n \t\tproperties.getListener().setSchemaType(SchemaType.AVRO);\n \t\tproperties.getListener().setObservationEnabled(true);\n \t\tproperties.getTransaction().setEnabled(true);\n \t\tPulsarContainerProperties containerProperties = new PulsarContainerProperties(\"my-topic-pattern\");\n \t\tnew PulsarPropertiesMapper(properties).customizeContainerProperties(containerProperties);\n \t\tassertThat(containerProperties.getSubscriptionType()).isEqualTo(SubscriptionType.Shared);\n+\t\tassertThat(containerProperties.getSubscriptionName()).isEqualTo(\"my-subscription\");\n \t\tassertThat(containerProperties.getSchemaType()).isEqualTo(SchemaType.AVRO);\n \t\tassertThat(containerProperties.isObservationEnabled()).isTrue();\n \t\tassertThat(containerProperties.transactions().isEnabled()).isTrue();\ndiff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/pulsar/PulsarReactivePropertiesMapperTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/pulsar/PulsarReactivePropertiesMapperTests.java\nindex df078b21a354..9745700f506f 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/pulsar/PulsarReactivePropertiesMapperTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/pulsar/PulsarReactivePropertiesMapperTests.java\n@@ -119,10 +119,12 @@ void customizeMessageConsumerBuilder() {\n \tvoid customizeContainerProperties() {\n \t\tPulsarProperties properties = new PulsarProperties();\n \t\tproperties.getConsumer().getSubscription().setType(SubscriptionType.Shared);\n+\t\tproperties.getConsumer().getSubscription().setName(\"my-subscription\");\n \t\tproperties.getListener().setSchemaType(SchemaType.AVRO);\n \t\tReactivePulsarContainerProperties<Object> containerProperties = new ReactivePulsarContainerProperties<>();\n \t\tnew PulsarReactivePropertiesMapper(properties).customizeContainerProperties(containerProperties);\n \t\tassertThat(containerProperties.getSubscriptionType()).isEqualTo(SubscriptionType.Shared);\n+\t\tassertThat(containerProperties.getSubscriptionName()).isEqualTo(\"my-subscription\");\n \t\tassertThat(containerProperties.getSchemaType()).isEqualTo(SchemaType.AVRO);\n \t}\n \n",
    "problem_statement": "Clarify purpose of Pulsar consumer subscription related properties\nSome while ago I opened these two issues against the Spring Pulsar project:\r\n\r\n- https://github.com/spring-projects/spring-pulsar/issues/480\r\n- https://github.com/spring-projects/spring-pulsar/issues/488\r\n\r\nAfter setting up another project recently that uses Spring Pulsar for consuming messages, I've again tripped up on the same thing attempting to set Pulsar consumer subscription related settings using Spring Boot provided configuration properties.\r\n\r\nThough Spring Pulsar reference manual now contains the following two tips:\r\n\r\n> The `spring.pulsar.consumer.subscription.name` property is ignored and is instead generated when not specified on the annotation. \r\n\r\n> The `spring.pulsar.consumer.subscription-type` property is ignored and is instead taken from the value on the annotation. However, you can set the `subscriptionType = {}` on the annotation to instead use the property value as the default.\r\n\r\nIMO it would be good to revisit these properties as their purpose is (at least to me) unclear at the moment.\r\n\r\n/cc @onobc",
    "hints_text": "Apply spring.pulsar.consumer.subscription.name to auto-configured Pulsar listener container\nThe subscription name config prop was not being set on the Pulsar listener container properties. This commit adds the subscription name to the Pulsar property mappers.\r\n\r\nResolves #42053\r\n\r\n<!--\r\nThanks for contributing to Spring Boot. Please review the following notes before\r\nsubmitting a pull request.\r\n\r\nPlease submit only genuine pull-requests. Do not use this repository as a GitHub\r\nplayground.\r\n\r\nSecurity Vulnerabilities\r\n\r\nSTOP! If your contribution fixes a security vulnerability, please do not submit it.\r\nInstead, please head over to https://spring.io/security-policy to learn how to disclose a\r\nvulnerability responsibly.\r\n\r\nDependency Upgrades\r\n\r\nPlease do not open a pull request for a straightforward dependency upgrade (one that\r\nonly updates the version property). We have a semi-automated process for such upgrades\r\nthat we prefer to use. However, if the upgrade is more involved (such as requiring\r\nchanges for removed or deprecated API) your pull request is most welcome.\r\n\r\nDescribing Your Changes\r\n\r\nIf, having reviewed the notes above, you're ready to submit your pull request, please\r\nprovide a brief description of the proposed changes. If they fix a bug, please\r\ndescribe the broken behaviour and how the changes fix it. If they make an enhancement,\r\nplease describe the new functionality and why you believe it's useful. If your pull\r\nrequest relates to any existing issues, please reference them by using the issue number\r\nprefixed with #.\r\n-->\r\n",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:test",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:test",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:classes",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:classes",
      "spring-boot-project:spring-boot-docs:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:compileTestJava",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-project:spring-boot-docs:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generateMetadataFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:test",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:classes",
      "spring-boot-project:spring-boot-docs:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:compileJava",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:javadoc",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:jar",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:compileTestJava",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:test",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processTestResources",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:compileJava",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:processResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:classes",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-junit-vintage:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:test",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:test",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:test",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:publishMavenPublicationToProjectRepository",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:compileJava",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:classes",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-junit-vintage:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:testClasses",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:test",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:processResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generatePomFileForMavenPublication",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:classes",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:compileTestJava",
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-parent-context:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-cache:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-junit-vintage:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:compileJava",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-authorization-server:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-docs:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-bootstrap-registry:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-ldap:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-hateoas:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:compileJava",
      "buildSrc:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:generateMetadataFileForMavenPublication",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:classes",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:test",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jpa:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-ssl:compileJava",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-client:compileTestJava",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:compileTestJava",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-liquibase:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-liquibase:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:test",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-log4j2:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc-flyway:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-prometheus:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:processResources",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-logback:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-testcontainers:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-junit-vintage:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jetty-jsp:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:test",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:publishMavenPublicationToProjectRepository",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-devtools:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-redis:processTestResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-property-validation:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-ui:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-jersey:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:generatePomFileForMavenPublication",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-rsocket:testClasses",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-batch:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-profile:classes",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-quartz:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-aop:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-integration:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-rest:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-client:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-r2dbc:processResources",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-mongo:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-project:spring-boot-testcontainers:test",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure-webflux:processResources",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-saml2-service-provider:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jersey:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-kafka:processResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-oauth2-resource-server:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-servlet:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-reactive-oauth2-resource-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-flyway:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-amqp:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-jdbc:test",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-ant:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-secure:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-junit-vintage:classes",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-cassandra:testClasses",
      "spring-boot-system-tests:spring-boot-deployment-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-jpa:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-noweb:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-graphql:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-data-couchbase:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging-log4j2:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-mustache:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-undertow:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-xml:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-undertow-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test-nomockito:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test-nomockito:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-jetty:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-websocket-tomcat:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processTestResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test-nomockito:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging-log4j2:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webservices:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-application-type:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-secure-custom:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-groovy-templates:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-thymeleaf:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-freemarker:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-mongo:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test-nomockito:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-jsp:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-testng:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-mongo:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging-log4j2:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-redis:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-jdbc:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging-log4j2:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging-log4j2:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-static:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-jsp:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-multi-connectors:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-structure-logging-log4j2:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-web-method-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-tomcat-ssl:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-webflux-redis:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-webflux-coroutines:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-session-hazelcast:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-simple:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-test-nomockito:test",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-traditional:processTestResources"
    ],
    "bad_patches": []
  },
  {
    "repo": "spring-projects/spring-boot",
    "pull_number": 41213,
    "instance_id": "spring-projects__spring-boot_41213",
    "issue_numbers": [
      35863
    ],
    "base_commit": "ad730a6c84277fd545d5039519a88fad55f01767",
    "patch": "diff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/build.gradle b/spring-boot-project/spring-boot-actuator-autoconfigure/build.gradle\nindex 3b4e685872b0..533adfbb10d6 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/build.gradle\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/build.gradle\n@@ -161,6 +161,7 @@ dependencies {\n \ttestImplementation(\"org.awaitility:awaitility\")\n \ttestImplementation(\"org.cache2k:cache2k-api\")\n \ttestImplementation(\"org.eclipse.jetty.ee10:jetty-ee10-webapp\")\n+\ttestImplementation(\"org.eclipse.jetty.http2:jetty-http2-server\")\n \ttestImplementation(\"org.glassfish.jersey.ext:jersey-spring6\")\n \ttestImplementation(\"org.glassfish.jersey.media:jersey-media-json-jackson\")\n \ttestImplementation(\"org.hamcrest:hamcrest\")\ndiff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfiguration.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfiguration.java\nindex abb3253f2f99..9d797721fb88 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfiguration.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfiguration.java\n@@ -36,8 +36,10 @@\n  * the future, see: <a href=\n  * \"https://github.com/open-telemetry/opentelemetry-java/issues/3651\">opentelemetry-java#3651</a>.\n  * Because this class configures components from the OTel SDK, it can't support HTTP/JSON.\n- * To keep things simple, we only auto-configure HTTP/protobuf. If you want to use gRPC,\n- * define an {@link OtlpGrpcSpanExporter} and this auto-configuration will back off.\n+ * By default, we auto-configure HTTP/protobuf. If you want to use gRPC, you need to set\n+ * {@code management.otlp.tracing.transport=grpc}. If you define a\n+ * {@link OtlpHttpSpanExporter} or {@link OtlpGrpcSpanExporter}, this auto-configuration\n+ * will back off.\n  *\n  * @author Jonatan Ivanov\n  * @author Moritz Halbritter\ndiff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpProperties.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpProperties.java\nindex 371de8491146..b6bd517a5bd7 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpProperties.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpProperties.java\n@@ -44,6 +44,11 @@ public class OtlpProperties {\n \t */\n \tprivate Duration timeout = Duration.ofSeconds(10);\n \n+\t/**\n+\t * Transport used to send the spans. Defaults to HTTP.\n+\t */\n+\tprivate Transport transport = Transport.HTTP;\n+\n \t/**\n \t * Method used to compress the payload.\n \t */\n@@ -70,6 +75,14 @@ public void setTimeout(Duration timeout) {\n \t\tthis.timeout = timeout;\n \t}\n \n+\tpublic Transport getTransport() {\n+\t\treturn this.transport;\n+\t}\n+\n+\tpublic void setTransport(Transport transport) {\n+\t\tthis.transport = transport;\n+\t}\n+\n \tpublic Compression getCompression() {\n \t\treturn this.compression;\n \t}\n@@ -86,6 +99,20 @@ public void setHeaders(Map<String, String> headers) {\n \t\tthis.headers = headers;\n \t}\n \n+\tenum Transport {\n+\n+\t\t/**\n+\t\t * HTTP exporter.\n+\t\t */\n+\t\tHTTP,\n+\n+\t\t/**\n+\t\t * gRPC exporter.\n+\t\t */\n+\t\tGRPC\n+\n+\t}\n+\n \tenum Compression {\n \n \t\t/**\ndiff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpTracingConfigurations.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpTracingConfigurations.java\nindex 142696717172..95f0ec4a4afe 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpTracingConfigurations.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpTracingConfigurations.java\n@@ -20,6 +20,8 @@\n \n import io.opentelemetry.exporter.otlp.http.trace.OtlpHttpSpanExporter;\n import io.opentelemetry.exporter.otlp.http.trace.OtlpHttpSpanExporterBuilder;\n+import io.opentelemetry.exporter.otlp.trace.OtlpGrpcSpanExporter;\n+import io.opentelemetry.exporter.otlp.trace.OtlpGrpcSpanExporterBuilder;\n \n import org.springframework.boot.actuate.autoconfigure.tracing.ConditionalOnEnabledTracing;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n@@ -69,10 +71,11 @@ public String getUrl() {\n \tstatic class Exporters {\n \n \t\t@Bean\n-\t\t@ConditionalOnMissingBean(value = OtlpHttpSpanExporter.class,\n-\t\t\t\ttype = \"io.opentelemetry.exporter.otlp.trace.OtlpGrpcSpanExporter\")\n+\t\t@ConditionalOnMissingBean({ OtlpGrpcSpanExporter.class, OtlpHttpSpanExporter.class })\n \t\t@ConditionalOnBean(OtlpTracingConnectionDetails.class)\n \t\t@ConditionalOnEnabledTracing(\"otlp\")\n+\t\t@ConditionalOnProperty(prefix = \"management.otlp.tracing\", name = \"transport\", havingValue = \"http\",\n+\t\t\t\tmatchIfMissing = true)\n \t\tOtlpHttpSpanExporter otlpHttpSpanExporter(OtlpProperties properties,\n \t\t\t\tOtlpTracingConnectionDetails connectionDetails) {\n \t\t\tOtlpHttpSpanExporterBuilder builder = OtlpHttpSpanExporter.builder()\n@@ -85,6 +88,23 @@ OtlpHttpSpanExporter otlpHttpSpanExporter(OtlpProperties properties,\n \t\t\treturn builder.build();\n \t\t}\n \n+\t\t@Bean\n+\t\t@ConditionalOnMissingBean({ OtlpGrpcSpanExporter.class, OtlpHttpSpanExporter.class })\n+\t\t@ConditionalOnBean(OtlpTracingConnectionDetails.class)\n+\t\t@ConditionalOnEnabledTracing(\"otlp\")\n+\t\t@ConditionalOnProperty(prefix = \"management.otlp.tracing\", name = \"transport\", havingValue = \"grpc\")\n+\t\tOtlpGrpcSpanExporter otlpGrpcSpanExporter(OtlpProperties properties,\n+\t\t\t\tOtlpTracingConnectionDetails connectionDetails) {\n+\t\t\tOtlpGrpcSpanExporterBuilder builder = OtlpGrpcSpanExporter.builder()\n+\t\t\t\t.setEndpoint(connectionDetails.getUrl())\n+\t\t\t\t.setTimeout(properties.getTimeout())\n+\t\t\t\t.setCompression(properties.getCompression().name().toLowerCase());\n+\t\t\tfor (Entry<String, String> header : properties.getHeaders().entrySet()) {\n+\t\t\t\tbuilder.addHeader(header.getKey(), header.getValue());\n+\t\t\t}\n+\t\t\treturn builder.build();\n+\t\t}\n+\n \t}\n \n }\n",
    "test_patch": "diff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfigurationIntegrationTests.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfigurationIntegrationTests.java\nindex 0fcc77811f95..4f001a499380 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfigurationIntegrationTests.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfigurationIntegrationTests.java\n@@ -17,11 +17,15 @@\n package org.springframework.boot.actuate.autoconfigure.tracing.otlp;\n \n import java.io.IOException;\n+import java.io.InputStream;\n import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.LinkedBlockingQueue;\n import java.util.concurrent.TimeUnit;\n \n import io.micrometer.tracing.Tracer;\n import io.opentelemetry.exporter.otlp.http.trace.OtlpHttpSpanExporter;\n+import io.opentelemetry.exporter.otlp.trace.OtlpGrpcSpanExporter;\n import io.opentelemetry.sdk.common.CompletableResultCode;\n import io.opentelemetry.sdk.trace.export.SpanExporter;\n import okhttp3.mockwebserver.MockResponse;\n@@ -29,6 +33,16 @@\n import okhttp3.mockwebserver.RecordedRequest;\n import okio.Buffer;\n import okio.GzipSource;\n+import org.eclipse.jetty.http.HttpFields;\n+import org.eclipse.jetty.http2.server.HTTP2CServerConnectionFactory;\n+import org.eclipse.jetty.io.Content;\n+import org.eclipse.jetty.server.Handler;\n+import org.eclipse.jetty.server.HttpConfiguration;\n+import org.eclipse.jetty.server.Request;\n+import org.eclipse.jetty.server.Response;\n+import org.eclipse.jetty.server.Server;\n+import org.eclipse.jetty.server.ServerConnector;\n+import org.eclipse.jetty.util.Callback;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -36,8 +50,10 @@\n import org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration;\n import org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryAutoConfiguration;\n import org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.tracing.otlp.OtlpAutoConfigurationIntegrationTests.MockGrpcServer.RecordedGrpcRequest;\n import org.springframework.boot.autoconfigure.AutoConfigurations;\n import org.springframework.boot.test.context.runner.ApplicationContextRunner;\n+import org.springframework.util.StreamUtils;\n \n import static org.assertj.core.api.Assertions.assertThat;\n \n@@ -57,16 +73,28 @@ class OtlpAutoConfigurationIntegrationTests {\n \n \tprivate final MockWebServer mockWebServer = new MockWebServer();\n \n+\tprivate final MockGrpcServer mockGrpcServer = new MockGrpcServer();\n+\n \t@BeforeEach\n-\tvoid setUp() throws IOException {\n+\tvoid startMockWebServer() throws IOException {\n \t\tthis.mockWebServer.start();\n \t}\n \n+\t@BeforeEach\n+\tvoid startMockGrpcServer() throws Exception {\n+\t\tthis.mockGrpcServer.start();\n+\t}\n+\n \t@AfterEach\n-\tvoid tearDown() throws IOException {\n+\tvoid stopMockWebServer() throws IOException {\n \t\tthis.mockWebServer.close();\n \t}\n \n+\t@AfterEach\n+\tvoid stopMockGrpcServer() throws Exception {\n+\t\tthis.mockGrpcServer.stop();\n+\t}\n+\n \t@Test\n \tvoid httpSpanExporterShouldUseProtobufAndNoCompressionByDefault() {\n \t\tthis.mockWebServer.enqueue(new MockResponse());\n@@ -113,4 +141,88 @@ void httpSpanExporterCanBeConfiguredToUseGzipCompression() {\n \t\t\t});\n \t}\n \n+\t@Test\n+\tvoid grpcSpanExporter() {\n+\t\tthis.contextRunner\n+\t\t\t.withPropertyValues(\n+\t\t\t\t\t\"management.otlp.tracing.endpoint=http://localhost:%d\".formatted(this.mockGrpcServer.getPort()),\n+\t\t\t\t\t\"management.otlp.tracing.headers.custom=42\", \"management.otlp.tracing.transport=grpc\")\n+\t\t\t.run((context) -> {\n+\t\t\t\tcontext.getBean(Tracer.class).nextSpan().name(\"test\").end();\n+\t\t\t\tassertThat(context.getBean(OtlpGrpcSpanExporter.class).flush())\n+\t\t\t\t\t.isSameAs(CompletableResultCode.ofSuccess());\n+\t\t\t\tRecordedGrpcRequest request = this.mockGrpcServer.takeRequest(10, TimeUnit.SECONDS);\n+\t\t\t\tassertThat(request).isNotNull();\n+\t\t\t\tassertThat(request.headers().get(\"Content-Type\")).isEqualTo(\"application/grpc\");\n+\t\t\t\tassertThat(request.headers().get(\"custom\")).isEqualTo(\"42\");\n+\t\t\t\tassertThat(request.body()).contains(\"org.springframework.boot\");\n+\t\t\t});\n+\t}\n+\n+\tstatic class MockGrpcServer {\n+\n+\t\tprivate final Server server = createServer();\n+\n+\t\tprivate final BlockingQueue<RecordedGrpcRequest> recordedRequests = new LinkedBlockingQueue<>();\n+\n+\t\tvoid start() throws Exception {\n+\t\t\tthis.server.start();\n+\t\t}\n+\n+\t\tvoid stop() throws Exception {\n+\t\t\tthis.server.stop();\n+\t\t}\n+\n+\t\tint getPort() {\n+\t\t\treturn this.server.getURI().getPort();\n+\t\t}\n+\n+\t\tRecordedGrpcRequest takeRequest(int timeout, TimeUnit unit) throws InterruptedException {\n+\t\t\treturn this.recordedRequests.poll(timeout, unit);\n+\t\t}\n+\n+\t\tvoid recordRequest(RecordedGrpcRequest request) {\n+\t\t\tthis.recordedRequests.add(request);\n+\t\t}\n+\n+\t\tprivate Server createServer() {\n+\t\t\tServer server = new Server();\n+\t\t\tserver.addConnector(createConnector(server));\n+\t\t\tserver.setHandler(new GrpcHandler());\n+\n+\t\t\treturn server;\n+\t\t}\n+\n+\t\tprivate ServerConnector createConnector(Server server) {\n+\t\t\tServerConnector connector = new ServerConnector(server,\n+\t\t\t\t\tnew HTTP2CServerConnectionFactory(new HttpConfiguration()));\n+\t\t\tconnector.setPort(0);\n+\n+\t\t\treturn connector;\n+\t\t}\n+\n+\t\tclass GrpcHandler extends Handler.Abstract {\n+\n+\t\t\t@Override\n+\t\t\tpublic boolean handle(Request request, Response response, Callback callback) throws Exception {\n+\t\t\t\ttry (InputStream in = Content.Source.asInputStream(request)) {\n+\t\t\t\t\trecordRequest(new RecordedGrpcRequest(request.getHeaders(),\n+\t\t\t\t\t\t\tStreamUtils.copyToString(in, StandardCharsets.UTF_8)));\n+\t\t\t\t}\n+\n+\t\t\t\tresponse.getHeaders().add(\"Content-Type\", \"application/grpc\");\n+\t\t\t\tresponse.getHeaders().add(\"Grpc-Status\", \"0\");\n+\n+\t\t\t\tcallback.succeeded();\n+\n+\t\t\t\treturn true;\n+\t\t\t}\n+\n+\t\t}\n+\n+\t\trecord RecordedGrpcRequest(HttpFields headers, String body) {\n+\t\t}\n+\n+\t}\n+\n }\ndiff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfigurationTests.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfigurationTests.java\nindex eba8fe11251a..2f9259c6db71 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfigurationTests.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/tracing/otlp/OtlpAutoConfigurationTests.java\n@@ -51,6 +51,12 @@ void shouldNotSupplyBeansIfPropertyIsNotSet() {\n \t\tthis.contextRunner.run((context) -> assertThat(context).doesNotHaveBean(OtlpHttpSpanExporter.class));\n \t}\n \n+\t@Test\n+\tvoid shouldNotSupplyBeansIfGrpcTransportIsEnabledButPropertyIsNotSet() {\n+\t\tthis.contextRunner.withPropertyValues(\"management.otlp.tracing.transport=grpc\")\n+\t\t\t.run((context) -> assertThat(context).doesNotHaveBean(OtlpGrpcSpanExporter.class));\n+\t}\n+\n \t@Test\n \tvoid shouldSupplyBeans() {\n \t\tthis.contextRunner.withPropertyValues(\"management.otlp.tracing.endpoint=http://localhost:4318/v1/traces\")\n@@ -58,6 +64,15 @@ void shouldSupplyBeans() {\n \t\t\t\t.hasSingleBean(SpanExporter.class));\n \t}\n \n+\t@Test\n+\tvoid shouldSupplyBeansIfGrpcTransportIsEnabled() {\n+\t\tthis.contextRunner\n+\t\t\t.withPropertyValues(\"management.otlp.tracing.endpoint=http://localhost:4317/v1/traces\",\n+\t\t\t\t\t\"management.otlp.tracing.transport=grpc\")\n+\t\t\t.run((context) -> assertThat(context).hasSingleBean(OtlpGrpcSpanExporter.class)\n+\t\t\t\t.hasSingleBean(SpanExporter.class));\n+\t}\n+\n \t@Test\n \tvoid shouldNotSupplyBeansIfGlobalTracingIsDisabled() {\n \t\tthis.contextRunner.withPropertyValues(\"management.tracing.enabled=false\")\n",
    "problem_statement": "Add auto-configuration for OTLP gRPC format\nImplement auto-configuration for OpenTelemetry's `OtlpGrpcSpanExporter`.\r\n\r\n              Well, since the endpoint URL has to be provided now, it can be used to figure out which type of exporter the user wants to configure and also support the gRPC option.\r\n\r\n_Originally posted by @vpavic in https://github.com/spring-projects/spring-boot/issues/35596#issuecomment-1588815137_\r\n            ",
    "hints_text": "Add auto-configuration for OTLP gRPC format when using tracing\nThis pull request introduces opt-in auto-configuration for `OtlpGrpcSpanExporter` (fixes #35863).\r\nThe implementation remains backwards compatible and still configures the existing OtlpHttpSpanExporter by default.\r\nUsing a new configuration property, it is possible to change the transport: `management.otlp.tracing.transport`.",
    "created_at": "",
    "version": "",
    "PASS_TO_PASS": [
      "spring-boot-project:spring-boot-actuator:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:toolsJar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:jar",
      "spring-boot-project:spring-boot-docker-compose:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:testClasses",
      "spring-boot-project:spring-boot-docker-compose:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:classes",
      "spring-boot-system-tests:spring-boot-deployment-tests:compileJava",
      "spring-boot-project:spring-boot:compileJava",
      "spring-boot-project:spring-boot-actuator:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:sourcesJar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:javadoc",
      "spring-boot-project:spring-boot-actuator:processResources",
      "spring-boot-project:spring-boot-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:extractLegalResources",
      "spring-boot-project:spring-boot:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileTestJava",
      "spring-boot-project:spring-boot-docs:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:test",
      "spring-boot-project:spring-boot-test:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:classes",
      "spring-boot-project:spring-boot:compileKotlin",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:classes",
      "spring-boot-project:spring-boot-docker-compose:processResources",
      "spring-boot-project:spring-boot-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:jar",
      "spring-boot-project:spring-boot-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:javadocJar",
      "spring-boot-project:spring-boot-test:compileKotlin",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:jar",
      "spring-boot-project:spring-boot-test:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:testClasses",
      "spring-boot-project:spring-boot-devtools:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:extractLegalResources",
      "spring-boot-project:spring-boot:compileTestKotlin",
      "spring-boot-project:spring-boot-test-autoconfigure:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:classes",
      "spring-boot-project:spring-boot-testcontainers:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderClassicJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginDescriptors",
      "spring-boot-project:spring-boot-test-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:classes",
      "spring-boot-project:spring-boot-testcontainers:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:extractLegalResources",
      "spring-boot-project:spring-boot-devtools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:extractLegalResources",
      "buildSrc:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:compileTestJava",
      "spring-boot-system-tests:spring-boot-image-tests:classes",
      "spring-boot-system-tests:spring-boot-image-tests:testClasses",
      "spring-boot-system-tests:spring-boot-deployment-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:processTestResources",
      "buildSrc:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:classes",
      "spring-boot-project:spring-boot-autoconfigure:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:classes",
      "spring-boot-project:spring-boot-test:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:processResources",
      "spring-boot-project:spring-boot-testcontainers:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:classes",
      "spring-boot-project:spring-boot-test:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processResources",
      "buildSrc:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:jar",
      "spring-boot-project:spring-boot-devtools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:jar",
      "spring-boot-project:spring-boot:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:jar",
      "spring-boot-project:spring-boot-test-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-neo4j:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:testClasses",
      "spring-boot-project:spring-boot:compileTestJava",
      "spring-boot-project:spring-boot-docs:compileKotlin",
      "spring-boot-project:spring-boot-test:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-elasticsearch:classes",
      "spring-boot-project:spring-boot-autoconfigure:javadocJar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:jar",
      "spring-boot-project:spring-boot-docs:checkKotlinGradlePluginConfigurationErrors",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:classes",
      "spring-boot-project:spring-boot-test:compileTestKotlin",
      "spring-boot-project:spring-boot-test:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis-reactive:testClasses",
      "spring-boot-project:spring-boot:test",
      "spring-boot-project:spring-boot-docker-compose:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:jar",
      "spring-boot-project:spring-boot:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:jar",
      "spring-boot-project:spring-boot:javadoc",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:testClasses",
      "buildSrc:classes",
      "spring-boot-project:spring-boot-test:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:extractLegalResources",
      "spring-boot-project:spring-boot:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-cache:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:jar",
      "spring-boot-project:spring-boot-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:test",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:compileJava",
      "spring-boot-project:spring-boot-devtools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:test",
      "spring-boot-project:spring-boot-devtools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:jar",
      "spring-boot-project:spring-boot-docker-compose:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:testClasses",
      "spring-boot-system-tests:spring-boot-image-tests:pluginDescriptors",
      "spring-boot-project:spring-boot-actuator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-actuator:testClasses",
      "spring-boot-project:spring-boot-devtools:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:classes",
      "spring-boot-project:spring-boot-testcontainers:compileTestJava",
      "spring-boot-project:spring-boot-docker-compose:compileTestJava",
      "spring-boot-project:spring-boot-test-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:compileJava",
      "spring-boot-project:spring-boot-test-autoconfigure:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:testClasses",
      "spring-boot-project:spring-boot-testcontainers:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileJava",
      "spring-boot-system-tests:spring-boot-image-tests:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:processTestResources",
      "spring-boot-project:spring-boot-docker-compose:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra-reactive:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:extractLegalResources",
      "spring-boot-project:spring-boot-autoconfigure:sourcesJar",
      "spring-boot-project:spring-boot-actuator:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-test-support:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:testClasses",
      "spring-boot-project:spring-boot-test-autoconfigure:test",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:testClasses",
      "spring-boot-project:spring-boot-test:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:testClasses",
      "spring-boot-project:spring-boot-devtools:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-actuator:testClasses",
      "spring-boot-project:spring-boot-test:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra:classes",
      "spring-boot-project:spring-boot-devtools:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:jar",
      "spring-boot-project:spring-boot-docker-compose:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-redis:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter:classes",
      "spring-boot-project:spring-boot-actuator-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-amqp:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-aop:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:testClasses",
      "spring-boot-project:spring-boot-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-processor:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:reproducibleLoaderJar",
      "spring-boot-project:spring-boot-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata-changelog-generator:processTestResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-activemq:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-artemis:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-antlib:processResources",
      "spring-boot-project:spring-boot-actuator:classes",
      "spring-boot-project:spring-boot-docs:processResources",
      "spring-boot-project:spring-boot-actuator-autoconfigure:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:testClasses",
      "spring-boot-project:spring-boot:extractTomcatConfigProperties",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jetty:extractLegalResources",
      "spring-boot-project:spring-boot-test-autoconfigure:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-undertow:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:test",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:jar",
      "spring-boot-project:spring-boot-docker-compose:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-mongodb-reactive:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-logging:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-reactor-netty:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:extractLegalResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:extractLegalResources",
      "spring-boot-project:spring-boot:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase:extractLegalResources",
      "spring-boot-project:spring-boot:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-cli:classes",
      "spring-boot-project:spring-boot-devtools:jar",
      "spring-boot-project:spring-boot:extractLegalResources",
      "spring-boot-project:spring-boot-testcontainers:compileJava",
      "spring-boot-project:spring-boot-testcontainers:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:extractLegalResources",
      "spring-boot-project:spring-boot:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-r2dbc:jar",
      "spring-boot-project:spring-boot-actuator:test",
      "spring-boot-project:spring-boot:syncJavaTemplates",
      "spring-boot-project:spring-boot-tools:spring-boot-jarmode-tools:jar",
      "spring-boot-project:spring-boot-actuator:compileTestJava",
      "spring-boot-system-tests:spring-boot-deployment-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor:extractLegalResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:processTestResources",
      "spring-boot-project:spring-boot:javadocJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-batch:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-couchbase-reactive:jar",
      "buildSrc:pluginDescriptors",
      "spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-tomcat:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-ldap:jar"
    ],
    "FAIL_TO_PASS": [
      "spring-boot-project:spring-boot-actuator-autoconfigure:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:compileTestJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:test",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:test",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:classes",
      "spring-boot-project:spring-boot-docs:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:test",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:processTestResources",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web-services:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:sourcesJar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:processResources",
      "spring-boot-project:spring-boot-docs:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-web:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-data-rest:testClasses",
      "spring-boot-project:spring-boot-docs:test",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:compileTestJava",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:jar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:testClasses",
      "spring-boot-project:spring-boot-actuator-autoconfigure:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:compileJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-resource-server:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jooq:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:test",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:classes",
      "spring-boot-project:spring-boot-docs:classes",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:javadoc",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:formatHelpMojoSource",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mail:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-tools:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-json:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-quartz:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:jar",
      "spring-boot-project:spring-boot-actuator-autoconfigure:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-groovy-templates:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:pluginUnderTestMetadata",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-extension:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-mustache:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support-docker:compileJava",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:processResources",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-hateoas:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:syncHelpMojoInputs",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:jar",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:generateHelpMojo",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:test",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:test",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-rsocket:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-websocket:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-integration:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-properties-migrator:compileTestJava",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jdbc:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-graphql:jar",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-test:testClasses",
      "spring-boot-project:spring-boot-docs:compileJava",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-activemq:processResources",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-webflux:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-thymeleaf:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-sni-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-maven-plugin:xsdResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-freemarker:testClasses",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:classes",
      "spring-boot-project:spring-boot-tools:spring-boot-test-support:test",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-security:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-pulsar-reactive:testClasses",
      "spring-boot-project:spring-boot-tools:spring-boot-loader-classic:javadocJar",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-tests:testClasses",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-jersey:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-authorization-server:jar",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:classes",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-validation:classes",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator-custom-security:compileJava",
      "spring-boot-tests:spring-boot-integration-tests:spring-boot-loader-classic-tests:testClasses",
      "spring-boot-tests:spring-boot-smoke-tests:spring-boot-smoke-test-actuator:processTestResources",
      "spring-boot-project:spring-boot-starters:spring-boot-starter-oauth2-client:jar"
    ],
    "bad_patches": []
  }
]