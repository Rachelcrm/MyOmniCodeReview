[
  {
    "file": "/workspace/repo/subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/AbstractMockitoAnyForPrimitiveType.java",
    "score": 0.0,
    "error_count": 43,
    "messages": [
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'com.google.errorprone.matchers.Description.NO_MATCH'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 35,
        "column": 20,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedTypeAsString",
        "source": "LongVariable"
      },
      {
        "line": 38,
        "column": 24,
        "type": "error",
        "message": "The method 'matchMethodInvocation(MethodInvocationTree, VisitorState)' has a cyclomatic complexity of 10.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 38,
        "column": 67,
        "type": "error",
        "message": "Parameter 'tree' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 86,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 43,
        "column": 22,
        "type": "error",
        "message": "Local variable 'method' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 14,
        "type": "error",
        "message": "Declaration of 'matcherType' can be moved closer to its usages",
        "source": "PrematureDeclaration"
      },
      {
        "line": 44,
        "column": 14,
        "type": "error",
        "message": "Local variable 'matcherType' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 18,
        "type": "error",
        "message": "Local variable 'path' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 14,
        "type": "error",
        "message": "Local variable 'parentTree' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 55,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 58,
        "column": 30,
        "type": "error",
        "message": "Local variable 'parentCall' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 22,
        "type": "error",
        "message": "Local variable 'parentMethod' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 40,
        "type": "error",
        "message": "Local variable 'parentArguments' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 65,
        "column": 28,
        "type": "error",
        "message": "Local variable 'argumentTree' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "Use equals() to compare object references.",
        "source": "CompareObjectsWithEquals"
      },
      {
        "line": 79,
        "column": 14,
        "type": "error",
        "message": "Local variable 'parameterType' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 18,
        "type": "error",
        "message": "Local variable 'parameterTypeKind' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 38,
        "type": "error",
        "message": "Call to `getKind` on foreign value `parameterType` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 82,
        "column": 69,
        "type": "error",
        "message": "Call to `getKind` on foreign value `matcherType` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 83,
        "column": 20,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedTypeAsString",
        "source": "LongVariable"
      },
      {
        "line": 83,
        "column": 20,
        "type": "error",
        "message": "Local variable 'expectedTypeAsString' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 84,
        "column": 20,
        "type": "error",
        "message": "Local variable 'replacementName' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 20,
        "type": "error",
        "message": "Local variable 'message' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 91,
        "column": 34,
        "type": "error",
        "message": "Local variable 'fixBuilder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 93,
        "column": 28,
        "type": "error",
        "message": "Local variable 'methodSelect' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 96,
        "column": 34,
        "type": "error",
        "message": "Local variable 'qualifier' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 101,
        "column": 24,
        "type": "error",
        "message": "Local variable 'staticImport' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 101,
        "column": 39,
        "type": "error",
        "message": "Access to field `owner` on foreign value `method` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 105,
        "column": 26,
        "type": "error",
        "message": "Local variable 'fix' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 107,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 121,
        "column": 48,
        "type": "error",
        "message": "Parameter 'method' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 121,
        "column": 60,
        "type": "error",
        "message": "Parameter 'argumentIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 122,
        "column": 25,
        "type": "error",
        "message": "Local variable 'parameters' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 122,
        "column": 38,
        "type": "error",
        "message": "Call to `getParameters` on foreign value `method` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 124,
        "column": 13,
        "type": "error",
        "message": "Local variable 'parameterCount' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 126,
        "column": 23,
        "type": "error",
        "message": "Local variable 'varArgParameter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 126,
        "column": 41,
        "type": "error",
        "message": "Call to `get` on foreign value `parameters` (degree 2)",
        "source": "LawOfDemeter"
      },
      {
        "line": 127,
        "column": 42,
        "type": "error",
        "message": "Call to `asType` on foreign value `varArgParameter` (degree 2)",
        "source": "LawOfDemeter"
      },
      {
        "line": 129,
        "column": 29,
        "type": "error",
        "message": "Call to `asType` on foreign value `parameters.get(argumentIndex)` (degree 2)",
        "source": "LawOfDemeter"
      },
      {
        "line": 129,
        "column": 29,
        "type": "error",
        "message": "Call to `get` on foreign value `parameters` (degree 2)",
        "source": "LawOfDemeter"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoAnyClassWithPrimitiveType.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'com.google.errorprone.BugPattern.LinkType.CUSTOM'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 8,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'com.google.errorprone.BugPattern.SeverityLevel.WARNING'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 55,
        "column": 20,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedTypeAsString",
        "source": "LongVariable"
      },
      {
        "line": 55,
        "column": 20,
        "type": "error",
        "message": "Parameter 'expectedTypeAsString' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 67,
        "type": "error",
        "message": "Parameter 'replacementName' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoAnyIncorrectPrimitiveType.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'com.google.errorprone.BugPattern.LinkType.CUSTOM'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 8,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'com.google.errorprone.BugPattern.SeverityLevel.ERROR'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'com.google.errorprone.matchers.method.MethodMatchers.staticMethod'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 45,
        "column": 34,
        "type": "error",
        "message": "Avoid excessively long variable names like METHOD_NAME_PATTERN",
        "source": "LongVariable"
      },
      {
        "line": 65,
        "column": 20,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedTypeAsString",
        "source": "LongVariable"
      },
      {
        "line": 65,
        "column": 20,
        "type": "error",
        "message": "Parameter 'expectedTypeAsString' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 47,
        "type": "error",
        "message": "Parameter 'matcherType' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoInternalUsage.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'com.google.errorprone.matchers.Matchers.packageStartsWith'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 41,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 46,
        "column": 59,
        "type": "error",
        "message": "Parameter 'tree' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 78,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 50,
        "column": 16,
        "type": "error",
        "message": "Local variable 'symbol' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoNotExtensible.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'com.google.errorprone.matchers.Description.NO_MATCH'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 34,
        "column": 45,
        "type": "error",
        "message": "Parameter 'tree' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 64,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/errorprone/src/test/java/org/mockito/errorprone/bugpatterns/MockitoAnyClassWithPrimitiveTypeTest.java",
    "score": 1.0,
    "error_count": 18,
    "messages": [
      {
        "line": 20,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 39,
        "column": 25,
        "type": "error",
        "message": "The String literal \"Test.java\" appears 5 times in this file; the first occurrence is on line 39",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 41,
        "column": 25,
        "type": "error",
        "message": "The String literal \"import static org.mockito.Mockito.mock;\" appears 5 times in this file; the first occurrence is on line 41",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 42,
        "column": 25,
        "type": "error",
        "message": "The String literal \"import static org.mockito.Mockito.when;\" appears 5 times in this file; the first occurrence is on line 42",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 43,
        "column": 25,
        "type": "error",
        "message": "The String literal \"import static org.mockito.ArgumentMatchers.any;\" appears 4 times in this file; the first occurrence is on line 43",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 44,
        "column": 25,
        "type": "error",
        "message": "The String literal \"class Test {\" appears 5 times in this file; the first occurrence is on line 44",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 45,
        "column": 25,
        "type": "error",
        "message": "The String literal \"  public void test() {\" appears 5 times in this file; the first occurrence is on line 45",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 46,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    Foo foo = mock(Foo.class);\" appears 5 times in this file; the first occurrence is on line 46",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 47,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    // BUG: Diagnostic contains:\" appears 6 times in this file; the first occurrence is on line 47",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 53,
        "column": 25,
        "type": "error",
        "message": "The String literal \"  }\" appears 10 times in this file; the first occurrence is on line 53",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 54,
        "column": 25,
        "type": "error",
        "message": "The String literal \"  static class Foo {\" appears 5 times in this file; the first occurrence is on line 54",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 55,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    int run(int arg) {\" appears 4 times in this file; the first occurrence is on line 55",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 56,
        "column": 25,
        "type": "error",
        "message": "The String literal \"      return 42;\" appears 11 times in this file; the first occurrence is on line 56",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 57,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    }\" appears 11 times in this file; the first occurrence is on line 57",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 67,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 99,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 130,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/errorprone/src/test/java/org/mockito/errorprone/bugpatterns/MockitoAnyIncorrectPrimitiveTypeTest.java",
    "score": 1.0,
    "error_count": 18,
    "messages": [
      {
        "line": 20,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 39,
        "column": 25,
        "type": "error",
        "message": "The String literal \"Test.java\" appears 5 times in this file; the first occurrence is on line 39",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 41,
        "column": 25,
        "type": "error",
        "message": "The String literal \"import static org.mockito.ArgumentMatchers.any;\" appears 4 times in this file; the first occurrence is on line 41",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 43,
        "column": 25,
        "type": "error",
        "message": "The String literal \"import static org.mockito.Mockito.mock;\" appears 5 times in this file; the first occurrence is on line 43",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 44,
        "column": 25,
        "type": "error",
        "message": "The String literal \"import static org.mockito.Mockito.when;\" appears 5 times in this file; the first occurrence is on line 44",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 45,
        "column": 25,
        "type": "error",
        "message": "The String literal \"class Test {\" appears 5 times in this file; the first occurrence is on line 45",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 46,
        "column": 25,
        "type": "error",
        "message": "The String literal \"  public void test() {\" appears 5 times in this file; the first occurrence is on line 46",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 47,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    Foo foo = mock(Foo.class);\" appears 5 times in this file; the first occurrence is on line 47",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 48,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    // BUG: Diagnostic contains:\" appears 4 times in this file; the first occurrence is on line 48",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 52,
        "column": 25,
        "type": "error",
        "message": "The String literal \"  }\" appears 10 times in this file; the first occurrence is on line 52",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 53,
        "column": 25,
        "type": "error",
        "message": "The String literal \"  static class Foo {\" appears 5 times in this file; the first occurrence is on line 53",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 55,
        "column": 25,
        "type": "error",
        "message": "The String literal \"      return 42;\" appears 11 times in this file; the first occurrence is on line 55",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 56,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    }\" appears 11 times in this file; the first occurrence is on line 56",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 57,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    int runWithBoth(String arg1, long arg2) {\" appears 4 times in this file; the first occurrence is on line 57",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 98,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 128,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/errorprone/src/test/java/org/mockito/errorprone/bugpatterns/MockitoInternalUsageTest.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 19,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 37,
        "column": 25,
        "type": "error",
        "message": "The String literal \"    // BUG: Diagnostic contains:\" appears 7 times in this file; the first occurrence is on line 37",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 41,
        "column": 25,
        "type": "error",
        "message": "The String literal \"  }\" appears 6 times in this file; the first occurrence is on line 41",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 50,
        "column": 25,
        "type": "error",
        "message": "The String literal \"  // BUG: Diagnostic contains:\" appears 4 times in this file; the first occurrence is on line 50",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 81,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 97,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/errorprone/src/test/java/org/mockito/errorprone/bugpatterns/MockitoNotExtensibleTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 15,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 17,
        "column": 35,
        "type": "error",
        "message": "Avoid excessively long variable names like compilationTestHelper",
        "source": "LongVariable"
      },
      {
        "line": 26,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 26,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'notExtensibleSubclass_shouldWarn' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 37,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 37,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'anonymousClassImplementingNotExtensible_shouldWarn' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 54,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 54,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'anonymousClassImplementingOtherAnnotation_shouldNotWarn' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/ConstructionMockRuleTest.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 14,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.*'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 16,
        "column": 14,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 30,
        "column": 15,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'Dummy'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 37,
        "column": 16,
        "type": "error",
        "message": "Missing commented default access modifier on method 'foo()'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/ConstructionMockTest.java",
    "score": 0.0,
    "error_count": 34,
    "messages": [
      {
        "line": 5,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 8,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertNull'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertTrue'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.assertj.core.api.Assertions.assertThatThrownBy'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.times'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.verify'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 13,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 14,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.withSettings'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 25,
        "column": 14,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 25,
        "column": 41,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 28,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 29,
        "column": 22,
        "type": "error",
        "message": "The String literal \"foo\" appears 4 times in this file; the first occurrence is on line 29",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 37,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 40,
        "column": 19,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 79,
        "type": "error",
        "message": "The String literal \"bar\" appears 17 times in this file; the first occurrence is on line 49",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 55,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 58,
        "column": 73,
        "type": "error",
        "message": "The String literal \"qux\" appears 7 times in this file; the first occurrence is on line 58",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 69,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 110,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 112,
        "column": 19,
        "type": "error",
        "message": "Local variable 'dummy' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 116,
        "column": 37,
        "type": "error",
        "message": "Local variable 'reference' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 117,
        "column": 20,
        "type": "error",
        "message": "Local variable 'thread' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 128,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 131,
        "column": 19,
        "type": "error",
        "message": "Local variable 'dummy' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 135,
        "column": 37,
        "type": "error",
        "message": "Local variable 'reference' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 136,
        "column": 20,
        "type": "error",
        "message": "Local variable 'thread' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 141,
        "column": 43,
        "type": "error",
        "message": "Local variable 'other' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 158,
        "column": 29,
        "type": "error",
        "message": "Empty try body - you could rename the resource to 'ignored'",
        "source": "EmptyControlStatement"
      },
      {
        "line": 158,
        "column": 60,
        "type": "error",
        "message": "Avoid unused local variables such as 'dummy'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 160,
        "column": 63,
        "type": "error",
        "message": "Avoid unused local variables such as 'duplicate'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 193,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'Dummy'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 197,
        "column": 29,
        "type": "error",
        "message": "Avoid unused constructor parameters such as 'value'.",
        "source": "UnusedFormalParameter"
      },
      {
        "line": 199,
        "column": 16,
        "type": "error",
        "message": "Missing commented default access modifier on method 'foo()'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/EnumMockingTest.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.*'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 13,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 16,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 17,
        "column": 16,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 17,
        "column": 16,
        "type": "error",
        "message": "Local variable 'a' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 23,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested enum 'Animal'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/FinalClassMockingTest.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 10,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 14,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 14,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'no_exception_while_mocking_final_class' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/HierarchyPreInitializationTest.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 15,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 23,
        "column": 17,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 38,
        "column": 27,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/InOrderVerificationTest.java",
    "score": 0.0,
    "error_count": 41,
    "messages": [
      {
        "line": 5,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.assertj.core.api.Assertions.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 8,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.assertj.core.api.Assertions.assertThatThrownBy'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.fail'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.inOrder'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mockStatic'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 13,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.timeout'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 14,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.times'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 27,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 30,
        "column": 21,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 46,
        "column": 27,
        "type": "error",
        "message": "Local variable 'mocked' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 47,
        "column": 21,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 65,
        "column": 21,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 83,
        "column": 30,
        "type": "error",
        "message": "Local variable 'unsupportedMode' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 84,
        "column": 21,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 21,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 121,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 124,
        "column": 21,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 138,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 141,
        "column": 27,
        "type": "error",
        "message": "Local variable 'mocked' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 142,
        "column": 21,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 162,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 165,
        "column": 21,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 166,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expected' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 170,
        "column": 26,
        "type": "error",
        "message": "Local variable 'actual' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 180,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 181,
        "column": 42,
        "type": "error",
        "message": "Avoid excessively long variable names like mockedStaticContext",
        "source": "LongVariable"
      },
      {
        "line": 182,
        "column": 53,
        "type": "error",
        "message": "Avoid excessively long variable names like mockedAnotherStaticContext",
        "source": "LongVariable"
      },
      {
        "line": 185,
        "column": 25,
        "type": "error",
        "message": "Local variable 'inOrder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 205,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 206,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on method 'otherMethod()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 211,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 212,
        "column": 21,
        "type": "error",
        "message": "Missing commented default access modifier on method 'firstMethod()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 216,
        "column": 21,
        "type": "error",
        "message": "Missing commented default access modifier on method 'secondMethod(int)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 216,
        "column": 38,
        "type": "error",
        "message": "Avoid variables with short names like n",
        "source": "ShortVariable"
      },
      {
        "line": 216,
        "column": 38,
        "type": "error",
        "message": "Parameter 'n' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 220,
        "column": 14,
        "type": "error",
        "message": "Missing commented default access modifier on method 'instanceMethod()'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/InitializationTest.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 15,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'assure_initialization_prior_to_instrumentation' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 18,
        "column": 22,
        "type": "error",
        "message": "Local variable 'values' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/OneLinerStubStressTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 13,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 15,
        "column": 12,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 22,
        "column": 28,
        "type": "error",
        "message": "Number 2000000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 31,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'call_a_lot_of_mocks_using_one_line_stubbing' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 34,
        "column": 29,
        "type": "error",
        "message": "Number 50000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/PluginTest.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.*'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 14,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 17,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'mock_maker_should_be_inline' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 22,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'member_accessor_should_be_module' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/RecursionTest.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.spy'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 14,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 17,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 18,
        "column": 39,
        "type": "error",
        "message": "Local variable 'map' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 18,
        "column": 70,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/SpyWithConstructorTest.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.*'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 13,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 21,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'SomethingAbstract'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 30,
        "column": 21,
        "type": "error",
        "message": "This abstract class does not have any abstract methods",
        "source": "AbstractClassWithoutAbstractMethod"
      },
      {
        "line": 34,
        "column": 9,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'SomethingAbstract(String)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 34,
        "column": 34,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/StaticMockRuleTest.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 14,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.*'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 16,
        "column": 14,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 34,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'Dummy'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 34,
        "column": 12,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 36,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on method 'foo()'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/StaticMockTest.java",
    "score": 0.0,
    "error_count": 43,
    "messages": [
      {
        "line": 5,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 8,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertNull'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.assertj.core.api.Assertions.assertThatThrownBy'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.ArgumentMatchers.any'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.times'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 22,
        "column": 14,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 22,
        "column": 35,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 25,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 26,
        "column": 22,
        "type": "error",
        "message": "The String literal \"foo\" appears 10 times in this file; the first occurrence is on line 26",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 36,
        "column": 47,
        "type": "error",
        "message": "The String literal \"bar\" appears 30 times in this file; the first occurrence is on line 36",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 63,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 78,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 88,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 103,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 129,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 139,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 144,
        "column": 37,
        "type": "error",
        "message": "Local variable 'reference' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 145,
        "column": 20,
        "type": "error",
        "message": "Local variable 'thread' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 156,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 161,
        "column": 37,
        "type": "error",
        "message": "Local variable 'reference' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 162,
        "column": 20,
        "type": "error",
        "message": "Local variable 'thread' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 183,
        "column": 29,
        "type": "error",
        "message": "Empty try body - you could rename the resource to 'ignored'",
        "source": "EmptyControlStatement"
      },
      {
        "line": 183,
        "column": 54,
        "type": "error",
        "message": "Avoid unused local variables such as 'dummy'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 184,
        "column": 57,
        "type": "error",
        "message": "Avoid unused local variables such as 'duplicate'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 192,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 218,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 226,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'Dummy'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 226,
        "column": 12,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 228,
        "column": 23,
        "type": "error",
        "message": "Do not use non-final non-private static fields",
        "source": "MutableStaticState"
      },
      {
        "line": 228,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on field 'var1'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 230,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on method 'foo()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 234,
        "column": 21,
        "type": "error",
        "message": "Missing commented default access modifier on method 'fooVoid(String)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 234,
        "column": 36,
        "type": "error",
        "message": "Parameter 'var2' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 238,
        "column": 21,
        "type": "error",
        "message": "Missing commented default access modifier on method 'fooVoid(String, String)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 238,
        "column": 36,
        "type": "error",
        "message": "Parameter 'var2' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 242,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on method 'fooVarargs(String[])'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 242,
        "column": 44,
        "type": "error",
        "message": "Parameter 'args' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 243,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like sb",
        "source": "ShortVariable"
      },
      {
        "line": 243,
        "column": 27,
        "type": "error",
        "message": "Local variable 'sb' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 244,
        "column": 25,
        "type": "error",
        "message": "Local variable 'arg' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/StaticRuleTest.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 16,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 18,
        "column": 14,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/StaticRunnerTest.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 15,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'junit.framework.TestCase.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 18,
        "column": 14,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/StressTest.java",
    "score": 3.5,
    "error_count": 13,
    "messages": [
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.withSettings'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 14,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 15,
        "column": 12,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 15,
        "column": 12,
        "type": "error",
        "message": "The class 'TestClass' might be a test class, but it contains no test cases.",
        "source": "TestClassWithoutTestCases"
      },
      {
        "line": 22,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'call_a_lot_of_mocks' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 22,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 24,
        "column": 29,
        "type": "error",
        "message": "Number 40000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 25,
        "column": 23,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 29,
        "column": 23,
        "type": "error",
        "message": "Local variable 'serializableMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/StubbingLocationTest.java",
    "score": 3.0,
    "error_count": 14,
    "messages": [
      {
        "line": 13,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 14,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 15,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 17,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 20,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'stubbing_location_should_be_the_correct_point' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 20,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 21,
        "column": 23,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 28,
        "column": 23,
        "type": "error",
        "message": "Local variable 'stubbings' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 30,
        "column": 16,
        "type": "error",
        "message": "Local variable 'location' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 34,
        "column": 18,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'ConcreteClass'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 35,
        "column": 16,
        "type": "error",
        "message": "Missing commented default access modifier on method 'concreteMethod(String)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 35,
        "column": 38,
        "type": "error",
        "message": "Avoid variables with short names like s",
        "source": "ShortVariable"
      },
      {
        "line": 35,
        "column": 38,
        "type": "error",
        "message": "Parameter 's' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 36,
        "column": 23,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/SubconstructorMockTest.java",
    "score": 2.5,
    "error_count": 15,
    "messages": [
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertFalse'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertTrue'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 14,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 17,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'does_not_mock_subclass_constructor_for_superclass_mock' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 17,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 18,
        "column": 9,
        "type": "error",
        "message": "Empty try body - you could rename the resource to 'ignored'",
        "source": "EmptyControlStatement"
      },
      {
        "line": 18,
        "column": 43,
        "type": "error",
        "message": "Avoid unused local variables such as 'mocked'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 19,
        "column": 45,
        "type": "error",
        "message": "Avoid unused local variables such as 'mocked'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 20,
        "column": 22,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 27,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'does_mock_superclass_constructor_for_subclass_mock' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 27,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 28,
        "column": 9,
        "type": "error",
        "message": "Empty try body - you could rename the resource to 'ignored'",
        "source": "EmptyControlStatement"
      },
      {
        "line": 28,
        "column": 45,
        "type": "error",
        "message": "Avoid unused local variables such as 'mocked'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 29,
        "column": 43,
        "type": "error",
        "message": "Avoid unused local variables such as 'mocked'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 30,
        "column": 22,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/SuperCallTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.ArgumentMatchers.eq'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.spy'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.verify'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 13,
        "column": 14,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 17,
        "column": 15,
        "type": "error",
        "message": "Avoid variables with short names like d",
        "source": "ShortVariable"
      },
      {
        "line": 17,
        "column": 15,
        "type": "error",
        "message": "Local variable 'd' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 22,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'Dummy'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 29,
        "column": 14,
        "type": "error",
        "message": "Missing commented default access modifier on method 'bar(String)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 29,
        "column": 25,
        "type": "error",
        "message": "Avoid variables with short names like s",
        "source": "ShortVariable"
      },
      {
        "line": 30,
        "column": 13,
        "type": "error",
        "message": "Unnecessary return statement",
        "source": "UnnecessaryReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/bugs/CyclicMockMethodArgumentMemoryLeakTest.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.framework'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 16,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 16,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'no_memory_leak_when_cyclically_calling_method_with_mocks' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 18,
        "column": 21,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 19,
        "column": 13,
        "type": "error",
        "message": "Access to field `largeArray` on foreign value `a` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 20,
        "column": 21,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 29,
        "column": 20,
        "type": "error",
        "message": "Avoid short class names like A",
        "source": "ShortClassName"
      },
      {
        "line": 29,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 30,
        "column": 23,
        "type": "error",
        "message": "Avoid unused private fields such as 'largeArray'.",
        "source": "UnusedPrivateField"
      },
      {
        "line": 32,
        "column": 14,
        "type": "error",
        "message": "Missing commented default access modifier on method 'accept(B)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 32,
        "column": 23,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 35,
        "column": 20,
        "type": "error",
        "message": "Avoid short class names like B",
        "source": "ShortClassName"
      },
      {
        "line": 35,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 36,
        "column": 14,
        "type": "error",
        "message": "Missing commented default access modifier on method 'accept(A)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 36,
        "column": 23,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/bugs/OngoingStubShiftTest.java",
    "score": 2.5,
    "error_count": 15,
    "messages": [
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.CALLS_REAL_METHODS'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mockStatic'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 13,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 15,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 16,
        "column": 20,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getInt()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 21,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 22,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getStr()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 28,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'keep_ongoing_stub_when_spy' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 29,
        "column": 38,
        "type": "error",
        "message": "Avoid unused local variables such as 'mockInt'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 37,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 38,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getString()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 42,
        "column": 20,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getInt()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 43,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 48,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'keep_ongoing_stub_when_exception' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/inlineTest/src/test/java/org/mockitoinline/bugs/SelfSpyReferenceMemoryLeakTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.framework'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.spy'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 16,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 16,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'no_memory_leak_when_spy_holds_reference_to_self' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 25,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 28,
        "column": 29,
        "type": "error",
        "message": "Avoid unused private fields such as 'largeArray'.",
        "source": "UnusedPrivateField"
      },
      {
        "line": 30,
        "column": 51,
        "type": "error",
        "message": "Parameter 'instance' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/memory-test/src/test/java/org/mockito/memorytest/LocationFactoryAllocationRateTest.java",
    "score": 3.0,
    "error_count": 14,
    "messages": [
      {
        "line": 14,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.assertj.core.api.Assertions.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 16,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 17,
        "column": 30,
        "type": "error",
        "message": "Field REPEAT has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 19,
        "column": 33,
        "type": "error",
        "message": "Avoid excessively long variable names like EXPECTED_IMPROVEMENT",
        "source": "LongVariable"
      },
      {
        "line": 21,
        "column": 39,
        "type": "error",
        "message": "The constant name 'memoryBean' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 30,
        "column": 14,
        "type": "error",
        "message": "Local variable 'baseline' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 14,
        "type": "error",
        "message": "Local variable 'actual' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 57,
        "type": "error",
        "message": "Parameter 'someTask' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 14,
        "type": "error",
        "message": "Local variable 'threadId' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 14,
        "type": "error",
        "message": "Local variable 'atStart' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 44,
        "type": "error",
        "message": "Parameter 'count' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 56,
        "column": 60,
        "type": "error",
        "message": "Parameter 'runnable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 45,
        "type": "error",
        "message": "Parameter 'task' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 71,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/memory-test/src/test/java/org/mockito/memorytest/ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest.java",
    "score": 3.0,
    "error_count": 14,
    "messages": [
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.assertj.core.api.Assertions.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 8,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.ArgumentMatchers.anyInt'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 15,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 18,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like INVOCATIONS_ON_STACK_TRACE_LEVEL",
        "source": "LongVariable"
      },
      {
        "line": 26,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 31,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'large_stack_trace_invocations_should_not_starve_memory' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 33,
        "column": 15,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 50,
        "type": "error",
        "message": "Parameter 'mock' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 60,
        "type": "error",
        "message": "Avoid variables with short names like i",
        "source": "ShortVariable"
      },
      {
        "line": 40,
        "column": 60,
        "type": "error",
        "message": "Parameter 'i' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 52,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'Dummy'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/programmatic-test/src/test/java/org/mockito/ProgrammaticMockMakerTest.java",
    "score": 0.0,
    "error_count": 41,
    "messages": [
      {
        "line": 5,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.assertj.core.api.Assertions.assertThatThrownBy'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 8,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertNotNull'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertNull'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertThrows'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.withSettings'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 21,
        "column": 14,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 23,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'test_normal_mock_uses_given_mock_maker' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 23,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 24,
        "column": 30,
        "type": "error",
        "message": "Local variable 'inlineMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 27,
        "column": 30,
        "type": "error",
        "message": "Local variable 'subclassMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 31,
        "column": 74,
        "type": "error",
        "message": "The String literal \"MOCKED\" appears 4 times in this file; the first occurrence is on line 31",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 35,
        "column": 22,
        "type": "error",
        "message": "The String literal \"ORIGINAL\" appears 10 times in this file; the first occurrence is on line 35",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'test_mockability_check_uses_given_mock_maker' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 50,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'test_deep_stups_inherit_mock_maker' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 50,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 51,
        "column": 19,
        "type": "error",
        "message": "Local variable 'inlineMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 57,
        "column": 19,
        "type": "error",
        "message": "Local variable 'subclassMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 78,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'test_returned_mocks_inherit_mock_maker' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 78,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 79,
        "column": 19,
        "type": "error",
        "message": "Local variable 'inlineMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 19,
        "type": "error",
        "message": "Local variable 'subclassMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 106,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'test_smart_nulls_inherit_mock_maker' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 106,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 107,
        "column": 19,
        "type": "error",
        "message": "Local variable 'inlineMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 113,
        "column": 19,
        "type": "error",
        "message": "Local variable 'subclassMock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 133,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'test_custom_mock_maker' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 144,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'test_exception_when_mock_maker_cannot_be_instantiated' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 145,
        "column": 9,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 161,
        "column": 16,
        "type": "error",
        "message": "Missing commented default access modifier on method 'someMethod()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 166,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 167,
        "column": 22,
        "type": "error",
        "message": "Missing commented default access modifier on method 'finalMethod()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 171,
        "column": 22,
        "type": "error",
        "message": "Missing commented default access modifier on method 'finalMethodCallingNonFinal()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 176,
        "column": 16,
        "type": "error",
        "message": "Missing commented default access modifier on method 'nonFinal()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 181,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 182,
        "column": 20,
        "type": "error",
        "message": "Missing commented default access modifier on method 'finalClass()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 186,
        "column": 30,
        "type": "error",
        "message": "Missing commented default access modifier on method 'classWithFinalMethod()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 190,
        "column": 19,
        "type": "error",
        "message": "Missing commented default access modifier on method 'subContainer()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 198,
        "column": 23,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/programmatic-test/src/test/java/org/mockitousage/annotation/ProgrammaticMockMakerAnnotationTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 16,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 18,
        "column": 26,
        "type": "error",
        "message": "Missing commented default access modifier on field 'inlineMock'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 21,
        "column": 26,
        "type": "error",
        "message": "Missing commented default access modifier on field 'subclassMock'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'test_mock_uses_given_mock_maker' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 30,
        "column": 74,
        "type": "error",
        "message": "The String literal \"MOCKED\" appears 4 times in this file; the first occurrence is on line 30",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 38,
        "column": 20,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 39,
        "column": 22,
        "type": "error",
        "message": "Missing commented default access modifier on method 'finalMethodCallingNonFinal()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 44,
        "column": 16,
        "type": "error",
        "message": "Missing commented default access modifier on method 'nonFinal()'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/proxy/src/test/java/org/mockitoproxy/MocksTest.java",
    "score": 0.0,
    "error_count": 37,
    "messages": [
      {
        "line": 5,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 7,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.assertj.core.api.Assertions.assertThatThrownBy'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 8,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.instanceOf'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 9,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.is'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 10,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 11,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.fail'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.verify'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 13,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'can_create_mock_interface' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 28,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 29,
        "column": 23,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 32,
        "column": 35,
        "type": "error",
        "message": "The String literal \"value\" appears 6 times in this file; the first occurrence is on line 32",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'can_create_mock_object' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 41,
        "column": 16,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'can_call_default_method_if_available' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 50,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 51,
        "column": 23,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'cannot_call_default_method_if_not_available' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 62,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 63,
        "column": 23,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'can_create_mock_different_class_loader' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 76,
        "column": 21,
        "type": "error",
        "message": "Local variable 'loader' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 79,
        "column": 54,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 51,
        "type": "error",
        "message": "Local variable 'outputStream' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 83,
        "column": 37,
        "type": "error",
        "message": "In J2EE, getClassLoader() might not work as expected.  Use Thread.currentThread().getContextClassLoader() instead.",
        "source": "UseProperClassLoader"
      },
      {
        "line": 88,
        "column": 40,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 40,
        "type": "error",
        "message": "Avoid assignments in operands",
        "source": "AssignmentInOperand"
      },
      {
        "line": 95,
        "column": 36,
        "type": "error",
        "message": "Local variable 'classFile' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 96,
        "column": 29,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 102,
        "column": 16,
        "type": "error",
        "message": "Local variable 'mock' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'cannot_create_mock_of_non_object_class' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 114,
        "column": 36,
        "type": "error",
        "message": "Avoid unused local variables such as 'number'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 125,
        "column": 16,
        "type": "error",
        "message": "Avoid using short method names",
        "source": "ShortMethodName"
      },
      {
        "line": 127,
        "column": 24,
        "type": "error",
        "message": "Avoid using short method names",
        "source": "ShortMethodName"
      }
    ]
  },
  {
    "file": "/workspace/repo/subprojects/subclass/src/test/java/org/mockitosubclass/PluginTest.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 12,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.Assert.*'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 14,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 17,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'mock_maker_should_be_inline' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 22,
        "column": 17,
        "type": "error",
        "message": "The JUnit 4 test method name 'member_accessor_should_be_module' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      }
    ]
  }
]