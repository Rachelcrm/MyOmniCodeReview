[
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/Codec.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 48,
        "column": 16,
        "type": "error",
        "message": "Access to field `CODEC_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 59,
        "column": 16,
        "type": "error",
        "message": "Access to field `CODEC_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/Codec2.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 29,
        "column": 16,
        "type": "error",
        "message": "Access to field `CODEC_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 32,
        "column": 16,
        "type": "error",
        "message": "Access to field `CODEC_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/Constants.java",
    "score": 0.0,
    "error_count": 78,
    "messages": [
      {
        "line": 23,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 28,
        "column": 9,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_BUFFER_SIZE",
        "source": "LongVariable"
      },
      {
        "line": 28,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 30,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 32,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 34,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 36,
        "column": 9,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_IDLE_TIMEOUT",
        "source": "LongVariable"
      },
      {
        "line": 36,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 40,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 42,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 44,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like CONNECT_QUEUE_CAPACITY",
        "source": "LongVariable"
      },
      {
        "line": 44,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 46,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like CONNECT_QUEUE_WARNING_SIZE",
        "source": "LongVariable"
      },
      {
        "line": 46,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 48,
        "column": 9,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_CONNECT_QUEUE_WARNING_SIZE",
        "source": "LongVariable"
      },
      {
        "line": 48,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 50,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 52,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 59,
        "column": 9,
        "type": "error",
        "message": "Avoid excessively long variable names like HEARTBEAT_CHECK_TICK",
        "source": "LongVariable"
      },
      {
        "line": 59,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 64,
        "column": 10,
        "type": "error",
        "message": "Avoid excessively long variable names like LEAST_HEARTBEAT_DURATION",
        "source": "LongVariable"
      },
      {
        "line": 64,
        "column": 10,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 69,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 70,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 74,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 76,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like CONNECT_TIMEOUT_KEY",
        "source": "LongVariable"
      },
      {
        "line": 76,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 78,
        "column": 9,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_CONNECT_TIMEOUT",
        "source": "LongVariable"
      },
      {
        "line": 78,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 80,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 82,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_REMOTING_SERIALIZATION_PROPERTY_KEY",
        "source": "LongVariable"
      },
      {
        "line": 82,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 84,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 86,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 88,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 90,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 92,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 94,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_REMOTING_CLIENT",
        "source": "LongVariable"
      },
      {
        "line": 94,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 96,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 98,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_TRANSPORTER",
        "source": "LongVariable"
      },
      {
        "line": 98,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 100,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 102,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 104,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 106,
        "column": 9,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_IO_THREADS",
        "source": "LongVariable"
      },
      {
        "line": 106,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 108,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like EVENT_LOOP_BOSS_POOL_NAME",
        "source": "LongVariable"
      },
      {
        "line": 108,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 110,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like EVENT_LOOP_WORKER_POOL_NAME",
        "source": "LongVariable"
      },
      {
        "line": 110,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 112,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like NETTY_EPOLL_ENABLE_KEY",
        "source": "LongVariable"
      },
      {
        "line": 112,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 114,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 116,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 118,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 120,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 122,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like CHANNEL_ATTRIBUTE_READONLY_KEY",
        "source": "LongVariable"
      },
      {
        "line": 122,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 124,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like CHANNEL_READONLYEVENT_SENT_KEY",
        "source": "LongVariable"
      },
      {
        "line": 124,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 126,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like CHANNEL_SEND_READONLYEVENT_KEY",
        "source": "LongVariable"
      },
      {
        "line": 126,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 128,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 130,
        "column": 9,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_RECONNECT_PERIOD",
        "source": "LongVariable"
      },
      {
        "line": 130,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 132,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like SEND_RECONNECT_KEY",
        "source": "LongVariable"
      },
      {
        "line": 132,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 134,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 136,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 138,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 139,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 140,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 141,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 142,
        "column": 12,
        "type": "error",
        "message": "Avoid excessively long variable names like HEARTBEAT_TIMEOUT_KEY",
        "source": "LongVariable"
      },
      {
        "line": 142,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 143,
        "column": 12,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      },
      {
        "line": 145,
        "column": 9,
        "type": "error",
        "message": "Using constants in interfaces is a bad practice.",
        "source": "ConstantsInInterface"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/Decodeable.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 22,
        "column": 19,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/Dispatcher.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 38,
        "column": 16,
        "type": "error",
        "message": "Access to field `DISPATCHER_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/ExecutionException.java",
    "score": 0.0,
    "error_count": 23,
    "messages": [
      {
        "line": 32,
        "column": 38,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 32,
        "column": 55,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 32,
        "column": 71,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 32,
        "column": 90,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 38,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 55,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 71,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 38,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 55,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 74,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 38,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 65,
        "type": "error",
        "message": "Parameter 'localAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 97,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 119,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 41,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 38,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 65,
        "type": "error",
        "message": "Parameter 'localAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 97,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 119,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 38,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 65,
        "type": "error",
        "message": "Parameter 'localAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 97,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 122,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/RemotingException.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 40,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 54,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 48,
        "type": "error",
        "message": "Parameter 'localAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 80,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 102,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 57,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 48,
        "type": "error",
        "message": "Parameter 'localAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 80,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 105,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 54,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 73,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 48,
        "type": "error",
        "message": "Parameter 'localAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 80,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 102,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 70,
        "column": 40,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/RemotingScopeModelInitializer.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 34,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 42,
        "column": 61,
        "type": "error",
        "message": "Parameter 'applicationModel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 44,
        "type": "error",
        "message": "Local variable 'transporters' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 47,
        "column": 43,
        "type": "error",
        "message": "Local variable 'zkTransporter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 22,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/TimeoutException.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 34,
        "column": 37,
        "type": "error",
        "message": "Parameter 'serverSide' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 57,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 73,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 37,
        "type": "error",
        "message": "Parameter 'serverSide' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 67,
        "type": "error",
        "message": "Parameter 'localAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 47,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 69,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/Transporter.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 44,
        "column": 16,
        "type": "error",
        "message": "Access to field `SERVER_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 44,
        "column": 38,
        "type": "error",
        "message": "Access to field `TRANSPORTER_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 56,
        "column": 16,
        "type": "error",
        "message": "Access to field `CLIENT_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 56,
        "column": 38,
        "type": "error",
        "message": "Access to field `TRANSPORTER_KEY` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/Transporters.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 38,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 69,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 43,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 66,
        "type": "error",
        "message": "Parameter 'handlers' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 32,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 58,
        "column": 41,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 64,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 38,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 61,
        "type": "error",
        "message": "Parameter 'handlers' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 39,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 77,
        "column": 50,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/AbstractWireProtocol.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 26,
        "column": 36,
        "type": "error",
        "message": "Field detector has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 28,
        "column": 50,
        "type": "error",
        "message": "Parameter 'detector' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      },
      {
        "line": 43,
        "column": 17,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/Connection.java",
    "score": 0.0,
    "error_count": 29,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "A high number of imports can indicate a high degree of coupling within an object.",
        "source": "ExcessiveImports"
      },
      {
        "line": 52,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_CLIENT_THREADPOOL'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 53,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.SSL_ENABLED_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 54,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.THREADPOOL_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 55,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.api.NettyEventLoopFactory.socketChannelClass'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 57,
        "column": 58,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 59,
        "column": 50,
        "type": "error",
        "message": "It is somewhat confusing to have a field name matching the declaring class name",
        "source": "AvoidFieldNameMatchingTypeName"
      },
      {
        "line": 60,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 71,
        "column": 38,
        "type": "error",
        "message": "Avoid excessively long variable names like connectionListener",
        "source": "LongVariable"
      },
      {
        "line": 74,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 75,
        "column": 9,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'url'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 82,
        "column": 23,
        "type": "error",
        "message": "This method may call an overridable method during object construction: Connection.getUrl() (call stack: [Connection.getConnectAddress(), Connection.getUrl()])",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 86,
        "column": 63,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 54,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 108,
        "column": 54,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 28,
        "type": "error",
        "message": "Local variable 'sslContext' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 130,
        "column": 21,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 132,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 160,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 162,
        "column": 13,
        "type": "error",
        "message": "This if statement could be combined with its parent",
        "source": "CollapsibleIfStatements"
      },
      {
        "line": 168,
        "column": 37,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 189,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 193,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 203,
        "column": 38,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 215,
        "column": 39,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 266,
        "column": 5,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 266,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'ConnectionListener'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 269,
        "column": 53,
        "type": "error",
        "message": "Parameter 'future' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 271,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/ConnectionHandler.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 34,
        "column": 33,
        "type": "error",
        "message": "The constant name 'log' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 38,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 38,
        "column": 41,
        "type": "error",
        "message": "Parameter 'connection' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 53,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 61,
        "column": 9,
        "type": "error",
        "message": "Avoid if (x != y) ..; else ..;",
        "source": "ConfusingTernary"
      },
      {
        "line": 70,
        "column": 55,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 70,
        "column": 70,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 71,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 76,
        "column": 55,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 84,
        "column": 36,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/ConnectionManager.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 30,
        "column": 49,
        "type": "error",
        "message": "Avoid excessively long variable names like connectionConsumer",
        "source": "LongVariable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/MultiplexProtocolConnectionManager.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 31,
        "column": 28,
        "type": "error",
        "message": "Field 'frameworkModel' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 33,
        "column": 62,
        "type": "error",
        "message": "Parameter 'frameworkModel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 35,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 44,
        "column": 56,
        "type": "error",
        "message": "Avoid excessively long variable names like connectionConsumer",
        "source": "LongVariable"
      },
      {
        "line": 44,
        "column": 56,
        "type": "error",
        "message": "Parameter 'connectionConsumer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 76,
        "type": "error",
        "message": "Avoid unused method parameters such as 'protocol'.",
        "source": "UnusedFormalParameter"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/NettyEventLoopFactory.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.OS_LINUX_PREFIX'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.OS_NAME_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.NETTY_EPOLL_ENABLE_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 44,
        "column": 67,
        "type": "error",
        "message": "Avoid excessively long variable names like NIO_EVENT_LOOP_GROUP",
        "source": "LongVariable"
      },
      {
        "line": 49,
        "column": 53,
        "type": "error",
        "message": "Parameter 'threads' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 69,
        "type": "error",
        "message": "Parameter 'threadFactoryName' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 23,
        "type": "error",
        "message": "Local variable 'threadFactory' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 65,
        "column": 20,
        "type": "error",
        "message": "Local variable 'osName' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 66,
        "column": 20,
        "type": "error",
        "message": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale",
        "source": "UseLocaleWithCaseConversions"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/ProtocolDetector.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 29,
        "column": 33,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/SingleProtocolConnectionManager.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 35,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 56,
        "type": "error",
        "message": "Avoid excessively long variable names like connectionConsumer",
        "source": "LongVariable"
      },
      {
        "line": 49,
        "column": 56,
        "type": "error",
        "message": "Parameter 'connectionConsumer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/SslClientTlsHandler.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 35,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 39,
        "column": 36,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 43,
        "column": 43,
        "type": "error",
        "message": "Parameter 'sslContext' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 52,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 19,
        "type": "error",
        "message": "Local variable 'sslEngine' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 54,
        "column": 58,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 54,
        "column": 70,
        "type": "error",
        "message": "Parameter 'evt' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 56,
        "column": 41,
        "type": "error",
        "message": "Local variable 'handshakeEvent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 28,
        "type": "error",
        "message": "Local variable 'session' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 62,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/SslContexts.java",
    "score": 0.0,
    "error_count": 32,
    "messages": [
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 39,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 41,
        "column": 56,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 23,
        "type": "error",
        "message": "Avoid excessively long variable names like globalConfigManager",
        "source": "LongVariable"
      },
      {
        "line": 42,
        "column": 23,
        "type": "error",
        "message": "Local variable 'globalConfigManager' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 19,
        "type": "error",
        "message": "Local variable 'sslConfig' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 45,
        "column": 27,
        "type": "error",
        "message": "Avoid excessively long variable names like sslClientContextBuilder",
        "source": "LongVariable"
      },
      {
        "line": 46,
        "column": 21,
        "type": "error",
        "message": "Avoid excessively long variable names like serverKeyCertChainPathStream",
        "source": "LongVariable"
      },
      {
        "line": 46,
        "column": 21,
        "type": "error",
        "message": "Ensure that resources like this InputStream object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 47,
        "column": 21,
        "type": "error",
        "message": "Avoid excessively long variable names like serverPrivateKeyPathStream",
        "source": "LongVariable"
      },
      {
        "line": 47,
        "column": 21,
        "type": "error",
        "message": "Ensure that resources like this InputStream object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 48,
        "column": 21,
        "type": "error",
        "message": "Avoid excessively long variable names like serverTrustCertStream",
        "source": "LongVariable"
      },
      {
        "line": 48,
        "column": 21,
        "type": "error",
        "message": "Ensure that resources like this InputStream object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 53,
        "column": 20,
        "type": "error",
        "message": "Local variable 'password' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 80,
        "column": 56,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 23,
        "type": "error",
        "message": "Avoid excessively long variable names like globalConfigManager",
        "source": "LongVariable"
      },
      {
        "line": 81,
        "column": 23,
        "type": "error",
        "message": "Local variable 'globalConfigManager' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 82,
        "column": 19,
        "type": "error",
        "message": "Local variable 'sslConfig' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 84,
        "column": 27,
        "type": "error",
        "message": "Local variable 'builder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 21,
        "type": "error",
        "message": "Avoid excessively long variable names like clientTrustCertCollectionPath",
        "source": "LongVariable"
      },
      {
        "line": 85,
        "column": 21,
        "type": "error",
        "message": "Ensure that resources like this InputStream object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 86,
        "column": 21,
        "type": "error",
        "message": "Avoid excessively long variable names like clientCertChainFilePath",
        "source": "LongVariable"
      },
      {
        "line": 86,
        "column": 21,
        "type": "error",
        "message": "Ensure that resources like this InputStream object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 87,
        "column": 21,
        "type": "error",
        "message": "Avoid excessively long variable names like clientPrivateKeyFilePath",
        "source": "LongVariable"
      },
      {
        "line": 87,
        "column": 21,
        "type": "error",
        "message": "Ensure that resources like this InputStream object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 97,
        "column": 24,
        "type": "error",
        "message": "Local variable 'password' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 124,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 136,
        "column": 20,
        "type": "error",
        "message": "Local variable 'jdkProviders' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 137,
        "column": 16,
        "type": "error",
        "message": "Useless parentheses.",
        "source": "UselessParentheses"
      },
      {
        "line": 140,
        "column": 53,
        "type": "error",
        "message": "Parameter 'stream' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/SslServerTlsHandler.java",
    "score": 0.0,
    "error_count": 22,
    "messages": [
      {
        "line": 35,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 45,
        "column": 36,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 43,
        "type": "error",
        "message": "Parameter 'sslContext' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 53,
        "column": 43,
        "type": "error",
        "message": "Parameter 'sslContext' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 63,
        "type": "error",
        "message": "Parameter 'detectSsl' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 70,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 58,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 70,
        "type": "error",
        "message": "Parameter 'evt' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 41,
        "type": "error",
        "message": "Local variable 'handshakeEvent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 28,
        "type": "error",
        "message": "Local variable 'session' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 73,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 81,
        "column": 49,
        "type": "error",
        "message": "Avoid excessively long variable names like channelHandlerContext",
        "source": "LongVariable"
      },
      {
        "line": 81,
        "column": 49,
        "type": "error",
        "message": "Parameter 'channelHandlerContext' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 80,
        "type": "error",
        "message": "Parameter 'byteBuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 83,
        "column": 39,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 93,
        "column": 35,
        "type": "error",
        "message": "Parameter 'buf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 95,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 100,
        "column": 50,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 101,
        "column": 25,
        "type": "error",
        "message": "Avoid variables with short names like p",
        "source": "ShortVariable"
      },
      {
        "line": 101,
        "column": 25,
        "type": "error",
        "message": "Local variable 'p' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/pu/AbstractPortUnificationServer.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 45,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 66,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 42,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 62,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/pu/ChannelHandlerPretender.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 24,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 24,
        "column": 43,
        "type": "error",
        "message": "Parameter 'realHandler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/pu/DefaultCodec.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/api/pu/DefaultPuHandler.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 23,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/AbstractChannelBuffer.java",
    "score": 0.0,
    "error_count": 65,
    "messages": [
      {
        "line": 25,
        "column": 17,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 25,
        "column": 17,
        "type": "error",
        "message": "This class has a bunch of public methods and attributes",
        "source": "ExcessivePublicCount"
      },
      {
        "line": 25,
        "column": 70,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 27,
        "column": 17,
        "type": "error",
        "message": "Field readerIndex has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "Field writerIndex has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 41,
        "column": 33,
        "type": "error",
        "message": "Parameter 'readerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 54,
        "column": 33,
        "type": "error",
        "message": "Parameter 'writerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 30,
        "type": "error",
        "message": "Parameter 'readerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 47,
        "type": "error",
        "message": "Parameter 'writerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 128,
        "column": 41,
        "type": "error",
        "message": "Parameter 'writableBytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 135,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 135,
        "column": 44,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 140,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 140,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 60,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 154,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 154,
        "column": 44,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 159,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 159,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 164,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 164,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 164,
        "column": 60,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 181,
        "column": 40,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 184,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 186,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 193,
        "column": 34,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 193,
        "column": 43,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 193,
        "column": 57,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 200,
        "column": 34,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 205,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 210,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 210,
        "column": 50,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 219,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 219,
        "column": 50,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 219,
        "column": 64,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 226,
        "column": 38,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 227,
        "column": 13,
        "type": "error",
        "message": "Local variable 'length' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 234,
        "column": 40,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 234,
        "column": 49,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 241,
        "column": 31,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 242,
        "column": 13,
        "type": "error",
        "message": "Local variable 'newReaderIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 250,
        "column": 31,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 255,
        "column": 35,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 255,
        "column": 44,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 255,
        "column": 58,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 261,
        "column": 35,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 266,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 271,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 271,
        "column": 51,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 280,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 280,
        "column": 51,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 280,
        "column": 65,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 286,
        "column": 39,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 287,
        "column": 13,
        "type": "error",
        "message": "Local variable 'length' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 293,
        "column": 39,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 293,
        "column": 39,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 293,
        "column": 47,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 294,
        "column": 13,
        "type": "error",
        "message": "Local variable 'writtenBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 312,
        "column": 34,
        "type": "error",
        "message": "Avoid variables with short names like o",
        "source": "ShortVariable"
      },
      {
        "line": 312,
        "column": 34,
        "type": "error",
        "message": "Parameter 'o' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 323,
        "column": 40,
        "type": "error",
        "message": "Parameter 'that' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 336,
        "column": 43,
        "type": "error",
        "message": "Avoid excessively long variable names like minimumReadableBytes",
        "source": "LongVariable"
      },
      {
        "line": 336,
        "column": 43,
        "type": "error",
        "message": "Parameter 'minimumReadableBytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/ByteBufferBackedChannelBuffer.java",
    "score": 0.0,
    "error_count": 68,
    "messages": [
      {
        "line": 25,
        "column": 74,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 29,
        "column": 23,
        "type": "error",
        "message": "Field capacity has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 31,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 31,
        "column": 53,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 41,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 41,
        "column": 72,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 64,
        "column": 35,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 46,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 19,
        "type": "error",
        "message": "Unnecessary cast (ByteBuffer)",
        "source": "UnnecessaryCast"
      },
      {
        "line": 69,
        "column": 19,
        "type": "error",
        "message": "Thrown exception does not preserve the stack trace of exception 'e' on all code paths",
        "source": "PreserveStackTrace"
      },
      {
        "line": 72,
        "column": 20,
        "type": "error",
        "message": "Local variable 'dst' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 82,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 44,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 53,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 20,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 93,
        "column": 19,
        "type": "error",
        "message": "Thrown exception does not preserve the stack trace of exception 'e' on all code paths",
        "source": "PreserveStackTrace"
      },
      {
        "line": 100,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 48,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 101,
        "column": 20,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 102,
        "column": 13,
        "type": "error",
        "message": "Local variable 'bytesToCopy' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 106,
        "column": 19,
        "type": "error",
        "message": "Thrown exception does not preserve the stack trace of exception 'e' on all code paths",
        "source": "PreserveStackTrace"
      },
      {
        "line": 113,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 60,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 115,
        "column": 43,
        "type": "error",
        "message": "Local variable 'bbdst' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 116,
        "column": 24,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 129,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 50,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 59,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 137,
        "column": 20,
        "type": "error",
        "message": "Local variable 'tmp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 138,
        "column": 13,
        "type": "error",
        "message": "Unnecessary cast (ByteBuffer)",
        "source": "UnnecessaryCast"
      },
      {
        "line": 151,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 151,
        "column": 40,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 44,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 53,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 158,
        "column": 20,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 165,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 48,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 166,
        "column": 20,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 173,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 173,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 173,
        "column": 60,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 173,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 175,
        "column": 43,
        "type": "error",
        "message": "Local variable 'bbsrc' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 176,
        "column": 24,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 189,
        "column": 40,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 189,
        "column": 51,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 191,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 193,
        "column": 20,
        "type": "error",
        "message": "Unnecessary cast (ByteBuffer)",
        "source": "UnnecessaryCast"
      },
      {
        "line": 199,
        "column": 16,
        "type": "error",
        "message": "The method 'setBytes(int, InputStream, int)' has a cognitive complexity of 22, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 199,
        "column": 48,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 199,
        "column": 48,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 203,
        "column": 13,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'index'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 205,
        "column": 21,
        "type": "error",
        "message": "Local variable 'localReadBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 208,
        "column": 25,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 215,
        "column": 17,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'length'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 218,
        "column": 20,
        "type": "error",
        "message": "Local variable 'tmp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 219,
        "column": 17,
        "type": "error",
        "message": "Avoid variables with short names like i",
        "source": "ShortVariable"
      },
      {
        "line": 221,
        "column": 21,
        "type": "error",
        "message": "Local variable 'localReadBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 224,
        "column": 25,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 232,
        "column": 13,
        "type": "error",
        "message": "Unnecessary cast (ByteBuffer)",
        "source": "UnnecessaryCast"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/ChannelBuffer.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 204,
        "column": 8,
        "type": "error",
        "message": "This class has a bunch of public methods and attributes",
        "source": "ExcessivePublicCount"
      },
      {
        "line": 204,
        "column": 66,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 278,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like o",
        "source": "ShortVariable"
      },
      {
        "line": 307,
        "column": 10,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getBytes' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 324,
        "column": 10,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getBytes' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 338,
        "column": 10,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getBytes' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 355,
        "column": 10,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getBytes' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 373,
        "column": 10,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getBytes' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 391,
        "column": 10,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getBytes' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 406,
        "column": 10,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getBytes' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 711,
        "column": 9,
        "type": "error",
        "message": "Linguistics Antipattern - The setter 'setBytes' should not return any type except void linguistically",
        "source": "LinguisticNaming"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/ChannelBufferInputStream.java",
    "score": 1.0,
    "error_count": 18,
    "messages": [
      {
        "line": 29,
        "column": 51,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 33,
        "column": 51,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 63,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 35,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 72,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 78,
        "column": 28,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 78,
        "column": 28,
        "type": "error",
        "message": "Parameter 'b' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 35,
        "type": "error",
        "message": "Parameter 'off' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 13,
        "type": "error",
        "message": "Local variable 'available' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 84,
        "column": 9,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'len'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 95,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like n",
        "source": "ShortVariable"
      },
      {
        "line": 95,
        "column": 27,
        "type": "error",
        "message": "Parameter 'n' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 97,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 103,
        "column": 31,
        "type": "error",
        "message": "Avoid variables with short names like n",
        "source": "ShortVariable"
      },
      {
        "line": 103,
        "column": 31,
        "type": "error",
        "message": "Parameter 'n' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 13,
        "type": "error",
        "message": "Local variable 'nBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/ChannelBufferOutputStream.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 25,
        "column": 33,
        "type": "error",
        "message": "Field buffer has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 28,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 28,
        "column": 52,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 30,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 41,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 41,
        "column": 30,
        "type": "error",
        "message": "Parameter 'b' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 37,
        "type": "error",
        "message": "Parameter 'off' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 46,
        "type": "error",
        "message": "Parameter 'len' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 50,
        "column": 30,
        "type": "error",
        "message": "Parameter 'b' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 55,
        "column": 27,
        "type": "error",
        "message": "Parameter 'b' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/ChannelBuffers.java",
    "score": 0.0,
    "error_count": 39,
    "messages": [
      {
        "line": 22,
        "column": 35,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 35,
        "column": 51,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 51,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 68,
        "type": "error",
        "message": "Parameter 'factory' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 44,
        "column": 44,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 54,
        "column": 54,
        "type": "error",
        "message": "Parameter 'array' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 54,
        "column": 65,
        "type": "error",
        "message": "Parameter 'offset' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 54,
        "column": 77,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 56,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 58,
        "column": 16,
        "type": "error",
        "message": "Local variable 'dest' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 54,
        "type": "error",
        "message": "Parameter 'array' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 68,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 73,
        "column": 58,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 75,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 78,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 84,
        "column": 50,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 86,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 89,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 48,
        "type": "error",
        "message": "Parameter 'bufferA' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 95,
        "column": 71,
        "type": "error",
        "message": "Parameter 'bufferB' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 108,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 118,
        "column": 54,
        "type": "error",
        "message": "Parameter 'bufferA' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 77,
        "type": "error",
        "message": "Parameter 'bufferB' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 90,
        "type": "error",
        "message": "Parameter 'count' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 122,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 130,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 139,
        "column": 23,
        "type": "error",
        "message": "Linguistics Antipattern - The method 'hasCode' indicates linguistically it returns a boolean, but it returns 'int'",
        "source": "LinguisticNaming"
      },
      {
        "line": 139,
        "column": 45,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 45,
        "type": "error",
        "message": "Parameter 'bufferA' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 68,
        "type": "error",
        "message": "Parameter 'bufferB' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 166,
        "column": 18,
        "type": "error",
        "message": "Avoid variables with short names like va",
        "source": "ShortVariable"
      },
      {
        "line": 166,
        "column": 18,
        "type": "error",
        "message": "Local variable 'va' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 167,
        "column": 18,
        "type": "error",
        "message": "Avoid variables with short names like vb",
        "source": "ShortVariable"
      },
      {
        "line": 167,
        "column": 18,
        "type": "error",
        "message": "Local variable 'vb' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 169,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 171,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/DirectChannelBufferFactory.java",
    "score": 3.5,
    "error_count": 13,
    "messages": [
      {
        "line": 26,
        "column": 12,
        "type": "error",
        "message": "Avoid unnecessary constructors - the compiler will generate these for you",
        "source": "UnnecessaryConstructor"
      },
      {
        "line": 35,
        "column": 40,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 46,
        "column": 43,
        "type": "error",
        "message": "Parameter 'array' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 54,
        "type": "error",
        "message": "Parameter 'offset' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 66,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 54,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 60,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 47,
        "type": "error",
        "message": "Parameter 'nioBuffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 68,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 71,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 13,
        "type": "error",
        "message": "Local variable 'pos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/DynamicChannelBuffer.java",
    "score": 0.0,
    "error_count": 55,
    "messages": [
      {
        "line": 25,
        "column": 65,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 27,
        "column": 40,
        "type": "error",
        "message": "Field factory has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 31,
        "column": 37,
        "type": "error",
        "message": "Parameter 'estimatedLength' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 35,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 35,
        "column": 37,
        "type": "error",
        "message": "Parameter 'estimatedLength' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 35,
        "column": 75,
        "type": "error",
        "message": "Parameter 'factory' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 47,
        "column": 41,
        "type": "error",
        "message": "Parameter 'minWritableBytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 13,
        "type": "error",
        "message": "Local variable 'minNewCapacity' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 23,
        "type": "error",
        "message": "Local variable 'newBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 71,
        "column": 35,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 71,
        "column": 46,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 30,
        "type": "error",
        "message": "Local variable 'copiedBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 44,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 53,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 48,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 60,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 50,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 59,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 122,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 122,
        "column": 40,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 128,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 128,
        "column": 44,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 128,
        "column": 53,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 128,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 48,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 140,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 140,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 140,
        "column": 60,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 140,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 146,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 146,
        "column": 48,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 146,
        "column": 57,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 152,
        "column": 40,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 152,
        "column": 51,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 31,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 163,
        "column": 35,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 163,
        "column": 44,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 163,
        "column": 58,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 169,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 169,
        "column": 51,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 169,
        "column": 65,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 175,
        "column": 39,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 181,
        "column": 39,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 181,
        "column": 39,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 181,
        "column": 47,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/HeapChannelBuffer.java",
    "score": 0.0,
    "error_count": 57,
    "messages": [
      {
        "line": 33,
        "column": 28,
        "type": "error",
        "message": "Field array has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 40,
        "column": 34,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 37,
        "type": "error",
        "message": "Parameter 'array' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 15,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 60,
        "column": 40,
        "type": "error",
        "message": "Parameter 'array' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 51,
        "type": "error",
        "message": "Parameter 'readerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 68,
        "type": "error",
        "message": "Parameter 'writerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 13,
        "type": "error",
        "message": "Avoid throwing null pointer exceptions.",
        "source": "AvoidThrowingNullPointerException"
      },
      {
        "line": 64,
        "column": 9,
        "type": "error",
        "message": "The user-supplied array 'array' is stored directly.",
        "source": "ArrayIsStoredDirectly"
      },
      {
        "line": 85,
        "column": 9,
        "type": "error",
        "message": "Returning 'array' may expose an internal array.",
        "source": "MethodReturnsInternalArray"
      },
      {
        "line": 94,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 60,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 44,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 53,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 48,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 50,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 59,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 57,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 66,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 40,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 60,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 44,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 53,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 148,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 148,
        "column": 48,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 153,
        "column": 48,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 153,
        "column": 48,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 156,
        "column": 17,
        "type": "error",
        "message": "Local variable 'localReadBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 159,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 165,
        "column": 13,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'index'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 166,
        "column": 13,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'length'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 172,
        "column": 16,
        "type": "error",
        "message": "Linguistics Antipattern - The setter 'setBytes' should not return any type except void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 172,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 172,
        "column": 58,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 172,
        "column": 58,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 172,
        "column": 66,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 173,
        "column": 20,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 185,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 199,
        "column": 35,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 199,
        "column": 46,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 204,
        "column": 16,
        "type": "error",
        "message": "Local variable 'copiedArray' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 215,
        "column": 40,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 215,
        "column": 51,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/HeapChannelBufferFactory.java",
    "score": 5.5,
    "error_count": 9,
    "messages": [
      {
        "line": 26,
        "column": 12,
        "type": "error",
        "message": "Avoid unnecessary constructors - the compiler will generate these for you",
        "source": "UnnecessaryConstructor"
      },
      {
        "line": 35,
        "column": 40,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 43,
        "type": "error",
        "message": "Parameter 'array' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 54,
        "type": "error",
        "message": "Parameter 'offset' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 66,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 47,
        "type": "error",
        "message": "Parameter 'nioBuffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 50,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 13,
        "type": "error",
        "message": "Local variable 'pos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/ExchangeClient.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 28,
        "column": 31,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/Exchangers.java",
    "score": 0.0,
    "error_count": 34,
    "messages": [
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 31,
        "column": 25,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 41,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 62,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 43,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 59,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 66,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 86,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 43,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 63,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 83,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 67,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 61,
        "column": 64,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 68,
        "column": 9,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'url'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 72,
        "column": 49,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 76,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 80,
        "column": 49,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 80,
        "column": 65,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 84,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 84,
        "column": 62,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 49,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 69,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 89,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 66,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 86,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 96,
        "column": 49,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 96,
        "column": 70,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 67,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 46,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 16,
        "type": "error",
        "message": "Local variable 'type' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/PortUnificationExchanger.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 34,
        "column": 33,
        "type": "error",
        "message": "The constant name 'log' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 35,
        "column": 64,
        "type": "error",
        "message": "The constant name 'servers' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 37,
        "column": 43,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 63,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 27,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      },
      {
        "line": 57,
        "column": 15,
        "type": "error",
        "message": "Avoid using implementation types like 'ArrayList'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 59,
        "column": 29,
        "type": "error",
        "message": "Local variable 'server' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 73,
        "column": 65,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/Request.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 23,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.HEARTBEAT_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 48,
        "column": 25,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 48,
        "column": 25,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 47,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 63,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 64,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 77,
        "column": 35,
        "type": "error",
        "message": "Parameter 'version' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 85,
        "column": 35,
        "type": "error",
        "message": "Parameter 'twoWay' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 93,
        "column": 33,
        "type": "error",
        "message": "Parameter 'event' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 34,
        "type": "error",
        "message": "Parameter 'mEvent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 35,
        "type": "error",
        "message": "Parameter 'mBroken' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 114,
        "column": 32,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 122,
        "column": 38,
        "type": "error",
        "message": "Parameter 'isHeartbeat' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 17,
        "type": "error",
        "message": "Local variable 'copy' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 139,
        "column": 17,
        "type": "error",
        "message": "Local variable 'copy' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 150,
        "column": 52,
        "type": "error",
        "message": "Use equals() to compare object references.",
        "source": "CompareObjectsWithEquals"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/Response.java",
    "score": 1.0,
    "error_count": 18,
    "messages": [
      {
        "line": 19,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.HEARTBEAT_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 29,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like OK",
        "source": "ShortVariable"
      },
      {
        "line": 79,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like SERVER_THREADPOOL_EXHAUSTED_ERROR",
        "source": "LongVariable"
      },
      {
        "line": 96,
        "column": 26,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 96,
        "column": 26,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 26,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 100,
        "column": 26,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 37,
        "type": "error",
        "message": "Parameter 'version' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 109,
        "column": 28,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 109,
        "column": 28,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 117,
        "column": 35,
        "type": "error",
        "message": "Parameter 'version' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 125,
        "column": 32,
        "type": "error",
        "message": "Parameter 'status' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 133,
        "column": 33,
        "type": "error",
        "message": "Parameter 'event' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 138,
        "column": 34,
        "type": "error",
        "message": "Parameter 'mEvent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 147,
        "column": 38,
        "type": "error",
        "message": "Parameter 'isHeartbeat' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 34,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 40,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 172,
        "column": 59,
        "type": "error",
        "message": "Use equals() to compare object references.",
        "source": "CompareObjectsWithEquals"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/codec/ExchangeCodec.java",
    "score": 0.0,
    "error_count": 153,
    "messages": [
      {
        "line": 49,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 49,
        "column": 8,
        "type": "error",
        "message": "Possible God Class (WMC=93, ATFD=70, TCC=3.448%)",
        "source": "GodClass"
      },
      {
        "line": 49,
        "column": 8,
        "type": "error",
        "message": "The class 'ExchangeCodec' has a total cyclomatic complexity of 93 (highest 20).",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 49,
        "column": 48,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 61,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like SERIALIZATION_MASK",
        "source": "LongVariable"
      },
      {
        "line": 62,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 69,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 55,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 70,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 80,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 80,
        "column": 57,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 13,
        "type": "error",
        "message": "Local variable 'readable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 82,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 88,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, ChannelBuffer, int, byte[])' has a cognitive complexity of 19, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 88,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, ChannelBuffer, int, byte[])' has a cyclomatic complexity of 15.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 88,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, ChannelBuffer, int, byte[])' has an NPath complexity of 480, current threshold is 200",
        "source": "NPathComplexity"
      },
      {
        "line": 88,
        "column": 37,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 60,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 72,
        "type": "error",
        "message": "Parameter 'readable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 17,
        "type": "error",
        "message": "Local variable 'length' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 94,
        "column": 17,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'header'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 104,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 108,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 112,
        "column": 13,
        "type": "error",
        "message": "Local variable 'len' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 116,
        "column": 16,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 118,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 121,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like tt",
        "source": "ShortVariable"
      },
      {
        "line": 121,
        "column": 13,
        "type": "error",
        "message": "Local variable 'tt' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 123,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 127,
        "column": 34,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 127,
        "column": 34,
        "type": "error",
        "message": "Local variable 'is' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 139,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 145,
        "column": 22,
        "type": "error",
        "message": "The method 'decodeBody(Channel, InputStream, byte[])' has a cognitive complexity of 29, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 145,
        "column": 22,
        "type": "error",
        "message": "The method 'decodeBody(Channel, InputStream, byte[])' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 145,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 62,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 145,
        "column": 62,
        "type": "error",
        "message": "Parameter 'is' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 73,
        "type": "error",
        "message": "Parameter 'header' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 146,
        "column": 14,
        "type": "error",
        "message": "Local variable 'flag' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 146,
        "column": 14,
        "type": "error",
        "message": "Use one line for each declaration, it enhances code readability.",
        "source": "OneDeclarationPerLine"
      },
      {
        "line": 146,
        "column": 32,
        "type": "error",
        "message": "Local variable 'proto' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 148,
        "column": 14,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 148,
        "column": 14,
        "type": "error",
        "message": "Local variable 'id' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 151,
        "column": 22,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 156,
        "column": 18,
        "type": "error",
        "message": "Local variable 'status' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 162,
        "column": 32,
        "type": "error",
        "message": "Local variable 'eventPayload' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 165,
        "column": 36,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 176,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 180,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 183,
        "column": 21,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 192,
        "column": 28,
        "type": "error",
        "message": "Local variable 'eventPayload' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 195,
        "column": 32,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 203,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 212,
        "column": 42,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 212,
        "column": 42,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 213,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 215,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 217,
        "column": 17,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 219,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 224,
        "column": 42,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 224,
        "column": 65,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 224,
        "column": 81,
        "type": "error",
        "message": "Parameter 'req' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 225,
        "column": 23,
        "type": "error",
        "message": "Local variable 'serialization' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 227,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 245,
        "column": 13,
        "type": "error",
        "message": "Local variable 'savedWriteIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 247,
        "column": 35,
        "type": "error",
        "message": "Local variable 'bos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 253,
        "column": 26,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 267,
        "column": 13,
        "type": "error",
        "message": "Local variable 'len' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 277,
        "column": 20,
        "type": "error",
        "message": "The method 'encodeResponse(Channel, ChannelBuffer, Response)' has a NCSS line count of 68.",
        "source": "NcssCount"
      },
      {
        "line": 277,
        "column": 20,
        "type": "error",
        "message": "The method 'encodeResponse(Channel, ChannelBuffer, Response)' has a cognitive complexity of 36, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 277,
        "column": 20,
        "type": "error",
        "message": "The method 'encodeResponse(Channel, ChannelBuffer, Response)' has a cyclomatic complexity of 20.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 277,
        "column": 43,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 277,
        "column": 66,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 277,
        "column": 83,
        "type": "error",
        "message": "Parameter 'res' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 278,
        "column": 13,
        "type": "error",
        "message": "Local variable 'savedWriteIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 280,
        "column": 27,
        "type": "error",
        "message": "Local variable 'serialization' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 282,
        "column": 20,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 291,
        "column": 18,
        "type": "error",
        "message": "Local variable 'status' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 297,
        "column": 39,
        "type": "error",
        "message": "Local variable 'bos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 305,
        "column": 34,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 317,
        "column": 30,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 328,
        "column": 17,
        "type": "error",
        "message": "Local variable 'len' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 335,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 340,
        "column": 26,
        "type": "error",
        "message": "Avoid variables with short names like r",
        "source": "ShortVariable"
      },
      {
        "line": 340,
        "column": 26,
        "type": "error",
        "message": "Local variable 'r' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 343,
        "column": 21,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 344,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 348,
        "column": 25,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 350,
        "column": 25,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 354,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 360,
        "column": 25,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 366,
        "column": 17,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 368,
        "column": 24,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 370,
        "column": 24,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 373,
        "column": 27,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      },
      {
        "line": 379,
        "column": 45,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 379,
        "column": 45,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 383,
        "column": 52,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 383,
        "column": 52,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 391,
        "column": 53,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 391,
        "column": 53,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 400,
        "column": 44,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 400,
        "column": 56,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 404,
        "column": 47,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 404,
        "column": 59,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 409,
        "column": 53,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 409,
        "column": 65,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 413,
        "column": 51,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 413,
        "column": 63,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 417,
        "column": 52,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 417,
        "column": 64,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 422,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 422,
        "column": 62,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 422,
        "column": 62,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 426,
        "column": 46,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 426,
        "column": 67,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 426,
        "column": 67,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 426,
        "column": 78,
        "type": "error",
        "message": "Parameter 'eventBytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 429,
        "column": 21,
        "type": "error",
        "message": "Local variable 'dataLen' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 430,
        "column": 21,
        "type": "error",
        "message": "Local variable 'threshold' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 441,
        "column": 69,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 441,
        "column": 69,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 445,
        "column": 70,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 445,
        "column": 70,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 449,
        "column": 49,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 449,
        "column": 70,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 449,
        "column": 70,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 454,
        "column": 39,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 454,
        "column": 61,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 454,
        "column": 73,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 458,
        "column": 42,
        "type": "error",
        "message": "Avoid unused method parameters such as 'channel'.",
        "source": "UnusedFormalParameter"
      },
      {
        "line": 458,
        "column": 64,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 458,
        "column": 76,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 463,
        "column": 70,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 463,
        "column": 82,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 467,
        "column": 68,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 467,
        "column": 80,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 471,
        "column": 69,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 471,
        "column": 81,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 475,
        "column": 68,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 475,
        "column": 80,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 479,
        "column": 69,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 479,
        "column": 81,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 483,
        "column": 54,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 483,
        "column": 68,
        "type": "error",
        "message": "Parameter 'size' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 483,
        "column": 81,
        "type": "error",
        "message": "Parameter 'header' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 484,
        "column": 13,
        "type": "error",
        "message": "Local variable 'payload' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 485,
        "column": 17,
        "type": "error",
        "message": "Local variable 'overPayload' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 487,
        "column": 18,
        "type": "error",
        "message": "Local variable 'reqId' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 488,
        "column": 18,
        "type": "error",
        "message": "Local variable 'flag' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 490,
        "column": 26,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 495,
        "column": 24,
        "type": "error",
        "message": "Local variable 'errorMsg' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 498,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/DefaultFuture.java",
    "score": 0.0,
    "error_count": 62,
    "messages": [
      {
        "line": 42,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 43,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 48,
        "column": 8,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 48,
        "column": 62,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 50,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 65,
        "column": 24,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 75,
        "column": 27,
        "type": "error",
        "message": "Field sent has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 85,
        "column": 45,
        "type": "error",
        "message": "Parameter 'executor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 13,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 89,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 52,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 65,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 102,
        "column": 52,
        "type": "error",
        "message": "Parameter 'future' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 103,
        "column": 26,
        "type": "error",
        "message": "Local variable 'task' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 123,
        "column": 51,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 68,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 81,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 106,
        "type": "error",
        "message": "Parameter 'executor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 135,
        "column": 48,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 135,
        "column": 48,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 139,
        "column": 45,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 54,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 144,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 156,
        "column": 45,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 39,
        "type": "error",
        "message": "Local variable 'entry' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 159,
        "column": 31,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 161,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like disconnectResponse",
        "source": "LongVariable"
      },
      {
        "line": 161,
        "column": 30,
        "type": "error",
        "message": "Local variable 'disconnectResponse' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 165,
        "column": 52,
        "type": "error",
        "message": "Call to `getRequest` on foreign value `future` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 165,
        "column": 74,
        "type": "error",
        "message": "Call to `getRequest` on foreign value `future` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 166,
        "column": 21,
        "type": "error",
        "message": "Unnecessary qualifier 'DefaultFuture': 'received' is already in scope",
        "source": "UnnecessaryFullyQualifiedName"
      },
      {
        "line": 172,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 172,
        "column": 59,
        "type": "error",
        "message": "Parameter 'response' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 176,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 176,
        "column": 59,
        "type": "error",
        "message": "Parameter 'response' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 176,
        "column": 77,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 178,
        "column": 27,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 180,
        "column": 25,
        "type": "error",
        "message": "Avoid variables with short names like t",
        "source": "ShortVariable"
      },
      {
        "line": 180,
        "column": 25,
        "type": "error",
        "message": "Local variable 't' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 187,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 188,
        "column": 27,
        "type": "error",
        "message": "Useless parentheses.",
        "source": "UselessParentheses"
      },
      {
        "line": 188,
        "column": 28,
        "type": "error",
        "message": "When instantiating a SimpleDateFormat object, specify a Locale",
        "source": "SimpleDateFormatNeedsLocale"
      },
      {
        "line": 199,
        "column": 35,
        "type": "error",
        "message": "Avoid excessively long variable names like mayInterruptIfRunning",
        "source": "LongVariable"
      },
      {
        "line": 200,
        "column": 18,
        "type": "error",
        "message": "Local variable 'errorResult' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 214,
        "column": 38,
        "type": "error",
        "message": "Parameter 'res' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 228,
        "column": 13,
        "type": "error",
        "message": "No need to check for null before an instanceof",
        "source": "SimplifyConditional"
      },
      {
        "line": 229,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like threadlessExecutor",
        "source": "LongVariable"
      },
      {
        "line": 229,
        "column": 32,
        "type": "error",
        "message": "Local variable 'threadlessExecutor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 261,
        "column": 46,
        "type": "error",
        "message": "Parameter 'scan' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 262,
        "column": 14,
        "type": "error",
        "message": "Local variable 'nowTimestamp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 265,
        "column": 19,
        "type": "error",
        "message": "Useless parentheses.",
        "source": "UselessParentheses"
      },
      {
        "line": 265,
        "column": 20,
        "type": "error",
        "message": "When instantiating a SimpleDateFormat object, specify a Locale",
        "source": "SimpleDateFormatNeedsLocale"
      },
      {
        "line": 266,
        "column": 19,
        "type": "error",
        "message": "Useless parentheses.",
        "source": "UselessParentheses"
      },
      {
        "line": 266,
        "column": 20,
        "type": "error",
        "message": "When instantiating a SimpleDateFormat object, specify a Locale",
        "source": "SimpleDateFormatNeedsLocale"
      },
      {
        "line": 279,
        "column": 9,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'TimeoutCheckTask(Long)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 279,
        "column": 31,
        "type": "error",
        "message": "Parameter 'requestID' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 285,
        "column": 27,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 285,
        "column": 36,
        "type": "error",
        "message": "Unnecessary qualifier 'DefaultFuture': 'getFuture' is already in scope",
        "source": "UnnecessaryFullyQualifiedName"
      },
      {
        "line": 291,
        "column": 17,
        "type": "error",
        "message": "Call to `getExecutor` on foreign value `future` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 297,
        "column": 50,
        "type": "error",
        "message": "Parameter 'future' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 299,
        "column": 22,
        "type": "error",
        "message": "Local variable 'timeoutResponse' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 304,
        "column": 13,
        "type": "error",
        "message": "Unnecessary qualifier 'DefaultFuture': 'received' is already in scope",
        "source": "UnnecessaryFullyQualifiedName"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/ExchangeHandlerAdapter.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 38,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/ExchangeHandlerDispatcher.java",
    "score": 0.0,
    "error_count": 22,
    "messages": [
      {
        "line": 33,
        "column": 67,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 45,
        "column": 49,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 56,
        "type": "error",
        "message": "Parameter 'handlers' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 49,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 76,
        "type": "error",
        "message": "Parameter 'handlers' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 71,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 74,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 62,
        "type": "error",
        "message": "Parameter 'type' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 79,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 74,
        "column": 65,
        "type": "error",
        "message": "Parameter 'type' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 60,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 76,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 86,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 91,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 96,
        "column": 30,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 96,
        "column": 46,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 101,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 101,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/ExchangeServerDelegate.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 39,
        "column": 50,
        "type": "error",
        "message": "Parameter 'server' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 9,
        "type": "error",
        "message": "Overridable method called during object construction: ExchangeServerDelegate.setServer(*ExchangeServer)",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 47,
        "column": 42,
        "type": "error",
        "message": "Parameter 'server' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 27,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 63,
        "column": 58,
        "type": "error",
        "message": "Parameter 'parameters' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 73,
        "column": 49,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 93,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 65,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 27,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/MultiMessage.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 32,
        "column": 39,
        "type": "error",
        "message": "Raw type use may be avoided by using a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 37,
        "column": 64,
        "type": "error",
        "message": "Parameter 'collection' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 22,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 58,
        "type": "error",
        "message": "Parameter 'args' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 51,
        "column": 35,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 40,
        "type": "error",
        "message": "Parameter 'collection' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 27,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 76,
        "column": 20,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/ReplierDispatcher.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 33,
        "column": 77,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 39,
        "column": 41,
        "type": "error",
        "message": "Parameter 'defaultReplier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 41,
        "type": "error",
        "message": "Parameter 'defaultReplier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 83,
        "type": "error",
        "message": "Parameter 'repliers' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 54,
        "type": "error",
        "message": "Parameter 'type' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 71,
        "type": "error",
        "message": "Parameter 'replier' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 57,
        "type": "error",
        "message": "Parameter 'type' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 44,
        "type": "error",
        "message": "Parameter 'type' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 61,
        "column": 46,
        "type": "error",
        "message": "Local variable 'entry' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 74,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 74,
        "column": 57,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/AbstractTimerTask.java",
    "score": 1.0,
    "error_count": 18,
    "messages": [
      {
        "line": 37,
        "column": 32,
        "type": "error",
        "message": "Field cancel has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 39,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'AbstractTimerTask(ChannelProvider, Long)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 39,
        "column": 39,
        "type": "error",
        "message": "Parameter 'channelProvider' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 61,
        "type": "error",
        "message": "Parameter 'tick' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'lastRead(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 47,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'lastWrite(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 51,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'now()'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 63,
        "column": 32,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 63,
        "column": 46,
        "type": "error",
        "message": "Parameter 'tick' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 72,
        "column": 15,
        "type": "error",
        "message": "Local variable 'timer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 29,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 82,
        "column": 29,
        "type": "error",
        "message": "Avoid variables with short names like c",
        "source": "ShortVariable"
      },
      {
        "line": 82,
        "column": 29,
        "type": "error",
        "message": "Local variable 'c' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 83,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 94,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'ChannelProvider'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/CloseTimerTask.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 29,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 33,
        "column": 43,
        "type": "error",
        "message": "Parameter 'channelProvider' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 65,
        "type": "error",
        "message": "Avoid excessively long variable names like heartbeatTimeoutTick",
        "source": "LongVariable"
      },
      {
        "line": 33,
        "column": 65,
        "type": "error",
        "message": "Parameter 'heartbeatTimeoutTick' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 91,
        "type": "error",
        "message": "Parameter 'idleTimeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 18,
        "type": "error",
        "message": "Local variable 'lastRead' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 18,
        "type": "error",
        "message": "Local variable 'lastWrite' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 18,
        "type": "error",
        "message": "Local variable 'now' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 50,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 51,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeChannel.java",
    "score": 0.0,
    "error_count": 47,
    "messages": [
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 62,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 44,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 52,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'HeaderExchangeChannel(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 52,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 34,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getOrAddChannel(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 59,
        "column": 58,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 59,
        "column": 58,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 61,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 73,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'removeChannelIfDisconnected(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 73,
        "column": 53,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 73,
        "column": 53,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'removeChannel(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 79,
        "column": 39,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 79,
        "column": 39,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 86,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 91,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 91,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 21,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 109,
        "column": 53,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 114,
        "column": 53,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 114,
        "column": 66,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 119,
        "column": 53,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 119,
        "column": 78,
        "type": "error",
        "message": "Parameter 'executor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 124,
        "column": 53,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 124,
        "column": 66,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 124,
        "column": 91,
        "type": "error",
        "message": "Parameter 'executor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 17,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 133,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 158,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 159,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 165,
        "column": 27,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 170,
        "column": 18,
        "type": "error",
        "message": "Local variable 'start' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 176,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 219,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 224,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 224,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 229,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 234,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 247,
        "column": 34,
        "type": "error",
        "message": "Parameter 'obj' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 249,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 252,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 255,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 257,
        "column": 31,
        "type": "error",
        "message": "Local variable 'other' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 260,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 263,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeClient.java",
    "score": 0.0,
    "error_count": 53,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.HEARTBEAT_CHECK_TICK'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.LEAST_HEARTBEAT_DURATION'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 41,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.TICKS_PER_WHEEL'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.utils.UrlUtils.getHeartbeat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 43,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.utils.UrlUtils.getIdleTimeout'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 48,
        "column": 61,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 53,
        "column": 63,
        "type": "error",
        "message": "Do not use non-final non-private static fields",
        "source": "MutableStaticState"
      },
      {
        "line": 53,
        "column": 63,
        "type": "error",
        "message": "The static field name 'IDLE_CHECK_TIMER' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 61,
        "column": 40,
        "type": "error",
        "message": "Parameter 'client' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 61,
        "column": 56,
        "type": "error",
        "message": "Parameter 'startTimer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 17,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 74,
        "column": 53,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 53,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 66,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 94,
        "column": 53,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 94,
        "column": 78,
        "type": "error",
        "message": "Parameter 'executor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 53,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 66,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 91,
        "type": "error",
        "message": "Parameter 'executor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 124,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 27,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 158,
        "column": 27,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 58,
        "type": "error",
        "message": "Parameter 'parameters' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 175,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 180,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 180,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 185,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 190,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 194,
        "column": 41,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 196,
        "column": 47,
        "type": "error",
        "message": "Avoid variables with short names like cp",
        "source": "ShortVariable"
      },
      {
        "line": 196,
        "column": 47,
        "type": "error",
        "message": "Local variable 'cp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 196,
        "column": 84,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 197,
        "column": 17,
        "type": "error",
        "message": "Local variable 'heartbeat' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 198,
        "column": 18,
        "type": "error",
        "message": "Local variable 'heartbeatTick' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 199,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like heartBeatTimerTask",
        "source": "LongVariable"
      },
      {
        "line": 199,
        "column": 32,
        "type": "error",
        "message": "Local variable 'heartBeatTimerTask' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 204,
        "column": 41,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 206,
        "column": 47,
        "type": "error",
        "message": "Avoid variables with short names like cp",
        "source": "ShortVariable"
      },
      {
        "line": 206,
        "column": 47,
        "type": "error",
        "message": "Local variable 'cp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 206,
        "column": 84,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 207,
        "column": 17,
        "type": "error",
        "message": "Local variable 'idleTimeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 208,
        "column": 18,
        "type": "error",
        "message": "Avoid excessively long variable names like heartbeatTimeoutTick",
        "source": "LongVariable"
      },
      {
        "line": 208,
        "column": 18,
        "type": "error",
        "message": "Local variable 'heartbeatTimeoutTick' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 209,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like reconnectTimerTask",
        "source": "LongVariable"
      },
      {
        "line": 209,
        "column": 32,
        "type": "error",
        "message": "Local variable 'reconnectTimerTask' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 217,
        "column": 30,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 221,
        "column": 30,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 228,
        "column": 45,
        "type": "error",
        "message": "Parameter 'time' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 230,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 236,
        "column": 41,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeHandler.java",
    "score": 0.0,
    "error_count": 47,
    "messages": [
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.READONLY_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 47,
        "column": 35,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 51,
        "column": 50,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'handleResponse(Channel, Response)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 58,
        "column": 40,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 58,
        "type": "error",
        "message": "Parameter 'response' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 49,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 27,
        "type": "error",
        "message": "Local variable 'address' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 10,
        "type": "error",
        "message": "Missing commented default access modifier on method 'handlerEvent(Channel, Request)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 72,
        "column": 31,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 48,
        "type": "error",
        "message": "Parameter 'req' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 10,
        "type": "error",
        "message": "Missing commented default access modifier on method 'handleRequest(ExchangeChannel, Request)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 78,
        "column": 63,
        "type": "error",
        "message": "Parameter 'req' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 18,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 20,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 23,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 98,
        "column": 16,
        "type": "error",
        "message": "Local variable 'msg' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 100,
        "column": 37,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 112,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 115,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 123,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 124,
        "column": 25,
        "type": "error",
        "message": "Local variable 'exchangeChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 129,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 130,
        "column": 25,
        "type": "error",
        "message": "Local variable 'exchangeChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 140,
        "column": 30,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 140,
        "column": 46,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 29,
        "type": "error",
        "message": "Local variable 'exchangeChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 145,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 150,
        "column": 21,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 166,
        "column": 17,
        "type": "error",
        "message": "The method 'received(Channel, Object)' has a cognitive complexity of 19, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 166,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 166,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 170,
        "column": 21,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 184,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 184,
        "column": 27,
        "type": "error",
        "message": "Local variable 'e' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 185,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 187,
        "column": 24,
        "type": "error",
        "message": "Local variable 'echo' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 198,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 198,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 200,
        "column": 32,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 200,
        "column": 32,
        "type": "error",
        "message": "Local variable 'e' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 201,
        "column": 20,
        "type": "error",
        "message": "Local variable 'msg' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 203,
        "column": 25,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 205,
        "column": 30,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 213,
        "column": 25,
        "type": "error",
        "message": "Local variable 'exchangeChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 224,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java",
    "score": 0.0,
    "error_count": 47,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "A high number of imports can indicate a high degree of coupling within an object.",
        "source": "ExcessiveImports"
      },
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 45,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'java.util.Collections.unmodifiableCollection'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 46,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.READONLY_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 47,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.HEARTBEAT_CHECK_TICK'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 48,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.LEAST_HEARTBEAT_DURATION'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 49,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.TICKS_PER_WHEEL'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 50,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.utils.UrlUtils.getHeartbeat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 51,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.utils.UrlUtils.getIdleTimeout'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 56,
        "column": 61,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 64,
        "column": 63,
        "type": "error",
        "message": "Do not use non-final non-private static fields",
        "source": "MutableStaticState"
      },
      {
        "line": 64,
        "column": 63,
        "type": "error",
        "message": "The static field name 'IDLE_CHECK_TIMER' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 68,
        "column": 48,
        "type": "error",
        "message": "Parameter 'server' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 71,
        "column": 28,
        "type": "error",
        "message": "Overridable method called during object construction: HeaderExchangeServer.getUrl()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 109,
        "column": 20,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 110,
        "column": 57,
        "type": "error",
        "message": "Unnecessary cast (long)",
        "source": "UnnecessaryCast"
      },
      {
        "line": 114,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 128,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 133,
        "column": 29,
        "type": "error",
        "message": "Local variable 'channels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 134,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 161,
        "column": 37,
        "type": "error",
        "message": "Local variable 'exchangeChannels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 161,
        "column": 69,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 162,
        "column": 29,
        "type": "error",
        "message": "Local variable 'channels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 164,
        "column": 26,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 172,
        "column": 65,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 173,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 184,
        "column": 49,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 209,
        "column": 27,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 212,
        "column": 17,
        "type": "error",
        "message": "Local variable 'currHeartbeat' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 213,
        "column": 17,
        "type": "error",
        "message": "Local variable 'currIdleTimeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 214,
        "column": 17,
        "type": "error",
        "message": "Local variable 'heartbeat' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 215,
        "column": 17,
        "type": "error",
        "message": "Local variable 'idleTimeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 220,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 221,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 227,
        "column": 58,
        "type": "error",
        "message": "Parameter 'parameters' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 232,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 241,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 241,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 252,
        "column": 45,
        "type": "error",
        "message": "Parameter 'time' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 254,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 260,
        "column": 41,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 262,
        "column": 47,
        "type": "error",
        "message": "Avoid variables with short names like cp",
        "source": "ShortVariable"
      },
      {
        "line": 262,
        "column": 47,
        "type": "error",
        "message": "Local variable 'cp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 262,
        "column": 81,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 263,
        "column": 17,
        "type": "error",
        "message": "Local variable 'idleTimeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 264,
        "column": 18,
        "type": "error",
        "message": "Local variable 'idleTimeoutTick' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 265,
        "column": 28,
        "type": "error",
        "message": "Local variable 'closeTimerTask' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchanger.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 29,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.IS_PU_SERVER_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 41,
        "column": 39,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 60,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 36,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 57,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 17,
        "type": "error",
        "message": "Local variable 'isPuServerKey' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeartbeatHandler.java",
    "score": 0.0,
    "error_count": 22,
    "messages": [
      {
        "line": 30,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.HEARTBEAT_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 34,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 36,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like KEY_READ_TIMESTAMP",
        "source": "LongVariable"
      },
      {
        "line": 38,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like KEY_WRITE_TIMESTAMP",
        "source": "LongVariable"
      },
      {
        "line": 40,
        "column": 44,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 30,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 46,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 68,
        "column": 21,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 70,
        "column": 26,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 17,
        "type": "error",
        "message": "Deeply nested if..then statements are hard to read",
        "source": "AvoidDeeplyNestedIfStmts"
      },
      {
        "line": 74,
        "column": 25,
        "type": "error",
        "message": "Local variable 'heartbeat' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 80,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 91,
        "column": 43,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 95,
        "column": 44,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 45,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 103,
        "column": 46,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 107,
        "column": 47,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 48,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/HeartbeatTimerTask.java",
    "score": 3.5,
    "error_count": 13,
    "messages": [
      {
        "line": 26,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.HEARTBEAT_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 33,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 37,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'HeartbeatTimerTask(ChannelProvider, Long, int)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 37,
        "column": 40,
        "type": "error",
        "message": "Parameter 'channelProvider' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 62,
        "type": "error",
        "message": "Parameter 'heartbeatTick' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 81,
        "type": "error",
        "message": "Parameter 'heartbeat' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 18,
        "type": "error",
        "message": "Local variable 'lastRead' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 46,
        "column": 18,
        "type": "error",
        "message": "Local variable 'lastWrite' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 47,
        "column": 18,
        "type": "error",
        "message": "Local variable 'now' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 25,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 61,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 62,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/exchange/support/header/ReconnectTimerTask.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 30,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 34,
        "column": 47,
        "type": "error",
        "message": "Parameter 'channelProvider' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 69,
        "type": "error",
        "message": "Avoid excessively long variable names like heartbeatTimeoutTick",
        "source": "LongVariable"
      },
      {
        "line": 34,
        "column": 69,
        "type": "error",
        "message": "Parameter 'heartbeatTimeoutTick' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 95,
        "type": "error",
        "message": "Parameter 'idleTimeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 18,
        "type": "error",
        "message": "Local variable 'lastRead' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 18,
        "type": "error",
        "message": "Local variable 'now' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 46,
        "column": 13,
        "type": "error",
        "message": "Avoid if (x != y) ..; else ..;",
        "source": "ConfusingTernary"
      },
      {
        "line": 48,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 50,
        "column": 26,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 51,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 55,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 59,
        "column": 26,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 60,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 63,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 64,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/codec/TelnetCodec.java",
    "score": 0.0,
    "error_count": 93,
    "messages": [
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.CHARSET_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.DEFAULT_CHARSET'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 42,
        "column": 8,
        "type": "error",
        "message": "Possible God Class (WMC=80, ATFD=33, TCC=4.762%)",
        "source": "GodClass"
      },
      {
        "line": 42,
        "column": 8,
        "type": "error",
        "message": "The class 'TelnetCodec' has a total cyclomatic complexity of 80 (highest 44).",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 44,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 50,
        "column": 33,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 50,
        "column": 33,
        "type": "error",
        "message": "Avoid variables with short names like UP",
        "source": "ShortVariable"
      },
      {
        "line": 52,
        "column": 33,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 63,
        "column": 28,
        "type": "error",
        "message": "The method 'getCharset(Channel)' has a cognitive complexity of 17, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 63,
        "column": 47,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 20,
        "type": "error",
        "message": "Local variable 'attribute' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 69,
        "column": 36,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 70,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 73,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 24,
        "type": "error",
        "message": "Local variable 'parameter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 80,
        "column": 25,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 81,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 82,
        "column": 25,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 88,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 89,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 90,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 95,
        "column": 27,
        "type": "error",
        "message": "The method 'toString(byte[], Charset)' has a cognitive complexity of 27, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 95,
        "column": 27,
        "type": "error",
        "message": "The method 'toString(byte[], Charset)' has a cyclomatic complexity of 18.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 95,
        "column": 43,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 95,
        "column": 60,
        "type": "error",
        "message": "Parameter 'charset' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 96,
        "column": 16,
        "type": "error",
        "message": "Local variable 'copy' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 99,
        "column": 18,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 99,
        "column": 18,
        "type": "error",
        "message": "Local variable 'b' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 100,
        "column": 22,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 105,
        "column": 21,
        "type": "error",
        "message": "This if statement could be combined with its parent",
        "source": "CollapsibleIfStatements"
      },
      {
        "line": 109,
        "column": 29,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 111,
        "column": 21,
        "type": "error",
        "message": "Avoid reassigning the loop control variable 'i'",
        "source": "AvoidReassigningLoopVariables"
      },
      {
        "line": 113,
        "column": 21,
        "type": "error",
        "message": "Avoid reassigning the loop control variable 'i'",
        "source": "AvoidReassigningLoopVariables"
      },
      {
        "line": 115,
        "column": 21,
        "type": "error",
        "message": "Avoid reassigning the loop control variable 'i'",
        "source": "AvoidReassigningLoopVariables"
      },
      {
        "line": 119,
        "column": 17,
        "type": "error",
        "message": "Avoid reassigning the loop control variable 'i'",
        "source": "AvoidReassigningLoopVariables"
      },
      {
        "line": 125,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 130,
        "column": 44,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 130,
        "column": 60,
        "type": "error",
        "message": "Parameter 'command' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 44,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 60,
        "type": "error",
        "message": "Parameter 'command' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 136,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 138,
        "column": 13,
        "type": "error",
        "message": "Local variable 'offset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 141,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 148,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 148,
        "column": 55,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 151,
        "column": 17,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'message'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 153,
        "column": 20,
        "type": "error",
        "message": "Local variable 'msgData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 161,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 161,
        "column": 57,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 162,
        "column": 13,
        "type": "error",
        "message": "Local variable 'readable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 163,
        "column": 16,
        "type": "error",
        "message": "Local variable 'message' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 169,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, ChannelBuffer, int, byte[])' has a NCSS line count of 92.",
        "source": "NcssCount"
      },
      {
        "line": 169,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, ChannelBuffer, int, byte[])' has a cognitive complexity of 79, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 169,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, ChannelBuffer, int, byte[])' has a cyclomatic complexity of 44.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 169,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, ChannelBuffer, int, byte[])' has an NPath complexity of 30108672, current threshold is 200",
        "source": "NPathComplexity"
      },
      {
        "line": 169,
        "column": 37,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 169,
        "column": 72,
        "type": "error",
        "message": "Parameter 'readable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 171,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 175,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 178,
        "column": 44,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 180,
        "column": 25,
        "type": "error",
        "message": "Local variable 'isDoubleChar' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 185,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 188,
        "column": 21,
        "type": "error",
        "message": "Local variable 'command' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 194,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 198,
        "column": 17,
        "type": "error",
        "message": "Avoid variables with short names like up",
        "source": "ShortVariable"
      },
      {
        "line": 198,
        "column": 17,
        "type": "error",
        "message": "Local variable 'up' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 199,
        "column": 17,
        "type": "error",
        "message": "Local variable 'down' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 201,
        "column": 13,
        "type": "error",
        "message": "Avoid using implementation types like 'LinkedList'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 201,
        "column": 32,
        "type": "error",
        "message": "Local variable 'history' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 203,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 206,
        "column": 21,
        "type": "error",
        "message": "Local variable 'old' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 226,
        "column": 28,
        "type": "error",
        "message": "Avoid variables with short names like ov",
        "source": "ShortVariable"
      },
      {
        "line": 226,
        "column": 28,
        "type": "error",
        "message": "Local variable 'ov' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 227,
        "column": 35,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 245,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 247,
        "column": 21,
        "type": "error",
        "message": "Local variable 'command' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 253,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 257,
        "column": 21,
        "type": "error",
        "message": "Local variable 'command' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 264,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 266,
        "column": 9,
        "type": "error",
        "message": "Avoid using implementation types like 'LinkedList'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 267,
        "column": 17,
        "type": "error",
        "message": "Local variable 'index' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 270,
        "column": 20,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 272,
        "column": 24,
        "type": "error",
        "message": "Avoid variables with short names like b1",
        "source": "ShortVariable"
      },
      {
        "line": 272,
        "column": 24,
        "type": "error",
        "message": "Local variable 'b1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 273,
        "column": 24,
        "type": "error",
        "message": "Avoid variables with short names like b2",
        "source": "ShortVariable"
      },
      {
        "line": 273,
        "column": 24,
        "type": "error",
        "message": "Local variable 'b2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 276,
        "column": 17,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'message'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 279,
        "column": 16,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 282,
        "column": 41,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new LinkedList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 290,
        "column": 38,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/TelnetHandlerAdapter.java",
    "score": 0.0,
    "error_count": 22,
    "messages": [
      {
        "line": 28,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.COMMA_SPLIT_PATTERN'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 29,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.TELNET_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 19,
        "type": "error",
        "message": "The method 'telnet(Channel, String)' has a cognitive complexity of 24, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 36,
        "column": 19,
        "type": "error",
        "message": "The method 'telnet(Channel, String)' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 36,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 16,
        "type": "error",
        "message": "Local variable 'prompt' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "Local variable 'noprompt' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 9,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'message'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 40,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "Avoid variables with short names like i",
        "source": "ShortVariable"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "Local variable 'i' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 32,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 61,
        "column": 29,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 64,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 86,
        "column": 40,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 86,
        "column": 52,
        "type": "error",
        "message": "Parameter 'command' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 87,
        "column": 16,
        "type": "error",
        "message": "Local variable 'supportCommands' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 91,
        "column": 18,
        "type": "error",
        "message": "Local variable 'commands' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 92,
        "column": 21,
        "type": "error",
        "message": "Local variable 'c' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 94,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/TelnetUtils.java",
    "score": 0.0,
    "error_count": 31,
    "messages": [
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 27,
        "column": 26,
        "type": "error",
        "message": "The method 'toList(List<List<String>>)' has a cognitive complexity of 23, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 27,
        "column": 26,
        "type": "error",
        "message": "The method 'toList(List<List<String>>)' has a cyclomatic complexity of 10.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 27,
        "column": 52,
        "type": "error",
        "message": "Parameter 'table' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 28,
        "column": 15,
        "type": "error",
        "message": "Local variable 'widths' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 30,
        "column": 31,
        "type": "error",
        "message": "Local variable 'row' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 34,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 27,
        "type": "error",
        "message": "Local variable 'row' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 28,
        "type": "error",
        "message": "The String literal \"\\r\\n\" appears 6 times in this file; the first occurrence is on line 37",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 43,
        "column": 24,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 46,
        "column": 25,
        "type": "error",
        "message": "Local variable 'pad' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 43,
        "type": "error",
        "message": "Parameter 'header' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 70,
        "type": "error",
        "message": "Parameter 'table' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 26,
        "type": "error",
        "message": "The method 'toTable(List<String>, List<List<String>>)' has a NCSS line count of 66.",
        "source": "NcssCount"
      },
      {
        "line": 62,
        "column": 26,
        "type": "error",
        "message": "The method 'toTable(List<String>, List<List<String>>)' has a cognitive complexity of 42, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 62,
        "column": 26,
        "type": "error",
        "message": "The method 'toTable(List<String>, List<List<String>>)' has a cyclomatic complexity of 21.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 62,
        "column": 26,
        "type": "error",
        "message": "The method 'toTable(List<String>, List<List<String>>)' has an NPath complexity of 14256, current threshold is 200",
        "source": "NPathComplexity"
      },
      {
        "line": 62,
        "column": 47,
        "type": "error",
        "message": "Parameter 'header' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 74,
        "type": "error",
        "message": "Parameter 'table' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 15,
        "type": "error",
        "message": "Local variable 'widths' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 65,
        "column": 13,
        "type": "error",
        "message": "Local variable 'maxwidth' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 70,
        "column": 27,
        "type": "error",
        "message": "Local variable 'row' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 82,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 9,
        "type": "error",
        "message": "This for loop can be replaced by a foreach loop",
        "source": "ForLoopCanBeForeach"
      },
      {
        "line": 95,
        "column": 20,
        "type": "error",
        "message": "Local variable 'cell' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 98,
        "column": 17,
        "type": "error",
        "message": "Local variable 'pad' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 109,
        "column": 9,
        "type": "error",
        "message": "This for loop can be replaced by a foreach loop",
        "source": "ForLoopCanBeForeach"
      },
      {
        "line": 117,
        "column": 27,
        "type": "error",
        "message": "Local variable 'row' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 121,
        "column": 24,
        "type": "error",
        "message": "Local variable 'cell' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 137,
        "column": 21,
        "type": "error",
        "message": "Local variable 'pad' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 149,
        "column": 9,
        "type": "error",
        "message": "This for loop can be replaced by a foreach loop",
        "source": "ForLoopCanBeForeach"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/command/ClearTelnetHandler.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 34,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 42,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/command/ExitTelnetHandler.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/command/HelpTelnetHandler.java",
    "score": 0.0,
    "error_count": 21,
    "messages": [
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 46,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 54,
        "column": 49,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 56,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 58,
        "column": 23,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 14,
        "type": "error",
        "message": "Local variable 'help' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 60,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 61,
        "type": "error",
        "message": "The String literal \"\\r\\n\" appears 5 times in this file; the first occurrence is on line 62",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 70,
        "column": 20,
        "type": "error",
        "message": "The method 'generateForAllCommand(Channel)' has a cognitive complexity of 15, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 70,
        "column": 50,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 71,
        "column": 28,
        "type": "error",
        "message": "Local variable 'table' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 71,
        "column": 49,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 72,
        "column": 29,
        "type": "error",
        "message": "Local variable 'handlers' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 74,
        "column": 32,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 22,
        "type": "error",
        "message": "Local variable 'help' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 76,
        "column": 30,
        "type": "error",
        "message": "Local variable 'row' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 76,
        "column": 49,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 77,
        "column": 24,
        "type": "error",
        "message": "Local variable 'parameter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 79,
        "column": 24,
        "type": "error",
        "message": "Local variable 'summary' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/command/LogTelnetHandler.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 39,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 44,
        "column": 19,
        "type": "error",
        "message": "The method 'telnet(Channel, String)' has a cognitive complexity of 21, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 44,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 21,
        "type": "error",
        "message": "The initializer for variable 'size' is never used (overwritten on lines 61 and 85)",
        "source": "UnusedAssignment"
      },
      {
        "line": 46,
        "column": 14,
        "type": "error",
        "message": "Local variable 'file' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 47,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 22,
        "type": "error",
        "message": "Local variable 'str' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 13,
        "type": "error",
        "message": "Avoid if (x != y) ..; else ..;",
        "source": "ConfusingTernary"
      },
      {
        "line": 53,
        "column": 54,
        "type": "error",
        "message": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale",
        "source": "UseLocaleWithCaseConversions"
      },
      {
        "line": 55,
        "column": 21,
        "type": "error",
        "message": "Local variable 'showLogLength' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 44,
        "type": "error",
        "message": "Avoid variables with short names like bb",
        "source": "ShortVariable"
      },
      {
        "line": 67,
        "column": 41,
        "type": "error",
        "message": "Local variable 'pos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 40,
        "type": "error",
        "message": "Local variable 'content' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 76,
        "column": 62,
        "type": "error",
        "message": "Useless parentheses.",
        "source": "UselessParentheses"
      },
      {
        "line": 76,
        "column": 63,
        "type": "error",
        "message": "When instantiating a SimpleDateFormat object, specify a Locale",
        "source": "SimpleDateFormatNeedsLocale"
      },
      {
        "line": 81,
        "column": 30,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 85,
        "column": 28,
        "type": "error",
        "message": "The value assigned to variable 'size' is never used",
        "source": "UnusedAssignment"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/command/StatusTelnetHandler.java",
    "score": 0.0,
    "error_count": 37,
    "messages": [
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.COMMA_SPLIT_PATTERN'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.config.Constants.STATUS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 46,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 49,
        "column": 19,
        "type": "error",
        "message": "The method 'telnet(Channel, String)' has a cognitive complexity of 27, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 49,
        "column": 19,
        "type": "error",
        "message": "The method 'telnet(Channel, String)' has a cyclomatic complexity of 12.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 49,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 26,
        "type": "error",
        "message": "Local variable 'applicationModel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 40,
        "type": "error",
        "message": "Local variable 'extensionLoader' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 13,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 53,
        "column": 33,
        "type": "error",
        "message": "Local variable 'checkers' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 54,
        "column": 22,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 54,
        "column": 22,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 55,
        "column": 32,
        "type": "error",
        "message": "Local variable 'table' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 55,
        "column": 53,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 56,
        "column": 33,
        "type": "error",
        "message": "Local variable 'statuses' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 55,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 58,
        "column": 36,
        "type": "error",
        "message": "Local variable 'checker' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 28,
        "type": "error",
        "message": "Local variable 'name' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 67,
        "column": 71,
        "type": "error",
        "message": "Access to field `UNKNOWN` on foreign value `Status.Level` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 68,
        "column": 38,
        "type": "error",
        "message": "Local variable 'row' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 57,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 76,
        "column": 20,
        "type": "error",
        "message": "Local variable 'stat' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 26,
        "type": "error",
        "message": "Local variable 'row' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 45,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 82,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 84,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 86,
        "column": 16,
        "type": "error",
        "message": "Local variable 'status' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 87,
        "column": 29,
        "type": "error",
        "message": "Local variable 'statuses' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 87,
        "column": 51,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 89,
        "column": 22,
        "type": "error",
        "message": "Avoid variables with short names like ss",
        "source": "ShortVariable"
      },
      {
        "line": 89,
        "column": 22,
        "type": "error",
        "message": "Local variable 'ss' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 90,
        "column": 25,
        "type": "error",
        "message": "Local variable 's' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 91,
        "column": 31,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 36,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 101,
        "column": 16,
        "type": "error",
        "message": "Local variable 'stat' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractChannel.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 30,
        "column": 32,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 30,
        "column": 52,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 35,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 31,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractChannelHandlerDelegate.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 28,
        "column": 61,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 36,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 42,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 30,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 46,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java",
    "score": 0.0,
    "error_count": 76,
    "messages": [
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_CLIENT_THREADPOOL'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.THREADPOOL_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.THREAD_NAME_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.LAZY_CONNECT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 45,
        "column": 17,
        "type": "error",
        "message": "Possible God Class (WMC=62, ATFD=51, TCC=2.597%)",
        "source": "GodClass"
      },
      {
        "line": 45,
        "column": 81,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 47,
        "column": 35,
        "type": "error",
        "message": "Avoid excessively long variable names like CLIENT_THREAD_POOL_NAME",
        "source": "LongVariable"
      },
      {
        "line": 49,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 57,
        "column": 12,
        "type": "error",
        "message": "The constructor 'AbstractClient(URL, ChannelHandler)' has a cyclomatic complexity of 10.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 57,
        "column": 31,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 13,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.doOpen()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 66,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 67,
        "column": 13,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.close()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 69,
        "column": 17,
        "type": "error",
        "message": "The String literal \"Failed to start \" appears 4 times in this file; the first occurrence is on line 69",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 70,
        "column": 23,
        "type": "error",
        "message": "The String literal \" connect to the server \" appears 5 times in this file; the first occurrence is on line 70",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 70,
        "column": 51,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.getRemoteAddress()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 75,
        "column": 13,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.connect()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 77,
        "column": 132,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.getRemoteAddress()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 83,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 84,
        "column": 49,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.getRemoteAddress()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 91,
        "column": 17,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.close()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 94,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 95,
        "column": 51,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.getRemoteAddress()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 97,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 98,
        "column": 13,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.close()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 101,
        "column": 51,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractClient.getRemoteAddress()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 106,
        "column": 28,
        "type": "error",
        "message": "Avoid excessively long variable names like executorRepository",
        "source": "LongVariable"
      },
      {
        "line": 106,
        "column": 28,
        "type": "error",
        "message": "Local variable 'executorRepository' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 115,
        "column": 9,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'url'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 120,
        "column": 60,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 120,
        "column": 80,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 130,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 132,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 139,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 141,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 148,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 149,
        "column": 9,
        "type": "error",
        "message": "This if statement can be replaced by `return !{condition} || {elseBranch};`",
        "source": "SimplifyBooleanReturns"
      },
      {
        "line": 150,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 156,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 159,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 165,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 166,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 174,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 175,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 183,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 184,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 185,
        "column": 9,
        "type": "error",
        "message": "This if statement can be replaced by `return !{condition} || {elseBranch};`",
        "source": "SimplifyBooleanReturns"
      },
      {
        "line": 186,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 192,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 192,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 196,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 204,
        "column": 20,
        "type": "error",
        "message": "The method 'connect()' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 209,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 213,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 213,
        "column": 84,
        "type": "error",
        "message": "The String literal \" from \" appears 6 times in this file; the first occurrence is on line 213",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 214,
        "column": 49,
        "type": "error",
        "message": "The String literal \" using dubbo version \" appears 6 times in this file; the first occurrence is on line 214",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 220,
        "column": 13,
        "type": "error",
        "message": "Avoid if (x != y) ..; else ..;",
        "source": "ConfusingTernary"
      },
      {
        "line": 233,
        "column": 11,
        "type": "error",
        "message": "A catch statement that catches an exception only to rethrow it should be avoided.",
        "source": "AvoidRethrowingException"
      },
      {
        "line": 236,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 250,
        "column": 25,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 254,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 255,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 259,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 260,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 281,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 282,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 288,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 294,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 295,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 300,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 301,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 306,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 307,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractCodec.java",
    "score": 0.0,
    "error_count": 25,
    "messages": [
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.SIDE_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 42,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 50,
        "column": 50,
        "type": "error",
        "message": "Parameter 'frameworkModel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 54,
        "column": 48,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 54,
        "column": 62,
        "type": "error",
        "message": "Parameter 'size' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 13,
        "type": "error",
        "message": "Local variable 'payload' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 17,
        "type": "error",
        "message": "Local variable 'overPayload' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 41,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 58,
        "column": 41,
        "type": "error",
        "message": "Local variable 'e' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 65,
        "column": 45,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 72,
        "column": 48,
        "type": "error",
        "message": "Parameter 'payload' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 62,
        "type": "error",
        "message": "Parameter 'size' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 76,
        "column": 54,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 80,
        "column": 54,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 84,
        "column": 54,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 44,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 16,
        "type": "error",
        "message": "Local variable 'side' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 91,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 93,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 95,
        "column": 31,
        "type": "error",
        "message": "Local variable 'address' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 96,
        "column": 17,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 97,
        "column": 21,
        "type": "error",
        "message": "Local variable 'isClient' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 107,
        "column": 44,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractEndpoint.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 31,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.rpc.model.ScopeModelUtil.getFrameworkModel'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 44,
        "column": 33,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 44,
        "column": 53,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 49,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 56,
        "column": 24,
        "type": "error",
        "message": "Local variable 'frameworkModel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 60,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 68,
        "column": 27,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 76,
        "column": 21,
        "type": "error",
        "message": "Avoid variables with short names like t",
        "source": "ShortVariable"
      },
      {
        "line": 76,
        "column": 21,
        "type": "error",
        "message": "Local variable 't' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 82,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 89,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 90,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 95,
        "column": 58,
        "type": "error",
        "message": "Parameter 'parameters' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractPeer.java",
    "score": 0.5,
    "error_count": 19,
    "messages": [
      {
        "line": 40,
        "column": 29,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 49,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 31,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 122,
        "column": 35,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 122,
        "column": 35,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 130,
        "column": 38,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 130,
        "column": 38,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 135,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 135,
        "column": 30,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 135,
        "column": 41,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 34,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 143,
        "column": 34,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 45,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 151,
        "column": 32,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 151,
        "column": 32,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 151,
        "column": 46,
        "type": "error",
        "message": "Avoid variables with short names like ex",
        "source": "ShortVariable"
      },
      {
        "line": 151,
        "column": 46,
        "type": "error",
        "message": "Parameter 'ex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractServer.java",
    "score": 0.0,
    "error_count": 45,
    "messages": [
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.ANYHOST_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.ANYHOST_VALUE'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.ACCEPTS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.DEFAULT_ACCEPTS'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 47,
        "column": 35,
        "type": "error",
        "message": "Avoid excessively long variable names like SERVER_THREAD_POOL_NAME",
        "source": "LongVariable"
      },
      {
        "line": 48,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 49,
        "column": 34,
        "type": "error",
        "message": "Field 'executors' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 50,
        "column": 31,
        "type": "error",
        "message": "Field 'localAddress' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 51,
        "column": 31,
        "type": "error",
        "message": "Field 'bindAddress' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 54,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like executorRepository",
        "source": "LongVariable"
      },
      {
        "line": 54,
        "column": 32,
        "type": "error",
        "message": "Field 'executorRepository' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 56,
        "column": 31,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 56,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 13,
        "type": "error",
        "message": "Local variable 'bindPort' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 13,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractServer.doOpen()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 71,
        "column": 80,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractServer.getBindAddress()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 71,
        "column": 113,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractServer.getLocalAddress()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 73,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 75,
        "column": 32,
        "type": "error",
        "message": "Overridable method called during object construction: AbstractServer.getLocalAddress()",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 85,
        "column": 27,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 21,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 92,
        "column": 21,
        "type": "error",
        "message": "Local variable 'a' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 97,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 98,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 101,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 108,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 109,
        "column": 29,
        "type": "error",
        "message": "Local variable 'channels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 110,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 123,
        "column": 30,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 129,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 130,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 135,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 136,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 141,
        "column": 27,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 142,
        "column": 30,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 162,
        "column": 35,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 162,
        "column": 35,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 167,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 171,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 179,
        "column": 38,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 179,
        "column": 38,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 180,
        "column": 29,
        "type": "error",
        "message": "Local variable 'channels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 182,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/ChannelDelegate.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 36,
        "column": 36,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 9,
        "type": "error",
        "message": "Overridable method called during object construction: ChannelDelegate.setChannel(*Channel)",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 44,
        "column": 36,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 77,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 82,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 87,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 97,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 97,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 102,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 112,
        "column": 27,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/ChannelHandlerAdapter.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/ChannelHandlerDispatcher.java",
    "score": 0.0,
    "error_count": 28,
    "messages": [
      {
        "line": 34,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 41,
        "column": 55,
        "type": "error",
        "message": "Parameter 'handlers' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 64,
        "type": "error",
        "message": "Parameter 'handlers' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 70,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 73,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 29,
        "type": "error",
        "message": "Local variable 'listener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 70,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 71,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 77,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 29,
        "type": "error",
        "message": "Local variable 'listener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 82,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 88,
        "column": 30,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 46,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 29,
        "type": "error",
        "message": "Local variable 'listener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 92,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 93,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 99,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 29,
        "type": "error",
        "message": "Local variable 'listener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 103,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 104,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 110,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 29,
        "type": "error",
        "message": "Local variable 'listener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 114,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 115,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/ClientDelegate.java",
    "score": 2.5,
    "error_count": 15,
    "messages": [
      {
        "line": 29,
        "column": 47,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 36,
        "column": 34,
        "type": "error",
        "message": "Parameter 'client' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 9,
        "type": "error",
        "message": "Overridable method called during object construction: ClientDelegate.setClient(*Client)",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 44,
        "column": 34,
        "type": "error",
        "message": "Parameter 'client' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 27,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 58,
        "type": "error",
        "message": "Parameter 'parameters' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 93,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 103,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 128,
        "column": 27,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/CodecSupport.java",
    "score": 0.0,
    "error_count": 58,
    "messages": [
      {
        "line": 43,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.BaseServiceMetadata.keyWithoutGroup'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 45,
        "column": 8,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 46,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 47,
        "column": 45,
        "type": "error",
        "message": "Avoid excessively long variable names like ID_SERIALIZATION_MAP",
        "source": "LongVariable"
      },
      {
        "line": 47,
        "column": 45,
        "type": "error",
        "message": "The static field name 'ID_SERIALIZATION_MAP' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 47,
        "column": 79,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 48,
        "column": 38,
        "type": "error",
        "message": "Avoid excessively long variable names like ID_SERIALIZATIONNAME_MAP",
        "source": "LongVariable"
      },
      {
        "line": 48,
        "column": 38,
        "type": "error",
        "message": "The static field name 'ID_SERIALIZATIONNAME_MAP' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 48,
        "column": 76,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 49,
        "column": 38,
        "type": "error",
        "message": "Avoid excessively long variable names like SERIALIZATIONNAME_ID_MAP",
        "source": "LongVariable"
      },
      {
        "line": 49,
        "column": 38,
        "type": "error",
        "message": "The static field name 'SERIALIZATIONNAME_ID_MAP' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 49,
        "column": 76,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 51,
        "column": 38,
        "type": "error",
        "message": "The static field name 'ID_NULLBYTES_MAP' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 56,
        "column": 40,
        "type": "error",
        "message": "Local variable 'extensionLoader' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 57,
        "column": 21,
        "type": "error",
        "message": "Avoid excessively long variable names like supportedExtensions",
        "source": "LongVariable"
      },
      {
        "line": 57,
        "column": 21,
        "type": "error",
        "message": "Local variable 'supportedExtensions' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 21,
        "type": "error",
        "message": "Local variable 'name' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 27,
        "type": "error",
        "message": "Local variable 'serialization' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 60,
        "column": 18,
        "type": "error",
        "message": "Local variable 'idByte' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 77,
        "column": 59,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 77,
        "column": 59,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 43,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 85,
        "column": 54,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 90,
        "column": 64,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 90,
        "column": 64,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 91,
        "column": 23,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 98,
        "column": 47,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 64,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 98,
        "column": 64,
        "type": "error",
        "message": "Parameter 'is' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 73,
        "type": "error",
        "message": "Parameter 'proto' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 23,
        "type": "error",
        "message": "Avoid variables with short names like s",
        "source": "ShortVariable"
      },
      {
        "line": 99,
        "column": 23,
        "type": "error",
        "message": "Local variable 's' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 110,
        "column": 55,
        "type": "error",
        "message": "Avoid variables with short names like s",
        "source": "ShortVariable"
      },
      {
        "line": 110,
        "column": 55,
        "type": "error",
        "message": "Parameter 's' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 35,
        "type": "error",
        "message": "Local variable 'baos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 116,
        "column": 30,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 121,
        "column": 22,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 122,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 135,
        "column": 49,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 135,
        "column": 49,
        "type": "error",
        "message": "Parameter 'is' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 136,
        "column": 31,
        "type": "error",
        "message": "Local variable 'baos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 137,
        "column": 16,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 139,
        "column": 16,
        "type": "error",
        "message": "Avoid assignments in operands",
        "source": "AssignmentInOperand"
      },
      {
        "line": 146,
        "column": 41,
        "type": "error",
        "message": "Parameter 'size' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 147,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 149,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 161,
        "column": 46,
        "type": "error",
        "message": "Parameter 'payload' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 161,
        "column": 60,
        "type": "error",
        "message": "Parameter 'proto' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 70,
        "type": "error",
        "message": "Parameter 'serviceRepository' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 96,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 109,
        "type": "error",
        "message": "Parameter 'version' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 165,
        "column": 123,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 165,
        "column": 123,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 166,
        "column": 19,
        "type": "error",
        "message": "Local variable 'urls' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 171,
        "column": 22,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 172,
        "column": 24,
        "type": "error",
        "message": "Local variable 'serializationName' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 173,
        "column": 22,
        "type": "error",
        "message": "Local variable 'localId' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/DecodeHandler.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 31,
        "column": 33,
        "type": "error",
        "message": "The constant name 'log' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 33,
        "column": 41,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 54,
        "column": 32,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/ExceedPayloadLimitException.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 24,
        "column": 47,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/MultiMessageHandler.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 31,
        "column": 35,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 33,
        "column": 47,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 26,
        "type": "error",
        "message": "Local variable 'list' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 25,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 45,
        "column": 36,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 49,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/ServerDelegate.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 40,
        "column": 42,
        "type": "error",
        "message": "Parameter 'server' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 9,
        "type": "error",
        "message": "Overridable method called during object construction: ServerDelegate.setServer(*RemotingServer)",
        "source": "ConstructorCallsOverridableMethod"
      },
      {
        "line": 48,
        "column": 42,
        "type": "error",
        "message": "Parameter 'server' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 27,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 58,
        "type": "error",
        "message": "Parameter 'parameters' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 74,
        "column": 49,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 94,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 109,
        "column": 27,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/codec/CodecAdapter.java",
    "score": 2.5,
    "error_count": 15,
    "messages": [
      {
        "line": 32,
        "column": 19,
        "type": "error",
        "message": "Field 'codec' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 34,
        "column": 31,
        "type": "error",
        "message": "Parameter 'codec' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 55,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 70,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 37,
        "type": "error",
        "message": "Avoid variables with short names like os",
        "source": "ShortVariable"
      },
      {
        "line": 42,
        "column": 37,
        "type": "error",
        "message": "Local variable 'os' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 48,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 57,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 13,
        "type": "error",
        "message": "Local variable 'savedReaderIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 36,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 52,
        "column": 36,
        "type": "error",
        "message": "Local variable 'is' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 16,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 55,
        "column": 50,
        "type": "error",
        "message": "Access to field `NEED_MORE_INPUT` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/codec/TransportCodec.java",
    "score": 0.0,
    "error_count": 20,
    "messages": [
      {
        "line": 38,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 41,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 55,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 70,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 22,
        "type": "error",
        "message": "Ensure that resources like this OutputStream object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 42,
        "column": 22,
        "type": "error",
        "message": "Local variable 'output' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 22,
        "type": "error",
        "message": "Local variable 'objectOutput' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 57,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 21,
        "type": "error",
        "message": "Ensure that resources like this InputStream object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 53,
        "column": 21,
        "type": "error",
        "message": "Local variable 'input' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 54,
        "column": 21,
        "type": "error",
        "message": "Local variable 'objectInput' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 55,
        "column": 16,
        "type": "error",
        "message": "Local variable 'object' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 61,
        "type": "error",
        "message": "Parameter 'output' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 76,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 62,
        "type": "error",
        "message": "Parameter 'input' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 70,
        "column": 44,
        "type": "error",
        "message": "Parameter 'output' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 70,
        "column": 59,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 74,
        "column": 45,
        "type": "error",
        "message": "Parameter 'input' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 19,
        "type": "error",
        "message": "Thrown exception does not preserve the stack trace of exception 'e' on all code paths",
        "source": "PreserveStackTrace"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/ChannelEventRunnable.java",
    "score": 0.0,
    "error_count": 33,
    "messages": [
      {
        "line": 25,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 33,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 65,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 87,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 65,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 87,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 101,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 65,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 87,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 104,
        "type": "error",
        "message": "Avoid variables with short names like t",
        "source": "ShortVariable"
      },
      {
        "line": 41,
        "column": 104,
        "type": "error",
        "message": "Parameter 't' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 65,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 87,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 101,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 120,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 54,
        "column": 17,
        "type": "error",
        "message": "The method 'run()' has a cognitive complexity of 18, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 54,
        "column": 17,
        "type": "error",
        "message": "The method 'run()' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 58,
        "column": 22,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 59,
        "column": 29,
        "type": "error",
        "message": "The String literal \"ChannelEventRunnable handle \" appears 5 times in this file; the first occurrence is on line 59",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 59,
        "column": 70,
        "type": "error",
        "message": "The String literal \" operation error, channel is \" appears 5 times in this file; the first occurrence is on line 59",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 67,
        "column": 26,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 68,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 74,
        "column": 26,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 75,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 81,
        "column": 26,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 82,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 89,
        "column": 26,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 90,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 95,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/ChannelHandlers.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 27,
        "column": 36,
        "type": "error",
        "message": "The static field name 'INSTANCE' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 32,
        "column": 54,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 32,
        "column": 67,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 16,
        "type": "error",
        "message": "Unnecessary qualifier 'ChannelHandlers': 'getInstance' is already in scope",
        "source": "UnnecessaryFullyQualifiedName"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'setTestingChannelHandlers(ChannelHandlers)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 40,
        "column": 59,
        "type": "error",
        "message": "Parameter 'instance' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 44,
        "column": 58,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 44,
        "column": 71,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/WrappedChannelHandler.java",
    "score": 0.0,
    "error_count": 27,
    "messages": [
      {
        "line": 37,
        "column": 35,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 43,
        "column": 49,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 62,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 63,
        "column": 30,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 63,
        "column": 46,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 68,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 68,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 73,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 73,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 77,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 77,
        "column": 58,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 77,
        "column": 77,
        "type": "error",
        "message": "Avoid variables with short names like t",
        "source": "ShortVariable"
      },
      {
        "line": 77,
        "column": 77,
        "type": "error",
        "message": "Parameter 't' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 83,
        "column": 16,
        "type": "error",
        "message": "Local variable 'msg' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 96,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 114,
        "column": 63,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 116,
        "column": 22,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 117,
        "column": 27,
        "type": "error",
        "message": "Local variable 'responseFuture' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 120,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 126,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 142,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 146,
        "column": 26,
        "type": "error",
        "message": "Local variable 'applicationModel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 148,
        "column": 28,
        "type": "error",
        "message": "Avoid excessively long variable names like executorRepository",
        "source": "LongVariable"
      },
      {
        "line": 148,
        "column": 28,
        "type": "error",
        "message": "Local variable 'executorRepository' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/all/AllChannelHandler.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 34,
        "column": 45,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 58,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 49,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 59,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 64,
        "column": 46,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 73,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 73,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 74,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/all/AllDispatcher.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 31,
        "column": 64,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/connection/ConnectionOrderedChannelHandler.java",
    "score": 0.0,
    "error_count": 26,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_THREAD_NAME'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.THREAD_NAME_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.CONNECT_QUEUE_CAPACITY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.CONNECT_QUEUE_WARNING_SIZE'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 41,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.DEFAULT_CONNECT_QUEUE_WARNING_SIZE'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 45,
        "column": 40,
        "type": "error",
        "message": "Avoid excessively long variable names like connectionExecutor",
        "source": "LongVariable"
      },
      {
        "line": 48,
        "column": 59,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 72,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 16,
        "type": "error",
        "message": "Local variable 'threadName' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 61,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 71,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 75,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 81,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 82,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 86,
        "column": 47,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 95,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 95,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 96,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 99,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 105,
        "column": 13,
        "type": "error",
        "message": "Call to `getQueue` on foreign value `connectionExecutor` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 106,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 106,
        "column": 108,
        "type": "error",
        "message": "Call to `getQueue` on foreign value `connectionExecutor` (degree 1)",
        "source": "LawOfDemeter"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/connection/ConnectionOrderedDispatcher.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 31,
        "column": 64,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/direct/DirectChannelHandler.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 33,
        "column": 48,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 61,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/direct/DirectDispatcher.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 31,
        "column": 64,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/execution/ExecutionChannelHandler.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 39,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 64,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 44,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 44,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 54,
        "column": 21,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/execution/ExecutionDispatcher.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 31,
        "column": 64,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/message/MessageOnlyChannelHandler.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 34,
        "column": 53,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 66,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 44,
        "column": 46,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/message/MessageOnlyDispatcher.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 31,
        "column": 64,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/utils/PayloadDropper.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 24,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 33,
        "column": 55,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 35,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 38,
        "column": 21,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 42,
        "column": 22,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/utils/UrlUtils.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 23,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 24,
        "column": 42,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 25,
        "column": 13,
        "type": "error",
        "message": "Local variable 'heartBeat' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 27,
        "column": 13,
        "type": "error",
        "message": "Local variable 'idleTimeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 34,
        "column": 40,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/zookeeper/AbstractZookeeperClient.java",
    "score": 0.0,
    "error_count": 54,
    "messages": [
      {
        "line": 32,
        "column": 47,
        "type": "error",
        "message": "Generics names should be a one letter long and upper case.",
        "source": "GenericsNaming"
      },
      {
        "line": 32,
        "column": 67,
        "type": "error",
        "message": "Generics names should be a one letter long and upper case.",
        "source": "GenericsNaming"
      },
      {
        "line": 32,
        "column": 115,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 34,
        "column": 35,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 37,
        "column": 19,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_CONNECTION_TIMEOUT_MS",
        "source": "LongVariable"
      },
      {
        "line": 37,
        "column": 19,
        "type": "error",
        "message": "The field name 'DEFAULT_CONNECTION_TIMEOUT_MS' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 38,
        "column": 19,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_SESSION_TIMEOUT_MS",
        "source": "LongVariable"
      },
      {
        "line": 38,
        "column": 19,
        "type": "error",
        "message": "The field name 'DEFAULT_SESSION_TIMEOUT_MS' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 50,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like persistentExistNodePath",
        "source": "LongVariable"
      },
      {
        "line": 52,
        "column": 40,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 31,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 70,
        "column": 31,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 70,
        "column": 45,
        "type": "error",
        "message": "Parameter 'ephemeral' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 73,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 80,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like i",
        "source": "ShortVariable"
      },
      {
        "line": 80,
        "column": 13,
        "type": "error",
        "message": "Local variable 'i' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 93,
        "column": 48,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 51,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 107,
        "column": 49,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 108,
        "column": 59,
        "type": "error",
        "message": "Local variable 'listeners' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 109,
        "column": 29,
        "type": "error",
        "message": "Local variable 'targetListener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 114,
        "column": 40,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 114,
        "column": 59,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 119,
        "column": 40,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 119,
        "column": 59,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 119,
        "column": 78,
        "type": "error",
        "message": "Parameter 'executor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 120,
        "column": 57,
        "type": "error",
        "message": "Local variable 'dataListenerMap' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 121,
        "column": 28,
        "type": "error",
        "message": "Local variable 'targetListener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 126,
        "column": 43,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 126,
        "column": 62,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 127,
        "column": 57,
        "type": "error",
        "message": "Local variable 'dataListenerMap' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 129,
        "column": 32,
        "type": "error",
        "message": "Local variable 'targetListener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 137,
        "column": 44,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 137,
        "column": 64,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 138,
        "column": 59,
        "type": "error",
        "message": "Local variable 'listeners' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 140,
        "column": 33,
        "type": "error",
        "message": "Local variable 'targetListener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 147,
        "column": 37,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 148,
        "column": 28,
        "type": "error",
        "message": "Local variable 'sessionListener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 161,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 162,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 167,
        "column": 31,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 167,
        "column": 44,
        "type": "error",
        "message": "Parameter 'content' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 167,
        "column": 61,
        "type": "error",
        "message": "Parameter 'ephemeral' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 171,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like i",
        "source": "ShortVariable"
      },
      {
        "line": 171,
        "column": 13,
        "type": "error",
        "message": "Local variable 'i' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 183,
        "column": 39,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 183,
        "column": 52,
        "type": "error",
        "message": "Parameter 'content' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 183,
        "column": 69,
        "type": "error",
        "message": "Parameter 'ephemeral' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 183,
        "column": 84,
        "type": "error",
        "message": "Parameter 'version' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 184,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like i",
        "source": "ShortVariable"
      },
      {
        "line": 184,
        "column": 13,
        "type": "error",
        "message": "Local variable 'i' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 196,
        "column": 37,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 198,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 204,
        "column": 44,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/zookeeper/AbstractZookeeperTransporter.java",
    "score": 0.0,
    "error_count": 30,
    "messages": [
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 41,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 42,
        "column": 48,
        "type": "error",
        "message": "Avoid excessively long variable names like zookeeperClientMap",
        "source": "LongVariable"
      },
      {
        "line": 53,
        "column": 40,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 56,
        "column": 22,
        "type": "error",
        "message": "Local variable 'addressList' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 13,
        "type": "error",
        "message": "Avoid assignments in operands",
        "source": "AssignmentInOperand"
      },
      {
        "line": 59,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 60,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 64,
        "column": 17,
        "type": "error",
        "message": "Avoid assignments in operands",
        "source": "AssignmentInOperand"
      },
      {
        "line": 65,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 70,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 92,
        "column": 76,
        "type": "error",
        "message": "Parameter 'addressList' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 94,
        "column": 21,
        "type": "error",
        "message": "Local variable 'address' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 17,
        "type": "error",
        "message": "Avoid assignments in operands",
        "source": "AssignmentInOperand"
      },
      {
        "line": 112,
        "column": 49,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 22,
        "type": "error",
        "message": "Local variable 'addressList' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 119,
        "column": 27,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 130,
        "column": 26,
        "type": "error",
        "message": "Local variable 'authedAddressList' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 131,
        "column": 25,
        "type": "error",
        "message": "Local variable 'addr' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 134,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 146,
        "column": 10,
        "type": "error",
        "message": "Missing commented default access modifier on method 'writeToClientMap(List<String>, ZookeeperClient)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 146,
        "column": 40,
        "type": "error",
        "message": "Parameter 'addressList' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 146,
        "column": 69,
        "type": "error",
        "message": "Parameter 'zookeeperClient' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 147,
        "column": 21,
        "type": "error",
        "message": "Local variable 'address' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 158,
        "column": 9,
        "type": "error",
        "message": "Missing commented default access modifier on method 'toClientURL(URL)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 158,
        "column": 25,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 159,
        "column": 29,
        "type": "error",
        "message": "Local variable 'parameterMap' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 184,
        "column": 30,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/zookeeper/EventType.java",
    "score": 5.5,
    "error_count": 9,
    "messages": [
      {
        "line": 23,
        "column": 5,
        "type": "error",
        "message": "The enum constant name 'None' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 24,
        "column": 5,
        "type": "error",
        "message": "The enum constant name 'NodeCreated' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 25,
        "column": 5,
        "type": "error",
        "message": "The enum constant name 'NodeDeleted' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 26,
        "column": 5,
        "type": "error",
        "message": "The enum constant name 'NodeDataChanged' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 27,
        "column": 5,
        "type": "error",
        "message": "Avoid excessively long variable names like NodeChildrenChanged",
        "source": "LongVariable"
      },
      {
        "line": 27,
        "column": 5,
        "type": "error",
        "message": "The enum constant name 'NodeChildrenChanged' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 28,
        "column": 5,
        "type": "error",
        "message": "Avoid excessively long variable names like CONNECTION_SUSPENDED",
        "source": "LongVariable"
      },
      {
        "line": 29,
        "column": 5,
        "type": "error",
        "message": "Avoid excessively long variable names like CONNECTION_RECONNECTED",
        "source": "LongVariable"
      },
      {
        "line": 37,
        "column": 19,
        "type": "error",
        "message": "Parameter 'intValue' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/zookeeper/StateListener.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 29,
        "column": 9,
        "type": "error",
        "message": "Avoid excessively long variable names like NEW_SESSION_CREATED",
        "source": "LongVariable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/zookeeper/ZookeeperClient.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 28,
        "column": 34,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/zookeeper/ZookeeperTransporter.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 36,
        "column": 63,
        "type": "error",
        "message": "Parameter 'applicationModel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 47,
        "type": "error",
        "message": "Local variable 'extensionLoader' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/ChanelHandlerTest.java",
    "score": 0.0,
    "error_count": 26,
    "messages": [
      {
        "line": 28,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 29,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 40,
        "column": 34,
        "type": "error",
        "message": "The method 'initClient(String)' has a cyclomatic complexity of 10.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 40,
        "column": 52,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 31,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 48,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 50,
        "column": 17,
        "type": "error",
        "message": "Empty if statement",
        "source": "EmptyControlStatement"
      },
      {
        "line": 54,
        "column": 21,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 60,
        "column": 21,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 70,
        "column": 51,
        "type": "error",
        "message": "Parameter 'client' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 77,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 77,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 87,
        "column": 13,
        "type": "error",
        "message": "Local variable 'sleep' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 90,
        "column": 24,
        "type": "error",
        "message": "Local variable 'exchangeClient' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'PeformanceTestHandler'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 96,
        "column": 16,
        "type": "error",
        "message": "Missing commented default access modifier on field 'url'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 96,
        "column": 22,
        "type": "error",
        "message": "The field initializer for 'url' is never used (overwritten on line 102)",
        "source": "UnusedAssignment"
      },
      {
        "line": 101,
        "column": 16,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 101,
        "column": 45,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 39,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 107,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 111,
        "column": 42,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 112,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/MockTransporter.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 23,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 24,
        "column": 28,
        "type": "error",
        "message": "Field 'server' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 25,
        "column": 20,
        "type": "error",
        "message": "Field 'client' may be declared final",
        "source": "ImmutableField"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/PerformanceClientCloseTest.java",
    "score": 0.0,
    "error_count": 23,
    "messages": [
      {
        "line": 29,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 30,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 41,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 41,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 41,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has a cognitive complexity of 34, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 64,
        "column": 29,
        "type": "error",
        "message": "The method 'run()' has a cognitive complexity of 17, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 64,
        "column": 29,
        "type": "error",
        "message": "The method 'run()' is missing an @Override annotation.",
        "source": "MissingOverride"
      },
      {
        "line": 69,
        "column": 33,
        "type": "error",
        "message": "Avoid variables with short names like c",
        "source": "ShortVariable"
      },
      {
        "line": 69,
        "column": 33,
        "type": "error",
        "message": "Local variable 'c' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 71,
        "column": 33,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 73,
        "column": 34,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 75,
        "column": 29,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 76,
        "column": 29,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 77,
        "column": 33,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 78,
        "column": 33,
        "type": "error",
        "message": "System.exit() should not be used in J2EE/JEE apps",
        "source": "DoNotTerminateVM"
      },
      {
        "line": 79,
        "column": 40,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 81,
        "column": 40,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 83,
        "column": 50,
        "type": "error",
        "message": "Number 30000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 84,
        "column": 35,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 100,
        "column": 19,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/PerformanceClientFixedTest.java",
    "score": 0.0,
    "error_count": 49,
    "messages": [
      {
        "line": 30,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 32,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.CONNECTIONS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 34,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 34,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 36,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has a NCSS line count of 65.",
        "source": "NcssCount"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has a cognitive complexity of 27, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has a cyclomatic complexity of 16.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has an NPath complexity of 560, current threshold is 200",
        "source": "NPathComplexity"
      },
      {
        "line": 58,
        "column": 16,
        "type": "error",
        "message": "Avoid variables with short names like rd",
        "source": "ShortVariable"
      },
      {
        "line": 58,
        "column": 16,
        "type": "error",
        "message": "Local variable 'rd' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 9,
        "type": "error",
        "message": "Avoid using implementation types like 'ArrayList'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 59,
        "column": 35,
        "type": "error",
        "message": "Local variable 'arrays' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 57,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 60,
        "column": 28,
        "type": "error",
        "message": "The initializer for variable 'oneKBlock' is never used (overwritten on line 99)",
        "source": "UnusedAssignment"
      },
      {
        "line": 62,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like s",
        "source": "ShortVariable"
      },
      {
        "line": 63,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like f",
        "source": "ShortVariable"
      },
      {
        "line": 64,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 68,
        "column": 17,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 72,
        "column": 17,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 77,
        "column": 21,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 79,
        "column": 21,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 81,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 82,
        "column": 17,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 86,
        "column": 21,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 92,
        "column": 23,
        "type": "error",
        "message": "Local variable 'sb1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 93,
        "column": 16,
        "type": "error",
        "message": "Local variable 'rd2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 94,
        "column": 16,
        "type": "error",
        "message": "Local variable 'numbersAndLetters' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 13,
        "type": "error",
        "message": "Local variable 'size1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 103,
        "column": 24,
        "type": "error",
        "message": "Local variable 'size' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 105,
        "column": 21,
        "type": "error",
        "message": "The local variable name 'request_size' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "LocalVariableNamingConventions"
      },
      {
        "line": 105,
        "column": 36,
        "type": "error",
        "message": "The initializer for variable 'request_size' is never used (overwritten on lines 105, 107 and 109)",
        "source": "UnusedAssignment"
      },
      {
        "line": 108,
        "column": 36,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 113,
        "column": 35,
        "type": "error",
        "message": "Avoid variables with short names like sb",
        "source": "ShortVariable"
      },
      {
        "line": 113,
        "column": 35,
        "type": "error",
        "message": "Local variable 'sb' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 119,
        "column": 21,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 121,
        "column": 21,
        "type": "error",
        "message": "Local variable 'index' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 122,
        "column": 32,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 124,
        "column": 24,
        "type": "error",
        "message": "Local variable 'output' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 127,
        "column": 21,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 128,
        "column": 31,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      },
      {
        "line": 131,
        "column": 25,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 131,
        "column": 25,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 133,
        "column": 15,
        "type": "error",
        "message": "Exception thrown at line 128 is caught in this block.",
        "source": "ExceptionAsFlowControl"
      },
      {
        "line": 133,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 134,
        "column": 17,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/PerformanceClientMain.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 23,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/PerformanceClientTest.java",
    "score": 0.0,
    "error_count": 62,
    "messages": [
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.CONNECTIONS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 45,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 45,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 47,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has a NCSS line count of 82.",
        "source": "NcssCount"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has a cognitive complexity of 44, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has a cyclomatic complexity of 12.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "The method 'testClient()' has an NPath complexity of 30720, current threshold is 200",
        "source": "NPathComplexity"
      },
      {
        "line": 64,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like r",
        "source": "ShortVariable"
      },
      {
        "line": 64,
        "column": 13,
        "type": "error",
        "message": "Local variable 'r' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 64,
        "column": 57,
        "type": "error",
        "message": "Number 10000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 76,
        "column": 22,
        "type": "error",
        "message": "Local variable 'serverEnvironment' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 22,
        "type": "error",
        "message": "Local variable 'serverScene' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 80,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 96,
        "column": 29,
        "type": "error",
        "message": "The method 'run()' has a cognitive complexity of 15, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 96,
        "column": 29,
        "type": "error",
        "message": "The method 'run()' is missing an @Override annotation.",
        "source": "MissingOverride"
      },
      {
        "line": 98,
        "column": 39,
        "type": "error",
        "message": "Local variable 'index' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 99,
        "column": 30,
        "type": "error",
        "message": "Local variable 'init' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 103,
        "column": 48,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 38,
        "type": "error",
        "message": "Local variable 'start' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 105,
        "column": 40,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 106,
        "column": 38,
        "type": "error",
        "message": "Local variable 'end' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 111,
        "column": 31,
        "type": "error",
        "message": "Exception thrown at line 108 is caught in this block.",
        "source": "ExceptionAsFlowControl"
      },
      {
        "line": 111,
        "column": 38,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 113,
        "column": 33,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 114,
        "column": 37,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 115,
        "column": 37,
        "type": "error",
        "message": "System.exit() should not be used in J2EE/JEE apps",
        "source": "DoNotTerminateVM"
      },
      {
        "line": 116,
        "column": 44,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 118,
        "column": 44,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 120,
        "column": 54,
        "type": "error",
        "message": "Number 30000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 121,
        "column": 39,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 136,
        "column": 25,
        "type": "error",
        "message": "The method 'run()' is missing an @Override annotation.",
        "source": "MissingOverride"
      },
      {
        "line": 138,
        "column": 38,
        "type": "error",
        "message": "Local variable 'dateFormat' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 138,
        "column": 51,
        "type": "error",
        "message": "When instantiating a SimpleDateFormat object, specify a Locale",
        "source": "SimpleDateFormatNeedsLocale"
      },
      {
        "line": 140,
        "column": 26,
        "type": "error",
        "message": "Local variable 'sleepTime' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 141,
        "column": 26,
        "type": "error",
        "message": "Local variable 'elapsd' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 144,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like c",
        "source": "ShortVariable"
      },
      {
        "line": 144,
        "column": 30,
        "type": "error",
        "message": "Local variable 'c' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 146,
        "column": 29,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 146,
        "column": 29,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 152,
        "column": 26,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 153,
        "column": 21,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 160,
        "column": 29,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 166,
        "column": 14,
        "type": "error",
        "message": "Local variable 'total' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 167,
        "column": 14,
        "type": "error",
        "message": "Local variable 'failed' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 168,
        "column": 14,
        "type": "error",
        "message": "Local variable 'succeeded' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 169,
        "column": 14,
        "type": "error",
        "message": "Local variable 'elapsed' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 170,
        "column": 14,
        "type": "error",
        "message": "Local variable 'allElapsed' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 171,
        "column": 14,
        "type": "error",
        "message": "Local variable 'clientElapsed' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 186,
        "column": 21,
        "type": "error",
        "message": "Local variable 'item' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 190,
        "column": 22,
        "type": "error",
        "message": "Local variable 'clientEnvironment' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 191,
        "column": 21,
        "type": "error",
        "message": "Local variable 'item' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 197,
        "column": 21,
        "type": "error",
        "message": "Local variable 'item' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 219,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'PeformanceTestHandler'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 222,
        "column": 39,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 223,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 227,
        "column": 42,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 228,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/PerformanceServerMain.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 22,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 24,
        "column": 44,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/PerformanceServerTest.java",
    "score": 0.0,
    "error_count": 59,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_THREADPOOL'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_THREADS'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.IO_THREADS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.THREADPOOL_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.THREADS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.BUFFER_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.DEFAULT_BUFFER_SIZE'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 47,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 47,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 49,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 52,
        "column": 43,
        "type": "error",
        "message": "Parameter 'times' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 54,
        "type": "error",
        "message": "Parameter 'alive' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 65,
        "type": "error",
        "message": "Parameter 'sleep' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 72,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 59,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 61,
        "column": 28,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 63,
        "column": 28,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 69,
        "column": 48,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 81,
        "column": 24,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'server'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 81,
        "column": 24,
        "type": "error",
        "message": "Local variable 'server' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 58,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 84,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 90,
        "column": 21,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 91,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 93,
        "column": 21,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 94,
        "column": 34,
        "type": "error",
        "message": "Local variable 'scene' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 94,
        "column": 55,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 97,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 106,
        "column": 35,
        "type": "error",
        "message": "The method 'statTelnetServer(int)' has a cognitive complexity of 33, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 106,
        "column": 56,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 62,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 108,
        "column": 24,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'telnetserver'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 108,
        "column": 24,
        "type": "error",
        "message": "Local variable 'telnetserver' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 109,
        "column": 27,
        "type": "error",
        "message": "The method 'telnet(Channel, String)' has a cognitive complexity of 28, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 109,
        "column": 27,
        "type": "error",
        "message": "The method 'telnet(Channel, String)' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 109,
        "column": 58,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 21,
        "type": "error",
        "message": "Position literals first in String comparisons",
        "source": "LiteralsFirstInComparisons"
      },
      {
        "line": 111,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 112,
        "column": 28,
        "type": "error",
        "message": "Position literals first in String comparisons",
        "source": "LiteralsFirstInComparisons"
      },
      {
        "line": 113,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 115,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 119,
        "column": 30,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 120,
        "column": 25,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 122,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 124,
        "column": 21,
        "type": "error",
        "message": "System.exit() should not be used in J2EE/JEE apps",
        "source": "DoNotTerminateVM"
      },
      {
        "line": 125,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 127,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 129,
        "column": 30,
        "type": "error",
        "message": "Local variable 'args' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 130,
        "column": 25,
        "type": "error",
        "message": "Local variable 'times' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 131,
        "column": 25,
        "type": "error",
        "message": "Local variable 'alive' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 132,
        "column": 25,
        "type": "error",
        "message": "Local variable 'sleep' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 135,
        "column": 30,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 136,
        "column": 25,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 139,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 151,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 151,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 159,
        "column": 21,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 166,
        "column": 19,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/PerformanceUtils.java",
    "score": 0.0,
    "error_count": 36,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 33,
        "column": 45,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 57,
        "type": "error",
        "message": "Parameter 'defaultValue' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 41,
        "column": 45,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 54,
        "type": "error",
        "message": "Parameter 'defaultValue' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 49,
        "column": 53,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 66,
        "type": "error",
        "message": "Parameter 'defaultValue' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 58,
        "column": 22,
        "type": "error",
        "message": "Local variable 'environment' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 49,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 64,
        "column": 26,
        "type": "error",
        "message": "Avoid variables with short names like ni",
        "source": "ShortVariable"
      },
      {
        "line": 64,
        "column": 26,
        "type": "error",
        "message": "Local variable 'ni' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 64,
        "column": 31,
        "type": "error",
        "message": "Unnecessary qualifier 'PerformanceUtils': 'getNetworkInterface' is already in scope",
        "source": "UnnecessaryFullyQualifiedName"
      },
      {
        "line": 72,
        "column": 23,
        "type": "error",
        "message": "Local variable 'pad' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 76,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 80,
        "column": 23,
        "type": "error",
        "message": "Local variable 'pad' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 84,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 87,
        "column": 41,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 23,
        "type": "error",
        "message": "Local variable 'pad' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 13,
        "type": "error",
        "message": "Local variable 'len' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 98,
        "column": 43,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 23,
        "type": "error",
        "message": "Local variable 'pad' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 100,
        "column": 13,
        "type": "error",
        "message": "Local variable 'len' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 102,
        "column": 17,
        "type": "error",
        "message": "Local variable 'half' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 107,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 112,
        "column": 43,
        "type": "error",
        "message": "Local variable 'interfaces' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 116,
        "column": 25,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 117,
        "column": 23,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 117,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 121,
        "column": 11,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/TelnetServer.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 24,
        "column": 8,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 26,
        "column": 44,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 29,
        "column": 43,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 42,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 58,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 44,
        "column": 19,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/TransportersTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 26,
        "column": 20,
        "type": "error",
        "message": "Field 'url' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 27,
        "column": 28,
        "type": "error",
        "message": "Field 'channel' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/api/ConnectionTest.java",
    "score": 3.5,
    "error_count": 13,
    "messages": [
      {
        "line": 26,
        "column": 1,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 30,
        "column": 20,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 30,
        "column": 20,
        "type": "error",
        "message": "Local variable 'connection' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 31,
        "column": 24,
        "type": "error",
        "message": "Local variable 'latch' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 40,
        "column": 20,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 40,
        "column": 20,
        "type": "error",
        "message": "Local variable 'connection' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 24,
        "type": "error",
        "message": "Local variable 'latch' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 50,
        "column": 20,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 50,
        "column": 20,
        "type": "error",
        "message": "Local variable 'connection' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 24,
        "type": "error",
        "message": "Local variable 'latch' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/api/EmptyProtocol.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/api/MultiplexProtocolConnectionManagerTest.java",
    "score": 0.0,
    "error_count": 20,
    "messages": [
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 33,
        "column": 31,
        "type": "error",
        "message": "Field 'connectionManager' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 37,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 20,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 38,
        "column": 20,
        "type": "error",
        "message": "Local variable 'connection' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 15,
        "type": "error",
        "message": "Local variable 'protocolsField' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 9,
        "type": "error",
        "message": "You should not modify visibility of constructors, methods or fields using setAccessible()",
        "source": "AvoidAccessibilityAlteration"
      },
      {
        "line": 42,
        "column": 13,
        "type": "error",
        "message": "Local variable 'protocolMap' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 48,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 48,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 50,
        "column": 20,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 50,
        "column": 20,
        "type": "error",
        "message": "Local variable 'connect1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 54,
        "column": 20,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 54,
        "column": 20,
        "type": "error",
        "message": "Local variable 'connect2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 30,
        "type": "error",
        "message": "Local variable 'consumer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 53,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new Consumer<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 58,
        "column": 43,
        "type": "error",
        "message": "Parameter 'connection' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/api/NettyEventLoopFactoryTest.java",
    "score": 1.0,
    "error_count": 18,
    "messages": [
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.OS_LINUX_PREFIX'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.OS_NAME_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.NETTY_EPOLL_ENABLE_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 41,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 41,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 54,
        "column": 10,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 56,
        "column": 28,
        "type": "error",
        "message": "Local variable 'eventLoopGroup' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 44,
        "type": "error",
        "message": "Avoid excessively long variable names like socketChannelClass",
        "source": "LongVariable"
      },
      {
        "line": 59,
        "column": 44,
        "type": "error",
        "message": "Local variable 'socketChannelClass' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 50,
        "type": "error",
        "message": "Avoid excessively long variable names like serverSocketChannelClass",
        "source": "LongVariable"
      },
      {
        "line": 62,
        "column": 50,
        "type": "error",
        "message": "Local variable 'serverSocketChannelClass' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 28,
        "type": "error",
        "message": "Local variable 'eventLoopGroup' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 44,
        "type": "error",
        "message": "Avoid excessively long variable names like socketChannelClass",
        "source": "LongVariable"
      },
      {
        "line": 69,
        "column": 44,
        "type": "error",
        "message": "Local variable 'socketChannelClass' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 50,
        "type": "error",
        "message": "Avoid excessively long variable names like serverSocketChannelClass",
        "source": "LongVariable"
      },
      {
        "line": 72,
        "column": 50,
        "type": "error",
        "message": "Local variable 'serverSocketChannelClass' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 78,
        "column": 16,
        "type": "error",
        "message": "Local variable 'osName' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 79,
        "column": 16,
        "type": "error",
        "message": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale",
        "source": "UseLocaleWithCaseConversions"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/api/SingleProtocolConnectionManagerTest.java",
    "score": 0.0,
    "error_count": 23,
    "messages": [
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 33,
        "column": 31,
        "type": "error",
        "message": "Field 'connectionManager' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 37,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 20,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 38,
        "column": 20,
        "type": "error",
        "message": "Local variable 'connection' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 15,
        "type": "error",
        "message": "Local variable 'protocolsField' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 9,
        "type": "error",
        "message": "You should not modify visibility of constructors, methods or fields using setAccessible()",
        "source": "AvoidAccessibilityAlteration"
      },
      {
        "line": 42,
        "column": 13,
        "type": "error",
        "message": "Local variable 'protocolMap' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 48,
        "column": 9,
        "type": "error",
        "message": "Empty while statement",
        "source": "EmptyControlStatement"
      },
      {
        "line": 54,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 54,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 55,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 20,
        "type": "error",
        "message": "Avoid unused local variables such as 'connection'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 56,
        "column": 20,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 59,
        "column": 34,
        "type": "error",
        "message": "Local variable 'consumer1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 58,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new Consumer<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 61,
        "column": 47,
        "type": "error",
        "message": "Parameter 'connection' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 70,
        "column": 34,
        "type": "error",
        "message": "Local variable 'consumer2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 70,
        "column": 58,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new Consumer<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 72,
        "column": 47,
        "type": "error",
        "message": "Parameter 'connection' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/AbstractChannelBufferTest.java",
    "score": 0.0,
    "error_count": 192,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 30,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.buffer.ChannelBuffers.directBuffer'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 32,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertFalse'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertTrue'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.fail'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "The class 'AbstractChannelBufferTest' has a total cyclomatic complexity of 116 (highest 4).",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "This class has a bunch of public methods and attributes",
        "source": "ExcessivePublicCount"
      },
      {
        "line": 38,
        "column": 49,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 65,
        "column": 18,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 69,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 69,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 87,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 99,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 119,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 126,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 140,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 153,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 153,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 160,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 160,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getByteBoundaryCheck1' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 165,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 165,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getByteBoundaryCheck2' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 170,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 170,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getByteArrayBoundaryCheck1' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 175,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 175,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getByteArrayBoundaryCheck2' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 180,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 180,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getByteBufferBoundaryCheck' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 185,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 190,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 195,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 200,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 205,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 210,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 215,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 220,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 220,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getByteBufferState' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 220,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 221,
        "column": 20,
        "type": "error",
        "message": "Local variable 'dst' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 242,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 242,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getDirectByteBufferBoundaryCheck' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 247,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 247,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getDirectByteBufferState' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 247,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 248,
        "column": 20,
        "type": "error",
        "message": "Local variable 'dst' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 269,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 271,
        "column": 18,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 277,
        "column": 18,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 283,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 283,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 286,
        "column": 18,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 298,
        "column": 18,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 311,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 312,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 319,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 322,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 331,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 332,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 339,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 339,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 340,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 351,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 352,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 359,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 359,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 360,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 363,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 372,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 372,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 373,
        "column": 16,
        "type": "error",
        "message": "Local variable 'valueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 374,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 384,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 384,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 385,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 399,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 400,
        "column": 16,
        "type": "error",
        "message": "Local variable 'valueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 401,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 408,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 408,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 409,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 412,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 421,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 422,
        "column": 16,
        "type": "error",
        "message": "Local variable 'tmp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 423,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 431,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 435,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 444,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 444,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 445,
        "column": 20,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 454,
        "column": 20,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 457,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 468,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 468,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 469,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 479,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 492,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 492,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 493,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 499,
        "column": 17,
        "type": "error",
        "message": "Local variable 'readerIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 504,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 507,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 518,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 518,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 519,
        "column": 16,
        "type": "error",
        "message": "Local variable 'valueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 520,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 532,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 532,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 533,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 536,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 549,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 549,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 550,
        "column": 16,
        "type": "error",
        "message": "Local variable 'valueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 551,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 557,
        "column": 17,
        "type": "error",
        "message": "Local variable 'readerIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 566,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 566,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 567,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 570,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 585,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 585,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 586,
        "column": 16,
        "type": "error",
        "message": "Local variable 'valueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 587,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 600,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 600,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 601,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 604,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 618,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 618,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 619,
        "column": 16,
        "type": "error",
        "message": "Local variable 'valueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 620,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 627,
        "column": 17,
        "type": "error",
        "message": "Local variable 'readerIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 637,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 637,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 638,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 642,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 657,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 657,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 658,
        "column": 16,
        "type": "error",
        "message": "Local variable 'valueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 659,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 673,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 673,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 674,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 677,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 691,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 691,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 692,
        "column": 16,
        "type": "error",
        "message": "Local variable 'valueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 693,
        "column": 23,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 701,
        "column": 17,
        "type": "error",
        "message": "Local variable 'readerIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 711,
        "column": 16,
        "type": "error",
        "message": "Avoid excessively long variable names like expectedValueContent",
        "source": "LongVariable"
      },
      {
        "line": 711,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValueContent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 712,
        "column": 23,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 716,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 731,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 731,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 733,
        "column": 20,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 742,
        "column": 20,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 745,
        "column": 17,
        "type": "error",
        "message": "Local variable 'valueOffset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 756,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 756,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 759,
        "column": 20,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 767,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expectedValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 772,
        "column": 27,
        "type": "error",
        "message": "Local variable 'actualValue' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 782,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 782,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 783,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expected' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 787,
        "column": 34,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 787,
        "column": 34,
        "type": "error",
        "message": "Local variable 'in' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 792,
        "column": 31,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 801,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 801,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 802,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expected' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 807,
        "column": 34,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 807,
        "column": 34,
        "type": "error",
        "message": "Local variable 'in' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 813,
        "column": 31,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 824,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 824,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 826,
        "column": 18,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 835,
        "column": 23,
        "type": "error",
        "message": "Local variable 'copy' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 851,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 852,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 861,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 862,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 873,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 873,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 879,
        "column": 9,
        "type": "error",
        "message": "In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions",
        "source": "JUnitUseExpected"
      },
      {
        "line": 882,
        "column": 11,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/ByteBufferBackedChannelBufferTest.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 21,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 21,
        "column": 8,
        "type": "error",
        "message": "The class 'ByteBufferBackedChannelBufferTest' might be a test class, but it contains no test cases.",
        "source": "TestClassWithoutTestCases"
      },
      {
        "line": 26,
        "column": 43,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/ChannelBufferFactoryTest.java",
    "score": 3.0,
    "error_count": 14,
    "messages": [
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 31,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 31,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 32,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like directChannelBufferFactory",
        "source": "LongVariable"
      },
      {
        "line": 32,
        "column": 30,
        "type": "error",
        "message": "Local variable 'directChannelBufferFactory' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 33,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like heapChannelBufferFactory",
        "source": "LongVariable"
      },
      {
        "line": 33,
        "column": 30,
        "type": "error",
        "message": "Local variable 'heapChannelBufferFactory' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 23,
        "type": "error",
        "message": "Local variable 'directBuffer1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 23,
        "type": "error",
        "message": "Local variable 'directBuffer2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 23,
        "type": "error",
        "message": "Local variable 'directBuffer3' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 23,
        "type": "error",
        "message": "Local variable 'heapBuffer1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 23,
        "type": "error",
        "message": "Local variable 'heapBuffer2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 23,
        "type": "error",
        "message": "Local variable 'heapBuffer3' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/ChannelBufferStreamTest.java",
    "score": 0.0,
    "error_count": 26,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 23,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 24,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertFalse'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 25,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertSame'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 26,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertThrows'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 27,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertTrue'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 28,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 33,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 43,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 48,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 53,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 55,
        "column": 27,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 62,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 67,
        "column": 17,
        "type": "error",
        "message": "Unit tests that execute tests should use the @Test annotation. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
        "source": "JUnit4TestShouldUseTestAnnotation"
      },
      {
        "line": 71,
        "column": 11,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 82,
        "column": 17,
        "type": "error",
        "message": "Unit tests that execute tests should use the @Test annotation. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
        "source": "JUnit4TestShouldUseTestAnnotation"
      },
      {
        "line": 83,
        "column": 39,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 99,
        "column": 11,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 104,
        "column": 53,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 104,
        "column": 53,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 105,
        "column": 16,
        "type": "error",
        "message": "Local variable 'tmp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/ChannelBuffersTest.java",
    "score": 0.0,
    "error_count": 31,
    "messages": [
      {
        "line": 24,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.buffer.ChannelBuffers.DEFAULT_CAPACITY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 25,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.buffer.ChannelBuffers.EMPTY_BUFFER'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 45,
        "column": 23,
        "type": "error",
        "message": "Local variable 'bufA' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 46,
        "column": 23,
        "type": "error",
        "message": "Local variable 'bufB' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 53,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 62,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 84,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 84,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 93,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 93,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 94,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 95,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 98,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 99,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 99,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 102,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer3' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 103,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 103,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes3' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 106,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer4' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 107,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 107,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes4' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/DirectChannelBufferTest.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 21,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 21,
        "column": 8,
        "type": "error",
        "message": "The class 'DirectChannelBufferTest' might be a test class, but it contains no test cases.",
        "source": "TestClassWithoutTestCases"
      },
      {
        "line": 26,
        "column": 43,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/DynamicChannelBufferTest.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 24,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 31,
        "column": 43,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 52,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 52,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 57,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 57,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 58,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 64,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 64,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 65,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 16,
        "type": "error",
        "message": "Local variable 'random' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 70,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/HeapChannelBufferTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 23,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.is'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 24,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.not'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 31,
        "column": 43,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 10,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 44,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like b1",
        "source": "ShortVariable"
      },
      {
        "line": 45,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like b2",
        "source": "ShortVariable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/codec/AbstractMockChannel.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 33,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on field 'localAddress'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 34,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on field 'remoteAddress'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 37,
        "column": 21,
        "type": "error",
        "message": "Field isClosed has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 38,
        "column": 30,
        "type": "error",
        "message": "Avoid unused private fields such as 'closing'.",
        "source": "UnusedPrivateField"
      },
      {
        "line": 39,
        "column": 33,
        "type": "error",
        "message": "Field 'attributes' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 39,
        "column": 57,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>(1)`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 46,
        "column": 36,
        "type": "error",
        "message": "Parameter 'remoteUrl' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 47,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 74,
        "column": 31,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 82,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 117,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 122,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 127,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 127,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 132,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/codec/ExchangeCodecTest.java",
    "score": 0.0,
    "error_count": 225,
    "messages": [
      {
        "line": 47,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.READONLY_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 48,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.serialize.Constants.FASTJSON2_SERIALIZATION_ID'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 65,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 65,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 65,
        "column": 56,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 70,
        "column": 19,
        "type": "error",
        "message": "Missing commented default access modifier on field 'serialization'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 71,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like SERIALIZATION_BYTE",
        "source": "LongVariable"
      },
      {
        "line": 73,
        "column": 58,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 74,
        "column": 23,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'serialization'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 74,
        "column": 23,
        "type": "error",
        "message": "Local variable 'serialization' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 78,
        "column": 34,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 80,
        "column": 29,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 82,
        "column": 16,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'obj'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 82,
        "column": 16,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 43,
        "type": "error",
        "message": "Parameter 'obj' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 86,
        "column": 55,
        "type": "error",
        "message": "Parameter 'header' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 37,
        "type": "error",
        "message": "Local variable 'bos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 22,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 96,
        "column": 16,
        "type": "error",
        "message": "Local variable 'len' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 98,
        "column": 16,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'request'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 98,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 102,
        "column": 20,
        "type": "error",
        "message": "Avoid unused private methods such as 'getReadonlyEventRequestBytes(Object, byte[])'.",
        "source": "UnusedPrivateMethod"
      },
      {
        "line": 102,
        "column": 56,
        "type": "error",
        "message": "Parameter 'obj' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 102,
        "column": 68,
        "type": "error",
        "message": "Parameter 'header' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 37,
        "type": "error",
        "message": "Local variable 'bos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 105,
        "column": 22,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 111,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 114,
        "column": 16,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'request'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 114,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 118,
        "column": 48,
        "type": "error",
        "message": "Parameter 'header' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 119,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 120,
        "column": 16,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'newbuf'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 120,
        "column": 16,
        "type": "error",
        "message": "Local variable 'newbuf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 126,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 131,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 131,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 131,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Error_MagicNum' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 132,
        "column": 9,
        "type": "error",
        "message": "Avoid using implementation types like 'HashMap'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 132,
        "column": 33,
        "type": "error",
        "message": "Local variable 'inputBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 132,
        "column": 57,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 137,
        "column": 40,
        "type": "error",
        "message": "Local variable 'entry' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 143,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 143,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Error_Length' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 143,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 144,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 144,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 145,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 146,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 148,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 149,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 149,
        "column": 16,
        "type": "error",
        "message": "Local variable 'baddata' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 150,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 151,
        "column": 18,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 158,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 158,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Error_Response_Object' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 160,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 160,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 161,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 162,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 164,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 164,
        "column": 16,
        "type": "error",
        "message": "Local variable 'badbytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 167,
        "column": 18,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 172,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 172,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 173,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 176,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 183,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 189,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 189,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Check_Payload' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 189,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 190,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 190,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 191,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 194,
        "column": 21,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 195,
        "column": 27,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 196,
        "column": 20,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 200,
        "column": 21,
        "type": "error",
        "message": "The String literal \"Data length too large: \" appears 4 times in this file; the first occurrence is on line 200",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 208,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 208,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 208,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Header_Need_Readmore' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 209,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 209,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 214,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 214,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 214,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Body_Need_Readmore' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 215,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 215,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 220,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 220,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_MigicCodec_Contain_ExchangeHeader' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 220,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 221,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 221,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 223,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 224,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 225,
        "column": 16,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 232,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 232,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Return_Response_Person' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 232,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 234,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 234,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 235,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 236,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 238,
        "column": 18,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 241,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 245,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 245,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Return_Response_Error' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 245,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 246,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 246,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 247,
        "column": 16,
        "type": "error",
        "message": "Local variable 'errorString' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 248,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 249,
        "column": 18,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 255,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 255,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Return_Request_Event_Object' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 255,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 257,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 257,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 258,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 259,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 261,
        "column": 28,
        "type": "error",
        "message": "The String literal \"deserialization.event.size\" appears 4 times in this file; the first occurrence is on line 261",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 262,
        "column": 17,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 267,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 272,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 272,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Return_Request_Event_String' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 272,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 274,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 274,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 275,
        "column": 16,
        "type": "error",
        "message": "Local variable 'event' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 276,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 278,
        "column": 17,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 283,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 287,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 287,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Return_Request_Heartbeat_Object' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 287,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 289,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 289,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 290,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 291,
        "column": 17,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 296,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 300,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 300,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Return_Request_Object' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 300,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 302,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 302,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 303,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 304,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 307,
        "column": 17,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 312,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 317,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 317,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Decode_Error_Request_Object' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 317,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 319,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 319,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 320,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 321,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 323,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 323,
        "column": 16,
        "type": "error",
        "message": "Local variable 'badbytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 326,
        "column": 17,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 332,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 332,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Header_Response_NoSerializationFlag' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 332,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 334,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 334,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 335,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 336,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 338,
        "column": 18,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 341,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 345,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 345,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Header_Response_Heartbeat' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 345,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 347,
        "column": 16,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 347,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 348,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 349,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 351,
        "column": 18,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 354,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 358,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 358,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Encode_Request' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 358,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 359,
        "column": 23,
        "type": "error",
        "message": "Local variable 'encodeBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 360,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 361,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 362,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 368,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 370,
        "column": 23,
        "type": "error",
        "message": "Local variable 'decodeBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 371,
        "column": 17,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 379,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 379,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Encode_Response' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 379,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 380,
        "column": 23,
        "type": "error",
        "message": "Local variable 'encodeBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 381,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 382,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 387,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 391,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 395,
        "column": 23,
        "type": "error",
        "message": "Local variable 'decodeBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 396,
        "column": 18,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 408,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 408,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Encode_Error_Response' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 408,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 409,
        "column": 23,
        "type": "error",
        "message": "Local variable 'encodeBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 410,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 411,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 416,
        "column": 16,
        "type": "error",
        "message": "Local variable 'badString' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 418,
        "column": 16,
        "type": "error",
        "message": "Local variable 'person' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 422,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 426,
        "column": 23,
        "type": "error",
        "message": "Local variable 'decodeBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 427,
        "column": 18,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 437,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 437,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 438,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 439,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 441,
        "column": 14,
        "type": "error",
        "message": "Local variable 'date' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 443,
        "column": 23,
        "type": "error",
        "message": "Local variable 'encodeBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 445,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 447,
        "column": 13,
        "type": "error",
        "message": "Local variable 'len' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 448,
        "column": 31,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 454,
        "column": 13,
        "type": "error",
        "message": "Local variable 'padding' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 462,
        "column": 23,
        "type": "error",
        "message": "Local variable 'decodeBuffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 471,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 471,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 472,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 484,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 490,
        "column": 18,
        "type": "error",
        "message": "Local variable 'receiveMessage' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/codec/TelnetCodecTest.java",
    "score": 0.0,
    "error_count": 147,
    "messages": [
      {
        "line": 40,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 40,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 40,
        "column": 30,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 42,
        "column": 12,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 42,
        "column": 12,
        "type": "error",
        "message": "Avoid variables with short names like UP",
        "source": "ShortVariable"
      },
      {
        "line": 42,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on field 'UP'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 42,
        "column": 12,
        "type": "error",
        "message": "The field name 'UP' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 43,
        "column": 12,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 43,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on field 'DOWN'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 43,
        "column": 12,
        "type": "error",
        "message": "The field name 'DOWN' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 45,
        "column": 9,
        "type": "error",
        "message": "Missing commented default access modifier on field 'url'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 51,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 56,
        "column": 9,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'url'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 58,
        "column": 29,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'channel'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 58,
        "column": 29,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 9,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'url'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 65,
        "column": 29,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'channel'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 65,
        "column": 29,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 34,
        "type": "error",
        "message": "Parameter 'in1' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 46,
        "type": "error",
        "message": "Parameter 'in2' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 70,
        "column": 16,
        "type": "error",
        "message": "Local variable 'ret' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 76,
        "column": 42,
        "type": "error",
        "message": "Parameter 'obj' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 85,
        "column": 39,
        "type": "error",
        "message": "Avoid variables with short names like bo",
        "source": "ShortVariable"
      },
      {
        "line": 85,
        "column": 39,
        "type": "error",
        "message": "Local variable 'bo' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 36,
        "type": "error",
        "message": "Avoid variables with short names like oo",
        "source": "ShortVariable"
      },
      {
        "line": 86,
        "column": 36,
        "type": "error",
        "message": "Local variable 'oo' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 91,
        "column": 22,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 92,
        "column": 27,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      },
      {
        "line": 98,
        "column": 42,
        "type": "error",
        "message": "Parameter 'objBytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 52,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 100,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 102,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like bi",
        "source": "ShortVariable"
      },
      {
        "line": 102,
        "column": 30,
        "type": "error",
        "message": "Local variable 'bi' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 103,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like oi",
        "source": "ShortVariable"
      },
      {
        "line": 103,
        "column": 27,
        "type": "error",
        "message": "Local variable 'oi' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 107,
        "column": 20,
        "type": "error",
        "message": "The instance method name 'testDecode_assertEquals' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 107,
        "column": 51,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 107,
        "column": 67,
        "type": "error",
        "message": "Parameter 'ret' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 20,
        "type": "error",
        "message": "The instance method name 'testDecode_assertEquals' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 111,
        "column": 51,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 67,
        "type": "error",
        "message": "Parameter 'ret' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 80,
        "type": "error",
        "message": "Parameter 'isServerside' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 115,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 118,
        "column": 16,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 123,
        "column": 20,
        "type": "error",
        "message": "The instance method name 'testEecode_assertEquals' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 123,
        "column": 51,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 67,
        "type": "error",
        "message": "Parameter 'ret' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 80,
        "type": "error",
        "message": "Parameter 'isServerside' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 125,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 127,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 130,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 141,
        "column": 20,
        "type": "error",
        "message": "The instance method name 'testDecode_assertEquals' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 141,
        "column": 51,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 141,
        "column": 67,
        "type": "error",
        "message": "Parameter 'ret' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 18,
        "type": "error",
        "message": "The instance method name 'testDecode_assertEquals' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 145,
        "column": 49,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 65,
        "type": "error",
        "message": "Parameter 'ret' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 77,
        "type": "error",
        "message": "Parameter 'channelReceive' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 149,
        "column": 18,
        "type": "error",
        "message": "The instance method name 'testDecode_assertEquals' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 149,
        "column": 78,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 149,
        "column": 94,
        "type": "error",
        "message": "Parameter 'expectRet' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 149,
        "column": 112,
        "type": "error",
        "message": "Parameter 'channelReceive' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 152,
        "column": 13,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'channel'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 155,
        "column": 16,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 156,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 159,
        "column": 16,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 164,
        "column": 18,
        "type": "error",
        "message": "The instance method name 'testDecode_PersonWithEnterByte' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 164,
        "column": 56,
        "type": "error",
        "message": "Parameter 'enterBytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 164,
        "column": 76,
        "type": "error",
        "message": "Parameter 'isNeedMore' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 166,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 168,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 169,
        "column": 16,
        "type": "error",
        "message": "Local variable 'newBuf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 170,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 173,
        "column": 16,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 181,
        "column": 18,
        "type": "error",
        "message": "The instance method name 'testDecode_WithExitByte' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 181,
        "column": 49,
        "type": "error",
        "message": "Parameter 'exitbytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 181,
        "column": 68,
        "type": "error",
        "message": "Parameter 'isChannelClose' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 183,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 184,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 192,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 192,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 192,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_String_ClientSide' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 193,
        "column": 33,
        "type": "error",
        "message": "The String literal \"aaa\" appears 7 times in this file; the first occurrence is on line 193",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 197,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 197,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 197,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_BlankMessage' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 202,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 202,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 202,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_String_NoEnter' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 207,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 207,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 207,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_String_WithEnter' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 212,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 212,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 212,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_String_MiddleWithEnter' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 217,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 217,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 217,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_Person_ObjectOnly' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 222,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 222,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 222,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_Person_WithEnter' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 231,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 231,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 231,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_WithExitByte' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 232,
        "column": 9,
        "type": "error",
        "message": "Avoid using implementation types like 'HashMap'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 232,
        "column": 34,
        "type": "error",
        "message": "Local variable 'exitBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 232,
        "column": 57,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 239,
        "column": 41,
        "type": "error",
        "message": "Local variable 'entry' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 245,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 245,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 245,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_Backspace' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 250,
        "column": 16,
        "type": "error",
        "message": "Local variable 'chineseBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 251,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 258,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 258,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_Backspace_WithError' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 267,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 267,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 267,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_History_UP' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 269,
        "column": 29,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 273,
        "column": 16,
        "type": "error",
        "message": "Local variable 'request1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 274,
        "column": 16,
        "type": "error",
        "message": "Local variable 'expected1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 282,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 282,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testDecode_UPorDOWN_WithError' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 287,
        "column": 33,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 291,
        "column": 20,
        "type": "error",
        "message": "Local variable 'request1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 292,
        "column": 20,
        "type": "error",
        "message": "Local variable 'expected1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 304,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 304,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 304,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'testEncode_String_ClientSide' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 359,
        "column": 24,
        "type": "error",
        "message": "The method 'equals(Object)' has a cyclomatic complexity of 10.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 359,
        "column": 38,
        "type": "error",
        "message": "Parameter 'obj' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 361,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 361,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 363,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 363,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 365,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 365,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 366,
        "column": 20,
        "type": "error",
        "message": "Local variable 'other' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 369,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 369,
        "column": 21,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 371,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 371,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 374,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 374,
        "column": 21,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 376,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 376,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/ExchangersTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 33,
        "column": 16,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 45,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 45,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 46,
        "column": 16,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/MockExchanger.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 24,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 25,
        "column": 28,
        "type": "error",
        "message": "Field 'exchangeServer' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 26,
        "column": 28,
        "type": "error",
        "message": "Field 'exchangeClient' may be declared final",
        "source": "ImmutableField"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/RequestTest.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 22,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 22,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 25,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 25,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 26,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 17,
        "type": "error",
        "message": "Local variable 'copiedRequest' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 46,
        "column": 17,
        "type": "error",
        "message": "Local variable 'copyWithoutData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/ResponseTest.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 22,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.HEARTBEAT_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 24,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 24,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 26,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 26,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 27,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/DefaultFutureTest.java",
    "score": 0.0,
    "error_count": 52,
    "messages": [
      {
        "line": 38,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 38,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 40,
        "column": 40,
        "type": "error",
        "message": "The constant name 'index' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 43,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 44,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 49,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 50,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 71,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 73,
        "column": 23,
        "type": "error",
        "message": "Avoid variables with short names like f",
        "source": "ShortVariable"
      },
      {
        "line": 73,
        "column": 23,
        "type": "error",
        "message": "Local variable 'f' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 78,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 83,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 85,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 100,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 102,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 104,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 105,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 106,
        "column": 23,
        "type": "error",
        "message": "Avoid variables with short names like f",
        "source": "ShortVariable"
      },
      {
        "line": 106,
        "column": 23,
        "type": "error",
        "message": "Local variable 'f' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 113,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 118,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 120,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 130,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 130,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 132,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 134,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 135,
        "column": 13,
        "type": "error",
        "message": "Local variable 'channelId' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 136,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 137,
        "column": 25,
        "type": "error",
        "message": "Avoid unused local variables such as 'sharedExecutor'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 139,
        "column": 28,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 140,
        "column": 23,
        "type": "error",
        "message": "Avoid variables with short names like f",
        "source": "ShortVariable"
      },
      {
        "line": 140,
        "column": 23,
        "type": "error",
        "message": "Local variable 'f' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 148,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 149,
        "column": 35,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 150,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 154,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 156,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 162,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 163,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 164,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 165,
        "column": 25,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 175,
        "column": 45,
        "type": "error",
        "message": "Parameter 'timeout' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 176,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 177,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 184,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'InterruptThread'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 185,
        "column": 24,
        "type": "error",
        "message": "Field 'parent' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 187,
        "column": 16,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 187,
        "column": 39,
        "type": "error",
        "message": "Parameter 'parent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 196,
        "column": 17,
        "type": "error",
        "message": "Unnecessary qualifier 'Thread': 'sleep' is already in scope",
        "source": "UnnecessaryFullyQualifiedName"
      },
      {
        "line": 199,
        "column": 17,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/ExchangeHandlerDispatcherTest.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 33,
        "column": 35,
        "type": "error",
        "message": "Avoid excessively long variable names like exchangeHandlerDispatcher",
        "source": "LongVariable"
      },
      {
        "line": 33,
        "column": 35,
        "type": "error",
        "message": "Local variable 'exchangeHandlerDispatcher' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 24,
        "type": "error",
        "message": "Local variable 'channelHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "Local variable 'replier' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like telnetHandlerAdapter",
        "source": "LongVariable"
      },
      {
        "line": 37,
        "column": 30,
        "type": "error",
        "message": "Local variable 'telnetHandlerAdapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 15,
        "type": "error",
        "message": "Avoid excessively long variable names like telnetHandlerField",
        "source": "LongVariable"
      },
      {
        "line": 40,
        "column": 15,
        "type": "error",
        "message": "Local variable 'telnetHandlerField' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 9,
        "type": "error",
        "message": "You should not modify visibility of constructors, methods or fields using setAccessible()",
        "source": "AvoidAccessibilityAlteration"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 45,
        "column": 25,
        "type": "error",
        "message": "Local variable 'exchangeChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 39,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/MultiMessageTest.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 33,
        "column": 22,
        "type": "error",
        "message": "Local variable 'multiMessage' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 33,
        "type": "error",
        "message": "The String literal \"test1\" appears 6 times in this file; the first occurrence is on line 36",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 37,
        "column": 48,
        "type": "error",
        "message": "The String literal \"test2\" appears 6 times in this file; the first occurrence is on line 37",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 37,
        "column": 57,
        "type": "error",
        "message": "The String literal \"test3\" appears 4 times in this file; the first occurrence is on line 37",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 49,
        "column": 18,
        "type": "error",
        "message": "Local variable 'iterator' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 55,
        "column": 20,
        "type": "error",
        "message": "Local variable 'removedCollection' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 60,
        "column": 22,
        "type": "error",
        "message": "Local variable 'multiMessage1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 61,
        "column": 22,
        "type": "error",
        "message": "Local variable 'multiMessage2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/header/CloseTimerTaskTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 30,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DUBBO_VERSION_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.HEARTBEAT_CHECK_TICK'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 46,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 47,
        "column": 14,
        "type": "error",
        "message": "Local variable 'tickDuration' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 43,
        "type": "error",
        "message": "Avoid variables with short names like cp",
        "source": "ShortVariable"
      },
      {
        "line": 56,
        "column": 43,
        "type": "error",
        "message": "Local variable 'cp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 62,
        "column": 14,
        "type": "error",
        "message": "Local variable 'now' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeChannelTest.java",
    "score": 0.0,
    "error_count": 80,
    "messages": [
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.times'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.verify'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 37,
        "column": 40,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 41,
        "column": 17,
        "type": "error",
        "message": "Field 'url' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 57,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 57,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getOrAddChannelTest00' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 59,
        "column": 31,
        "type": "error",
        "message": "Local variable 'ret' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 64,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 64,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getOrAddChannelTest01' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 64,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 78,
        "column": 31,
        "type": "error",
        "message": "Local variable 'ret' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 85,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getOrAddChannelTest02' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 86,
        "column": 19,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 87,
        "column": 31,
        "type": "error",
        "message": "Local variable 'ret' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 93,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 93,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 102,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 103,
        "column": 17,
        "type": "error",
        "message": "Local variable 'sent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 16,
        "type": "error",
        "message": "Local variable 'message' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 26,
        "type": "error",
        "message": "The String literal \"this is a test message\" appears 5 times in this file; the first occurrence is on line 104",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 108,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 109,
        "column": 35,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 114,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 115,
        "column": 17,
        "type": "error",
        "message": "Local variable 'sent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 116,
        "column": 16,
        "type": "error",
        "message": "Local variable 'message' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 118,
        "column": 22,
        "type": "error",
        "message": "Local variable 'objects' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 123,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 123,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 124,
        "column": 17,
        "type": "error",
        "message": "Local variable 'sent' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 125,
        "column": 13,
        "type": "error",
        "message": "Local variable 'message' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 127,
        "column": 22,
        "type": "error",
        "message": "Local variable 'objects' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 129,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 134,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 135,
        "column": 16,
        "type": "error",
        "message": "Local variable 'message' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 137,
        "column": 22,
        "type": "error",
        "message": "Local variable 'objects' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 142,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 145,
        "column": 20,
        "type": "error",
        "message": "Local variable 'requestObject' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 151,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 151,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 152,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 155,
        "column": 16,
        "type": "error",
        "message": "Local variable 'requestObject' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 157,
        "column": 33,
        "type": "error",
        "message": "Local variable 'argumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 163,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 172,
        "column": 20,
        "type": "error",
        "message": "Local variable 'requestObject' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 178,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 183,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 183,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 191,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 193,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 202,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 202,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 209,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 210,
        "column": 13,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 215,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 215,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getLocalAddressTest' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 220,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 220,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getRemoteAddressTest' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 225,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 225,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getUrlTest' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 230,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 236,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 236,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getChannelHandlerTest' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 241,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 241,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getExchangeHandlerTest' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 247,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 247,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The getter 'getAttributeAndSetAttributeTest' should not return void linguistically",
        "source": "LinguisticNaming"
      },
      {
        "line": 247,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 248,
        "column": 29,
        "type": "error",
        "message": "The String literal \"test\" appears 15 times in this file; the first occurrence is on line 248",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 254,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 254,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 263,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 263,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 270,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 279,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 289,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 289,
        "column": 17,
        "type": "error",
        "message": "Linguistics Antipattern - The transform method 'toStringTest' should not return void linguistically",
        "source": "LinguisticNaming"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeServerTest.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 41,
        "column": 24,
        "type": "error",
        "message": "Local variable 'server' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 49,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 42,
        "column": 62,
        "type": "error",
        "message": "Number 20881 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 45,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like headerExchangeServer",
        "source": "LongVariable"
      },
      {
        "line": 45,
        "column": 30,
        "type": "error",
        "message": "Local variable 'headerExchangeServer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 17,
        "type": "error",
        "message": "Local variable 'exchangeChannel1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 17,
        "type": "error",
        "message": "Local variable 'exchangeChannel2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 29,
        "type": "error",
        "message": "Local variable 'exChannels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 27,
        "type": "error",
        "message": "Local variable 'address1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 27,
        "type": "error",
        "message": "Local variable 'address2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 35,
        "type": "error",
        "message": "The String literal \"test\" appears 6 times in this file; the first occurrence is on line 72",
        "source": "AvoidDuplicateLiterals"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/header/HeartBeatTaskTest.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DUBBO_VERSION_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.HEARTBEAT_CHECK_TICK'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 42,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like heartbeatTimerTask",
        "source": "LongVariable"
      },
      {
        "line": 46,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 47,
        "column": 14,
        "type": "error",
        "message": "Local variable 'tickDuration' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 43,
        "type": "error",
        "message": "Avoid variables with short names like cp",
        "source": "ShortVariable"
      },
      {
        "line": 58,
        "column": 43,
        "type": "error",
        "message": "Local variable 'cp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 63,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 64,
        "column": 14,
        "type": "error",
        "message": "Local variable 'now' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 22,
        "type": "error",
        "message": "Local variable 'objects' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 74,
        "column": 31,
        "type": "error",
        "message": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()",
        "source": "UseCollectionIsEmpty"
      },
      {
        "line": 75,
        "column": 16,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/header/MockChannel.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 34,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 33,
        "type": "error",
        "message": "Field 'attributes' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 36,
        "column": 57,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 41,
        "column": 26,
        "type": "error",
        "message": "Field 'sentObjects' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 41,
        "column": 53,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 54,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 69,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 89,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 94,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/header/ReconnectTimerTaskTest.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 30,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DUBBO_VERSION_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.HEARTBEAT_CHECK_TICK'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 33,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 33,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 39,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like reconnectTimerTask",
        "source": "LongVariable"
      },
      {
        "line": 44,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 45,
        "column": 14,
        "type": "error",
        "message": "Local variable 'tickDuration' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 43,
        "type": "error",
        "message": "Avoid variables with short names like cp",
        "source": "ShortVariable"
      },
      {
        "line": 59,
        "column": 43,
        "type": "error",
        "message": "Local variable 'cp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 64,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 64,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 65,
        "column": 14,
        "type": "error",
        "message": "Local variable 'now' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/handler/ConnectChannelHandlerTest.java",
    "score": 0.0,
    "error_count": 25,
    "messages": [
      {
        "line": 35,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 35,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 46,
        "column": 28,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 13,
        "type": "error",
        "message": "Local variable 'runs' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 13,
        "type": "error",
        "message": "Local variable 'taskCount' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 57,
        "column": 48,
        "type": "error",
        "message": "Call to `getQueue` on foreign value `executor` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 68,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 68,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 74,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 74,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 80,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 83,
        "column": 32,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 90,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 93,
        "column": 32,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 101,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 101,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 107,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 107,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 113,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 130,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 136,
        "column": 17,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 141,
        "column": 37,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/handler/HeaderExchangeHandlerTest.java",
    "score": 0.0,
    "error_count": 56,
    "messages": [
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.HEARTBEAT_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.READONLY_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 40,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 43,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 43,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 25,
        "type": "error",
        "message": "Local variable 'exHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 58,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 31,
        "type": "error",
        "message": "Local variable 'headExHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 71,
        "column": 37,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 26,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 25,
        "type": "error",
        "message": "Local variable 'exHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 83,
        "column": 84,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like headerExchangeHandler",
        "source": "LongVariable"
      },
      {
        "line": 92,
        "column": 31,
        "type": "error",
        "message": "Local variable 'headerExchangeHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 98,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 103,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 112,
        "column": 37,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 113,
        "column": 26,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 122,
        "column": 25,
        "type": "error",
        "message": "Local variable 'exHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 128,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like headerExchangeHandler",
        "source": "LongVariable"
      },
      {
        "line": 128,
        "column": 31,
        "type": "error",
        "message": "Local variable 'headerExchangeHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 134,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 143,
        "column": 37,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 144,
        "column": 26,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 153,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like headerExchangeHandler",
        "source": "LongVariable"
      },
      {
        "line": 153,
        "column": 31,
        "type": "error",
        "message": "Local variable 'headerExchangeHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 159,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 165,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like headerExchangeHandler",
        "source": "LongVariable"
      },
      {
        "line": 165,
        "column": 31,
        "type": "error",
        "message": "Local variable 'headerExchangeHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 171,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 171,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 182,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like headerExchangeHandler",
        "source": "LongVariable"
      },
      {
        "line": 182,
        "column": 31,
        "type": "error",
        "message": "Local variable 'headerExchangeHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 185,
        "column": 68,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 191,
        "column": 42,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 200,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 200,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 201,
        "column": 17,
        "type": "error",
        "message": "Local variable 'mockChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 202,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like headerExchangeHandler",
        "source": "LongVariable"
      },
      {
        "line": 202,
        "column": 31,
        "type": "error",
        "message": "Local variable 'headerExchangeHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 203,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 211,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 212,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 214,
        "column": 17,
        "type": "error",
        "message": "Local variable 'mockChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 215,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 217,
        "column": 31,
        "type": "error",
        "message": "Avoid excessively long variable names like headerExchangeHandler",
        "source": "LongVariable"
      },
      {
        "line": 217,
        "column": 31,
        "type": "error",
        "message": "Local variable 'headerExchangeHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 218,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 223,
        "column": 16,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 227,
        "column": 13,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 231,
        "column": 13,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 243,
        "column": 24,
        "type": "error",
        "message": "Field 'name' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 245,
        "column": 30,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/handler/MockedChannel.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 29,
        "column": 21,
        "type": "error",
        "message": "Field isClosed has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 30,
        "column": 30,
        "type": "error",
        "message": "Avoid unused private fields such as 'closing'.",
        "source": "UnusedPrivateField"
      },
      {
        "line": 33,
        "column": 33,
        "type": "error",
        "message": "Field 'map' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 33,
        "column": 50,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 35,
        "column": 12,
        "type": "error",
        "message": "Avoid unnecessary constructors - the compiler will generate these for you",
        "source": "UnnecessaryConstructor"
      },
      {
        "line": 62,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 97,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 102,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 107,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 107,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 112,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/handler/MockedChannelHandler.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 29,
        "column": 32,
        "type": "error",
        "message": "Missing commented default access modifier on field 'channels'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 32,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 30,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 46,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 47,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 53,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/handler/WrappedChannelHandlerTest.java",
    "score": 0.0,
    "error_count": 43,
    "messages": [
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.fail'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 41,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 41,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 42,
        "column": 27,
        "type": "error",
        "message": "Missing commented default access modifier on field 'handler'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 43,
        "column": 9,
        "type": "error",
        "message": "Missing commented default access modifier on field 'url'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 46,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 52,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 52,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 52,
        "column": 17,
        "type": "error",
        "message": "The JUnit 5 test method name 'test_Execute_Error' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "MethodNamingConventions"
      },
      {
        "line": 57,
        "column": 38,
        "type": "error",
        "message": "Parameter 'obj' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 50,
        "type": "error",
        "message": "Parameter 'fieldName' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 65,
        "type": "error",
        "message": "Parameter 'parentdepth' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 25,
        "type": "error",
        "message": "Local variable 'fields' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 28,
        "type": "error",
        "message": "Local variable 'f' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 17,
        "type": "error",
        "message": "You should not modify visibility of constructors, methods or fields using setAccessible()",
        "source": "AvoidAccessibilityAlteration"
      },
      {
        "line": 77,
        "column": 11,
        "type": "error",
        "message": "Exception thrown at line 75 is caught in this block.",
        "source": "ExceptionAsFlowControl"
      },
      {
        "line": 77,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 82,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like ms",
        "source": "ShortVariable"
      },
      {
        "line": 82,
        "column": 30,
        "type": "error",
        "message": "Parameter 'ms' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 91,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 96,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 101,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 106,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 106,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 110,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 116,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 116,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 117,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like sharedExecutorService",
        "source": "LongVariable"
      },
      {
        "line": 117,
        "column": 25,
        "type": "error",
        "message": "Local variable 'sharedExecutorService' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 119,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like preferredExecutorService",
        "source": "LongVariable"
      },
      {
        "line": 122,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 126,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 127,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 128,
        "column": 25,
        "type": "error",
        "message": "Local variable 'sharedExecutor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 136,
        "column": 28,
        "type": "error",
        "message": "Local variable 'executor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 143,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'BizChannelHandler'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 144,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like invokeWithBizError",
        "source": "LongVariable"
      },
      {
        "line": 146,
        "column": 42,
        "type": "error",
        "message": "Avoid excessively long variable names like invokeWithBizError",
        "source": "LongVariable"
      },
      {
        "line": 146,
        "column": 42,
        "type": "error",
        "message": "Parameter 'invokeWithBizError' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 156,
        "column": 39,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 164,
        "column": 42,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 172,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 180,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'BizException'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/telnet/TelnetUtilsTest.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 37,
        "column": 28,
        "type": "error",
        "message": "Local variable 'table' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 33,
        "type": "error",
        "message": "The String literal \"abc\" appears 6 times in this file; the first occurrence is on line 38",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 42,
        "column": 16,
        "type": "error",
        "message": "Local variable 'toList' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 60,
        "column": 28,
        "type": "error",
        "message": "Local variable 'table' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 65,
        "column": 16,
        "type": "error",
        "message": "Local variable 'toTable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/telnet/support/ClearTelnetHandlerTest.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 30,
        "column": 23,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 28,
        "type": "error",
        "message": "Local variable 'telnetHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/telnet/support/ExitTelnetHandlerTest.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 25,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.times'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 26,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.verify'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 31,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 33,
        "column": 27,
        "type": "error",
        "message": "Local variable 'exitTelnetHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/telnet/support/HelpTelnetHandlerTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 33,
        "column": 27,
        "type": "error",
        "message": "Local variable 'helpTelnetHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 16,
        "type": "error",
        "message": "Local variable 'prompt' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 16,
        "type": "error",
        "message": "Local variable 'demoOutput' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/telnet/support/StatusTelnetHandlerTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 29,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 33,
        "column": 29,
        "type": "error",
        "message": "Avoid excessively long variable names like statusTelnetHandler",
        "source": "LongVariable"
      },
      {
        "line": 33,
        "column": 29,
        "type": "error",
        "message": "Local variable 'statusTelnetHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 16,
        "type": "error",
        "message": "Local variable 'errorPrompt' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/telnet/support/TelnetHandlerAdapterTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 31,
        "column": 1,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 29,
        "type": "error",
        "message": "Local variable 'param' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 33,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 39,
        "column": 46,
        "type": "error",
        "message": "Number 12345 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 41,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like telnetHandlerAdapter",
        "source": "LongVariable"
      },
      {
        "line": 41,
        "column": 30,
        "type": "error",
        "message": "Local variable 'telnetHandlerAdapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/AbstractCodecTest.java",
    "score": 0.0,
    "error_count": 24,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 29,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.allOf'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 30,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.containsString'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.is'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 32,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.BDDMockito.given'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.verify'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 41,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 60,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 69,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 70,
        "column": 23,
        "type": "error",
        "message": "Local variable 'codec' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 76,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 78,
        "column": 76,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 86,
        "column": 23,
        "type": "error",
        "message": "Consider simply returning the value vs storing it in local variable 'codec'",
        "source": "UnnecessaryLocalBeforeReturn"
      },
      {
        "line": 86,
        "column": 23,
        "type": "error",
        "message": "Local variable 'codec' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/ChannelHandlerDispatcherTest.java",
    "score": 1.0,
    "error_count": 18,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 33,
        "column": 34,
        "type": "error",
        "message": "Avoid excessively long variable names like channelHandlerDispatcher",
        "source": "LongVariable"
      },
      {
        "line": 34,
        "column": 28,
        "type": "error",
        "message": "Local variable 'channelHandler1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 28,
        "type": "error",
        "message": "Local variable 'channelHandler2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 36,
        "type": "error",
        "message": "Local variable 'channelHandlers' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 1,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 70,
        "column": 35,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 76,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 82,
        "column": 30,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 82,
        "column": 46,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 50,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 94,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 94,
        "column": 51,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/CodecSupportTest.java",
    "score": 3.5,
    "error_count": 13,
    "messages": [
      {
        "line": 22,
        "column": 1,
        "type": "error",
        "message": "Unused import 'org.apache.dubbo.remoting.Constants'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 36,
        "column": 14,
        "type": "error",
        "message": "Local variable 'proto' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 23,
        "type": "error",
        "message": "Local variable 'serialization' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 16,
        "type": "error",
        "message": "Local variable 'nullBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 31,
        "type": "error",
        "message": "Local variable 'baos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 22,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 21,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 44,
        "column": 21,
        "type": "error",
        "message": "Local variable 'is' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 46,
        "column": 16,
        "type": "error",
        "message": "Local variable 'payload' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/DecodeHandlerTest.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 36,
        "column": 24,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 23,
        "type": "error",
        "message": "Local variable 'decodeHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 18,
        "type": "error",
        "message": "Local variable 'mockData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 18,
        "type": "error",
        "message": "Local variable 'mockRequestData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 45,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 18,
        "type": "error",
        "message": "Local variable 'mockResponseData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 60,
        "column": 5,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 60,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'MockData'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 62,
        "column": 25,
        "type": "error",
        "message": "Field isDecoded has the same name as a method",
        "source": "AvoidFieldNameMatchingMethodName"
      },
      {
        "line": 69,
        "column": 27,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      },
      {
        "line": 78,
        "column": 40,
        "type": "error",
        "message": "Parameter 'throwEx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/MultiMessageHandlerTest.java",
    "score": 1.5,
    "error_count": 17,
    "messages": [
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 35,
        "column": 24,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 29,
        "type": "error",
        "message": "Avoid excessively long variable names like multiMessageHandler",
        "source": "LongVariable"
      },
      {
        "line": 37,
        "column": 29,
        "type": "error",
        "message": "Local variable 'multiMessageHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 22,
        "type": "error",
        "message": "Local variable 'multiMessage' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 33,
        "type": "error",
        "message": "Avoid excessively long variable names like channelArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 42,
        "column": 33,
        "type": "error",
        "message": "Local variable 'channelArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like objectArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 43,
        "column": 32,
        "type": "error",
        "message": "Local variable 'objectArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 16,
        "type": "error",
        "message": "Local variable 'obj' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 26,
        "type": "error",
        "message": "Local variable 'runtimeException' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 60,
        "column": 35,
        "type": "error",
        "message": "Avoid excessively long variable names like throwableArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 60,
        "column": 35,
        "type": "error",
        "message": "Local variable 'throwableArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/codec/CodecAdapterTest.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 23,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 23,
        "column": 8,
        "type": "error",
        "message": "The class 'CodecAdapterTest' might be a test class, but it contains no test cases.",
        "source": "TestClassWithoutTestCases"
      },
      {
        "line": 26,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/codec/DeprecatedExchangeCodec.java",
    "score": 0.0,
    "error_count": 150,
    "messages": [
      {
        "line": 42,
        "column": 7,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 42,
        "column": 7,
        "type": "error",
        "message": "Possible God Class (WMC=83, ATFD=59, TCC=2.646%)",
        "source": "GodClass"
      },
      {
        "line": 42,
        "column": 7,
        "type": "error",
        "message": "The class 'DeprecatedExchangeCodec' has a total cyclomatic complexity of 83 (highest 15).",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 42,
        "column": 84,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 45,
        "column": 32,
        "type": "error",
        "message": "Avoid protected fields in a final class.  Change to private or package access.",
        "source": "AvoidProtectedFieldInFinalClass"
      },
      {
        "line": 47,
        "column": 34,
        "type": "error",
        "message": "Avoid protected fields in a final class.  Change to private or package access.",
        "source": "AvoidProtectedFieldInFinalClass"
      },
      {
        "line": 48,
        "column": 33,
        "type": "error",
        "message": "Avoid protected fields in a final class.  Change to private or package access.",
        "source": "AvoidProtectedFieldInFinalClass"
      },
      {
        "line": 49,
        "column": 33,
        "type": "error",
        "message": "Avoid protected fields in a final class.  Change to private or package access.",
        "source": "AvoidProtectedFieldInFinalClass"
      },
      {
        "line": 51,
        "column": 33,
        "type": "error",
        "message": "Avoid protected fields in a final class.  Change to private or package access.",
        "source": "AvoidProtectedFieldInFinalClass"
      },
      {
        "line": 52,
        "column": 33,
        "type": "error",
        "message": "Avoid protected fields in a final class.  Change to private or package access.",
        "source": "AvoidProtectedFieldInFinalClass"
      },
      {
        "line": 53,
        "column": 33,
        "type": "error",
        "message": "Avoid protected fields in a final class.  Change to private or package access.",
        "source": "AvoidProtectedFieldInFinalClass"
      },
      {
        "line": 54,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like SERIALIZATION_MASK",
        "source": "LongVariable"
      },
      {
        "line": 54,
        "column": 32,
        "type": "error",
        "message": "Avoid protected fields in a final class.  Change to private or package access.",
        "source": "AvoidProtectedFieldInFinalClass"
      },
      {
        "line": 55,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 61,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 61,
        "column": 54,
        "type": "error",
        "message": "Avoid variables with short names like os",
        "source": "ShortVariable"
      },
      {
        "line": 61,
        "column": 54,
        "type": "error",
        "message": "Parameter 'os' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 61,
        "column": 65,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 71,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 71,
        "column": 55,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 71,
        "column": 55,
        "type": "error",
        "message": "Parameter 'is' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 13,
        "type": "error",
        "message": "Local variable 'readable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 78,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, InputStream, int, byte[])' has a cognitive complexity of 19, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 78,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, InputStream, int, byte[])' has a cyclomatic complexity of 15.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 78,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, InputStream, int, byte[])' has an NPath complexity of 480, current threshold is 200",
        "source": "NPathComplexity"
      },
      {
        "line": 78,
        "column": 37,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 58,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 78,
        "column": 66,
        "type": "error",
        "message": "Parameter 'readable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 82,
        "column": 17,
        "type": "error",
        "message": "Local variable 'length' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 84,
        "column": 17,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'header'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 89,
        "column": 48,
        "type": "error",
        "message": "Local variable 'bis' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 54,
        "type": "error",
        "message": "Useless parentheses.",
        "source": "UselessParentheses"
      },
      {
        "line": 95,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 99,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 103,
        "column": 13,
        "type": "error",
        "message": "Local variable 'len' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 106,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like tt",
        "source": "ShortVariable"
      },
      {
        "line": 106,
        "column": 13,
        "type": "error",
        "message": "Local variable 'tt' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 108,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 113,
        "column": 13,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'is'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 113,
        "column": 13,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 125,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 131,
        "column": 22,
        "type": "error",
        "message": "The method 'decodeBody(Channel, InputStream, byte[])' has a cognitive complexity of 22, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 131,
        "column": 22,
        "type": "error",
        "message": "The method 'decodeBody(Channel, InputStream, byte[])' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 131,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 131,
        "column": 62,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 131,
        "column": 62,
        "type": "error",
        "message": "Parameter 'is' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 131,
        "column": 73,
        "type": "error",
        "message": "Parameter 'header' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 132,
        "column": 14,
        "type": "error",
        "message": "Local variable 'flag' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 132,
        "column": 14,
        "type": "error",
        "message": "Use one line for each declaration, it enhances code readability.",
        "source": "OneDeclarationPerLine"
      },
      {
        "line": 132,
        "column": 32,
        "type": "error",
        "message": "Local variable 'proto' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 134,
        "column": 14,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 134,
        "column": 14,
        "type": "error",
        "message": "Local variable 'id' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 137,
        "column": 22,
        "type": "error",
        "message": "Local variable 'res' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 142,
        "column": 18,
        "type": "error",
        "message": "Local variable 'status' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 145,
        "column": 29,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 145,
        "column": 29,
        "type": "error",
        "message": "Local variable 'in' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 159,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 163,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 166,
        "column": 21,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 173,
        "column": 29,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 173,
        "column": 29,
        "type": "error",
        "message": "Local variable 'in' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 183,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 192,
        "column": 42,
        "type": "error",
        "message": "Avoid variables with short names like id",
        "source": "ShortVariable"
      },
      {
        "line": 192,
        "column": 42,
        "type": "error",
        "message": "Parameter 'id' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 193,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 195,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 195,
        "column": 13,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 196,
        "column": 17,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 198,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 198,
        "column": 13,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 202,
        "column": 42,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 202,
        "column": 64,
        "type": "error",
        "message": "Avoid variables with short names like os",
        "source": "ShortVariable"
      },
      {
        "line": 202,
        "column": 64,
        "type": "error",
        "message": "Parameter 'os' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 202,
        "column": 76,
        "type": "error",
        "message": "Parameter 'req' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 203,
        "column": 23,
        "type": "error",
        "message": "Local variable 'serialization' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 205,
        "column": 16,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 212,
        "column": 29,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 213,
        "column": 28,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 219,
        "column": 37,
        "type": "error",
        "message": "Local variable 'bos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 220,
        "column": 22,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 229,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 238,
        "column": 20,
        "type": "error",
        "message": "The method 'encodeResponse(Channel, OutputStream, Response)' has a cognitive complexity of 18, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 238,
        "column": 20,
        "type": "error",
        "message": "The method 'encodeResponse(Channel, OutputStream, Response)' has a cyclomatic complexity of 15.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 238,
        "column": 43,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 238,
        "column": 65,
        "type": "error",
        "message": "Avoid variables with short names like os",
        "source": "ShortVariable"
      },
      {
        "line": 238,
        "column": 65,
        "type": "error",
        "message": "Parameter 'os' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 238,
        "column": 78,
        "type": "error",
        "message": "Parameter 'res' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 240,
        "column": 27,
        "type": "error",
        "message": "Local variable 'serialization' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 242,
        "column": 20,
        "type": "error",
        "message": "Local variable 'header' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 247,
        "column": 36,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 249,
        "column": 18,
        "type": "error",
        "message": "Local variable 'status' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 254,
        "column": 41,
        "type": "error",
        "message": "Local variable 'bos' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 255,
        "column": 26,
        "type": "error",
        "message": "Local variable 'out' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 263,
        "column": 20,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 268,
        "column": 20,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 274,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 279,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 281,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like r",
        "source": "ShortVariable"
      },
      {
        "line": 281,
        "column": 30,
        "type": "error",
        "message": "Local variable 'r' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 288,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 293,
        "column": 17,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 295,
        "column": 24,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 297,
        "column": 24,
        "type": "error",
        "message": "An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.",
        "source": "AvoidInstanceofChecksInCatchClause"
      },
      {
        "line": 300,
        "column": 27,
        "type": "error",
        "message": "Avoid throwing raw exception types.",
        "source": "AvoidThrowingRawExceptionTypes"
      },
      {
        "line": 305,
        "column": 45,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 305,
        "column": 45,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 310,
        "column": 54,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 310,
        "column": 54,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 314,
        "column": 56,
        "type": "error",
        "message": "The String literal \"Read object failed.\" appears 5 times in this file; the first occurrence is on line 314",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 318,
        "column": 52,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 318,
        "column": 52,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 326,
        "column": 53,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 326,
        "column": 53,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 334,
        "column": 44,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 334,
        "column": 56,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 338,
        "column": 47,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 338,
        "column": 59,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 343,
        "column": 53,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 343,
        "column": 65,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 347,
        "column": 51,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 347,
        "column": 63,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 351,
        "column": 52,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 351,
        "column": 64,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 355,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 355,
        "column": 62,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 355,
        "column": 62,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 359,
        "column": 67,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 359,
        "column": 67,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 368,
        "column": 71,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 368,
        "column": 71,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 376,
        "column": 69,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 376,
        "column": 69,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 380,
        "column": 70,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 380,
        "column": 70,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 384,
        "column": 49,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 384,
        "column": 70,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 384,
        "column": 70,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 388,
        "column": 39,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 388,
        "column": 61,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 388,
        "column": 73,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 392,
        "column": 42,
        "type": "error",
        "message": "Avoid unused method parameters such as 'channel'.",
        "source": "UnusedFormalParameter"
      },
      {
        "line": 392,
        "column": 64,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 392,
        "column": 76,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 397,
        "column": 70,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 397,
        "column": 82,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 401,
        "column": 68,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 401,
        "column": 80,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 405,
        "column": 69,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 405,
        "column": 81,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/codec/DeprecatedTelnetCodec.java",
    "score": 0.0,
    "error_count": 113,
    "messages": [
      {
        "line": 41,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.SIDE_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.CHARSET_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 44,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 44,
        "column": 8,
        "type": "error",
        "message": "Possible God Class (WMC=94, ATFD=45, TCC=8.333%)",
        "source": "GodClass"
      },
      {
        "line": 44,
        "column": 8,
        "type": "error",
        "message": "The class 'DeprecatedTelnetCodec' has a total cyclomatic complexity of 94 (highest 49).",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 46,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 52,
        "column": 33,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 52,
        "column": 33,
        "type": "error",
        "message": "Avoid variables with short names like UP",
        "source": "ShortVariable"
      },
      {
        "line": 54,
        "column": 33,
        "type": "error",
        "message": "Array initialization can be written shorter",
        "source": "UseShortArrayInitializer"
      },
      {
        "line": 60,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'checkPayload(Channel, long)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 60,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 52,
        "type": "error",
        "message": "Parameter 'size' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 25,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 66,
        "column": 25,
        "type": "error",
        "message": "Local variable 'e' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 28,
        "type": "error",
        "message": "The method 'getCharset(Channel)' has a cognitive complexity of 17, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 72,
        "column": 47,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 74,
        "column": 20,
        "type": "error",
        "message": "Local variable 'attribute' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 78,
        "column": 36,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 79,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 82,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 84,
        "column": 17,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 24,
        "type": "error",
        "message": "Local variable 'parameter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 25,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 90,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 91,
        "column": 25,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 97,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 98,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 99,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 104,
        "column": 27,
        "type": "error",
        "message": "The method 'toString(byte[], Charset)' has a cognitive complexity of 27, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 104,
        "column": 27,
        "type": "error",
        "message": "The method 'toString(byte[], Charset)' has a cyclomatic complexity of 18.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 104,
        "column": 43,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 60,
        "type": "error",
        "message": "Parameter 'charset' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 105,
        "column": 16,
        "type": "error",
        "message": "Local variable 'copy' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 108,
        "column": 18,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 108,
        "column": 18,
        "type": "error",
        "message": "Local variable 'b' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 109,
        "column": 22,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 114,
        "column": 21,
        "type": "error",
        "message": "This if statement could be combined with its parent",
        "source": "CollapsibleIfStatements"
      },
      {
        "line": 118,
        "column": 29,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 120,
        "column": 21,
        "type": "error",
        "message": "Avoid reassigning the loop control variable 'i'",
        "source": "AvoidReassigningLoopVariables"
      },
      {
        "line": 122,
        "column": 21,
        "type": "error",
        "message": "Avoid reassigning the loop control variable 'i'",
        "source": "AvoidReassigningLoopVariables"
      },
      {
        "line": 124,
        "column": 21,
        "type": "error",
        "message": "Avoid reassigning the loop control variable 'i'",
        "source": "AvoidReassigningLoopVariables"
      },
      {
        "line": 128,
        "column": 17,
        "type": "error",
        "message": "Avoid reassigning the loop control variable 'i'",
        "source": "AvoidReassigningLoopVariables"
      },
      {
        "line": 134,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 139,
        "column": 44,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 139,
        "column": 60,
        "type": "error",
        "message": "Parameter 'command' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 44,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 60,
        "type": "error",
        "message": "Parameter 'command' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 147,
        "column": 13,
        "type": "error",
        "message": "Local variable 'offset' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 150,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 156,
        "column": 44,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 16,
        "type": "error",
        "message": "Local variable 'side' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 158,
        "column": 13,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 159,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 160,
        "column": 20,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 161,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 163,
        "column": 31,
        "type": "error",
        "message": "Local variable 'address' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 164,
        "column": 17,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 165,
        "column": 21,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 175,
        "column": 32,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 175,
        "column": 54,
        "type": "error",
        "message": "Parameter 'output' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 178,
        "column": 17,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'message'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 180,
        "column": 20,
        "type": "error",
        "message": "Local variable 'msgData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 184,
        "column": 26,
        "type": "error",
        "message": "Local variable 'objectOutput' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 190,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 190,
        "column": 55,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 190,
        "column": 55,
        "type": "error",
        "message": "Parameter 'is' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 191,
        "column": 13,
        "type": "error",
        "message": "Local variable 'readable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 192,
        "column": 16,
        "type": "error",
        "message": "Local variable 'message' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 198,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, InputStream, int, byte[])' has a NCSS line count of 95.",
        "source": "NcssCount"
      },
      {
        "line": 198,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, InputStream, int, byte[])' has a cognitive complexity of 86, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 198,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, InputStream, int, byte[])' has a cyclomatic complexity of 49.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 198,
        "column": 22,
        "type": "error",
        "message": "The method 'decode(Channel, InputStream, int, byte[])' has an NPath complexity of 75064320, current threshold is 200",
        "source": "NPathComplexity"
      },
      {
        "line": 198,
        "column": 37,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 198,
        "column": 58,
        "type": "error",
        "message": "Avoid variables with short names like is",
        "source": "ShortVariable"
      },
      {
        "line": 198,
        "column": 66,
        "type": "error",
        "message": "Parameter 'readable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 200,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 204,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 207,
        "column": 44,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 209,
        "column": 25,
        "type": "error",
        "message": "Local variable 'doublechar' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 214,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 217,
        "column": 21,
        "type": "error",
        "message": "Local variable 'command' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 223,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 227,
        "column": 17,
        "type": "error",
        "message": "Avoid variables with short names like up",
        "source": "ShortVariable"
      },
      {
        "line": 227,
        "column": 17,
        "type": "error",
        "message": "Local variable 'up' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 228,
        "column": 17,
        "type": "error",
        "message": "Local variable 'down' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 230,
        "column": 13,
        "type": "error",
        "message": "Avoid using implementation types like 'LinkedList'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 230,
        "column": 32,
        "type": "error",
        "message": "Local variable 'history' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 231,
        "column": 36,
        "type": "error",
        "message": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()",
        "source": "UseCollectionIsEmpty"
      },
      {
        "line": 232,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 235,
        "column": 21,
        "type": "error",
        "message": "Local variable 'old' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 255,
        "column": 28,
        "type": "error",
        "message": "Avoid variables with short names like ov",
        "source": "ShortVariable"
      },
      {
        "line": 255,
        "column": 28,
        "type": "error",
        "message": "Local variable 'ov' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 256,
        "column": 35,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 274,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 276,
        "column": 21,
        "type": "error",
        "message": "Local variable 'command' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 282,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 286,
        "column": 21,
        "type": "error",
        "message": "Local variable 'command' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 293,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 295,
        "column": 9,
        "type": "error",
        "message": "Avoid using implementation types like 'LinkedList'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 296,
        "column": 17,
        "type": "error",
        "message": "Local variable 'index' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 298,
        "column": 32,
        "type": "error",
        "message": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()",
        "source": "UseCollectionIsEmpty"
      },
      {
        "line": 299,
        "column": 20,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 301,
        "column": 24,
        "type": "error",
        "message": "Avoid variables with short names like b1",
        "source": "ShortVariable"
      },
      {
        "line": 301,
        "column": 24,
        "type": "error",
        "message": "Local variable 'b1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 303,
        "column": 28,
        "type": "error",
        "message": "Avoid variables with short names like b2",
        "source": "ShortVariable"
      },
      {
        "line": 303,
        "column": 28,
        "type": "error",
        "message": "Local variable 'b2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 306,
        "column": 21,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'message'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 312,
        "column": 16,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 315,
        "column": 41,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new LinkedList<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 318,
        "column": 17,
        "type": "error",
        "message": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()",
        "source": "UseCollectionIsEmpty"
      },
      {
        "line": 323,
        "column": 38,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/dispatcher/ChannelEventRunnableTest.java",
    "score": 0.5,
    "error_count": 19,
    "messages": [
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 36,
        "column": 45,
        "type": "error",
        "message": "Local variable 'values' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 24,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 30,
        "type": "error",
        "message": "Local variable 'connectRunnable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 30,
        "type": "error",
        "message": "Avoid excessively long variable names like disconnectRunnable",
        "source": "LongVariable"
      },
      {
        "line": 42,
        "column": 30,
        "type": "error",
        "message": "Local variable 'disconnectRunnable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 30,
        "type": "error",
        "message": "Local variable 'sentRunnable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 30,
        "type": "error",
        "message": "Local variable 'receivedRunnable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 45,
        "column": 30,
        "type": "error",
        "message": "Local variable 'caughtRunnable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 33,
        "type": "error",
        "message": "Avoid excessively long variable names like channelArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 53,
        "column": 33,
        "type": "error",
        "message": "Local variable 'channelArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 54,
        "column": 35,
        "type": "error",
        "message": "Avoid excessively long variable names like throwableArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 54,
        "column": 35,
        "type": "error",
        "message": "Local variable 'throwableArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 55,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like objectArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 55,
        "column": 32,
        "type": "error",
        "message": "Local variable 'objectArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/dispatcher/ChannelHandlersTest.java",
    "score": 3.5,
    "error_count": 13,
    "messages": [
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 31,
        "column": 25,
        "type": "error",
        "message": "Local variable 'instance1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 32,
        "column": 25,
        "type": "error",
        "message": "Local variable 'instance2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 24,
        "type": "error",
        "message": "Local variable 'channelHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 49,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 37,
        "column": 24,
        "type": "error",
        "message": "Local variable 'wrappedHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 29,
        "type": "error",
        "message": "Avoid excessively long variable names like multiMessageHandler",
        "source": "LongVariable"
      },
      {
        "line": 40,
        "column": 29,
        "type": "error",
        "message": "Local variable 'multiMessageHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 24,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/utils/PayloadDropperTest.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 27,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 27,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 28,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "Avoid excessively long variable names like requestWithoutData",
        "source": "LongVariable"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "Local variable 'requestWithoutData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 34,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 18,
        "type": "error",
        "message": "Avoid excessively long variable names like responseWithoutData",
        "source": "LongVariable"
      },
      {
        "line": 36,
        "column": 18,
        "type": "error",
        "message": "Local variable 'responseWithoutData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 16,
        "type": "error",
        "message": "Local variable 'object' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/utils/UrlUtilsTest.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 24,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 24,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 26,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 26,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 27,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 28,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 29,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url3' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 30,
        "column": 64,
        "type": "error",
        "message": "Number 30000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 31,
        "column": 64,
        "type": "error",
        "message": "Number 50000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 36,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 37,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 61,
        "type": "error",
        "message": "Number 10000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/jetty/JettyHttpBinder.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 32,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 30,
        "column": 49,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/jetty/JettyHttpServer.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_THREADS'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.THREADS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 41,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 43,
        "column": 20,
        "type": "error",
        "message": "Field 'server' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 45,
        "column": 17,
        "type": "error",
        "message": "Field 'url' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 47,
        "column": 32,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 56,
        "column": 13,
        "type": "error",
        "message": "Local variable 'threads' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 57,
        "column": 26,
        "type": "error",
        "message": "Local variable 'threadPool' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 64,
        "column": 25,
        "type": "error",
        "message": "Local variable 'connector' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 16,
        "type": "error",
        "message": "Local variable 'bindIp' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 74,
        "column": 24,
        "type": "error",
        "message": "Local variable 'servletHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 23,
        "type": "error",
        "message": "Local variable 'servletHolder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 31,
        "type": "error",
        "message": "Local variable 'context' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 87,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 103,
        "column": 22,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 104,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/jetty/JettyLoggerAdapter.java",
    "score": 0.0,
    "error_count": 28,
    "messages": [
      {
        "line": 27,
        "column": 56,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 38,
        "column": 40,
        "type": "error",
        "message": "Parameter 'clazz' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 42,
        "column": 38,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 39,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 29,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 44,
        "type": "error",
        "message": "Parameter 'objects' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 32,
        "type": "error",
        "message": "Parameter 'throwable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 29,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 44,
        "type": "error",
        "message": "Parameter 'throwable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 29,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 44,
        "type": "error",
        "message": "Parameter 'objects' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 86,
        "column": 32,
        "type": "error",
        "message": "Parameter 'throwable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 93,
        "column": 29,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 93,
        "column": 44,
        "type": "error",
        "message": "Parameter 'throwable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 105,
        "column": 41,
        "type": "error",
        "message": "Parameter 'enabled' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 30,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 45,
        "type": "error",
        "message": "Parameter 'objects' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 117,
        "column": 33,
        "type": "error",
        "message": "Parameter 'throwable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 124,
        "column": 30,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 124,
        "column": 45,
        "type": "error",
        "message": "Parameter 'throwable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 131,
        "column": 34,
        "type": "error",
        "message": "Parameter 'throwable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 137,
        "column": 49,
        "type": "error",
        "message": "Parameter 'args' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 138,
        "column": 9,
        "type": "error",
        "message": "Avoid reassigning parameters such as 'msg'",
        "source": "AvoidReassigningParameters"
      },
      {
        "line": 139,
        "column": 16,
        "type": "error",
        "message": "Local variable 'braces' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 140,
        "column": 23,
        "type": "error",
        "message": "Local variable 'builder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 142,
        "column": 21,
        "type": "error",
        "message": "Local variable 'arg' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 143,
        "column": 17,
        "type": "error",
        "message": "Local variable 'bracesIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/servlet/BootstrapListener.java",
    "score": 8.0,
    "error_count": 4,
    "messages": [
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 56,
        "type": "error",
        "message": "Avoid excessively long variable names like servletContextEvent",
        "source": "LongVariable"
      },
      {
        "line": 28,
        "column": 56,
        "type": "error",
        "message": "Parameter 'servletContextEvent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 33,
        "column": 54,
        "type": "error",
        "message": "Avoid excessively long variable names like servletContextEvent",
        "source": "LongVariable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/servlet/DispatcherServlet.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 35,
        "column": 84,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 36,
        "column": 38,
        "type": "error",
        "message": "The static field name 'INSTANCE' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 38,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 39,
        "column": 9,
        "type": "error",
        "message": "Possible unsafe assignment to non-final static field 'INSTANCE' in a constructor.",
        "source": "AssignmentToNonFinalStatic"
      },
      {
        "line": 39,
        "column": 9,
        "type": "error",
        "message": "Unnecessary qualifier 'DispatcherServlet': 'INSTANCE' is already in scope because it is declared in an enclosing type",
        "source": "UnnecessaryFullyQualifiedName"
      },
      {
        "line": 42,
        "column": 43,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 61,
        "type": "error",
        "message": "Parameter 'processor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 46,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 47,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 55,
        "column": 76,
        "type": "error",
        "message": "Parameter 'response' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 21,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/servlet/ServletHttpBinder.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 32,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 30,
        "column": 49,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/servlet/ServletHttpServer.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 26,
        "column": 34,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 26,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/servlet/ServletManager.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 29,
        "type": "error",
        "message": "Avoid excessively long variable names like EXTERNAL_SERVER_PORT",
        "source": "LongVariable"
      },
      {
        "line": 32,
        "column": 82,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 38,
        "column": 39,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 38,
        "column": 60,
        "type": "error",
        "message": "Parameter 'servletContext' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 42,
        "column": 42,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 49,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/support/AbstractHttpServer.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 41,
        "column": 35,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 52,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 63,
        "column": 17,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      },
      {
        "line": 101,
        "column": 32,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      },
      {
        "line": 102,
        "column": 16,
        "type": "error",
        "message": "Return an empty collection rather than null.",
        "source": "ReturnEmptyCollectionRatherThanNull"
      },
      {
        "line": 106,
        "column": 20,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      },
      {
        "line": 116,
        "column": 27,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      },
      {
        "line": 121,
        "column": 17,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      },
      {
        "line": 126,
        "column": 17,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      },
      {
        "line": 131,
        "column": 17,
        "type": "error",
        "message": "An empty method in an abstract class should be abstract instead",
        "source": "EmptyMethodInAbstractClassShouldBeAbstract"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/tomcat/TomcatHttpBinder.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 24,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 27,
        "column": 32,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 27,
        "column": 49,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/tomcat/TomcatHttpServer.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_THREADS'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.THREADS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.ACCEPTS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 46,
        "column": 33,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 51,
        "column": 16,
        "type": "error",
        "message": "Local variable 'baseDir' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 54,
        "column": 19,
        "type": "error",
        "message": "Local variable 'connector' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 65,
        "column": 17,
        "type": "error",
        "message": "Local variable 'context' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 93,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 94,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/test/java/org/apache/dubbo/remoting/http/jetty/JettyHttpBinderTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.core.Is.is'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 39,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 20,
        "type": "error",
        "message": "Local variable 'httpServer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 80,
        "type": "error",
        "message": "Parameter 'response' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 16,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/test/java/org/apache/dubbo/remoting/http/jetty/JettyLoggerAdapterTest.java",
    "score": 0.0,
    "error_count": 45,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.is'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.ArgumentMatchers.anyString'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 41,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.verify'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 44,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 44,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 48,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 51,
        "column": 20,
        "type": "error",
        "message": "Local variable 'httpServer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 80,
        "type": "error",
        "message": "Parameter 'response' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 67,
        "column": 16,
        "type": "error",
        "message": "Local variable 'successLogger' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 18,
        "type": "error",
        "message": "Local variable 'clazz' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 28,
        "type": "error",
        "message": "Avoid excessively long variable names like jettyLoggerAdapter",
        "source": "LongVariable"
      },
      {
        "line": 69,
        "column": 28,
        "type": "error",
        "message": "Local variable 'jettyLoggerAdapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 71,
        "column": 15,
        "type": "error",
        "message": "Local variable 'loggerField' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 9,
        "type": "error",
        "message": "You should not modify visibility of constructors, methods or fields using setAccessible()",
        "source": "AvoidAccessibilityAlteration"
      },
      {
        "line": 80,
        "column": 33,
        "type": "error",
        "message": "The String literal \"warn\" appears 4 times in this file; the first occurrence is on line 80",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 81,
        "column": 33,
        "type": "error",
        "message": "The String literal \"info\" appears 4 times in this file; the first occurrence is on line 81",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 82,
        "column": 34,
        "type": "error",
        "message": "The String literal \"debug\" appears 4 times in this file; the first occurrence is on line 82",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 84,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 85,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 86,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 88,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 89,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 90,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 93,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 94,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 95,
        "column": 9,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 100,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 101,
        "column": 28,
        "type": "error",
        "message": "Local variable 'loggerAdapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 102,
        "column": 43,
        "type": "error",
        "message": "Local variable 'logger' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 108,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 109,
        "column": 28,
        "type": "error",
        "message": "Local variable 'loggerAdapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 116,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 117,
        "column": 18,
        "type": "error",
        "message": "Local variable 'clazz' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 118,
        "column": 16,
        "type": "error",
        "message": "Local variable 'newInstance' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 120,
        "column": 16,
        "type": "error",
        "message": "Local variable 'method' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 121,
        "column": 9,
        "type": "error",
        "message": "You should not modify visibility of constructors, methods or fields using setAccessible()",
        "source": "AvoidAccessibilityAlteration"
      },
      {
        "line": 123,
        "column": 16,
        "type": "error",
        "message": "Local variable 'print' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-http/src/test/java/org/apache/dubbo/remoting/http/tomcat/TomcatHttpBinderTest.java",
    "score": 4.5,
    "error_count": 11,
    "messages": [
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.core.Is.is'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 39,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 43,
        "column": 20,
        "type": "error",
        "message": "Local variable 'httpServer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 45,
        "column": 80,
        "type": "error",
        "message": "Parameter 'response' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 16,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyBackedChannelBuffer.java",
    "score": 0.0,
    "error_count": 90,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "This class has a bunch of public methods and attributes",
        "source": "ExcessivePublicCount"
      },
      {
        "line": 29,
        "column": 64,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 33,
        "column": 74,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 35,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 49,
        "column": 46,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 61,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 44,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 53,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 73,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 73,
        "column": 48,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 60,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 88,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 50,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 59,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 40,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 44,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 53,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 112,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 112,
        "column": 48,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 60,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 123,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 130,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 130,
        "column": 48,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 130,
        "column": 57,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 136,
        "column": 40,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 136,
        "column": 51,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 181,
        "column": 41,
        "type": "error",
        "message": "Parameter 'writableBytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 187,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 187,
        "column": 44,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 193,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 193,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 200,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 200,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 200,
        "column": 60,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 241,
        "column": 34,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 247,
        "column": 34,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 247,
        "column": 43,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 247,
        "column": 57,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 253,
        "column": 38,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 259,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 266,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 266,
        "column": 50,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 277,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 277,
        "column": 50,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 277,
        "column": 64,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 282,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 289,
        "column": 40,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 313,
        "column": 33,
        "type": "error",
        "message": "Parameter 'readerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 319,
        "column": 40,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 319,
        "column": 49,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 325,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 325,
        "column": 44,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 331,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 331,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 338,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 338,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 338,
        "column": 60,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 349,
        "column": 30,
        "type": "error",
        "message": "Parameter 'readerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 349,
        "column": 47,
        "type": "error",
        "message": "Parameter 'writerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 355,
        "column": 31,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 379,
        "column": 31,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 385,
        "column": 35,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 391,
        "column": 35,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 391,
        "column": 44,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 391,
        "column": 55,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 397,
        "column": 39,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 403,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 410,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 410,
        "column": 51,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 421,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 421,
        "column": 51,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 421,
        "column": 65,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 423,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 430,
        "column": 39,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 430,
        "column": 48,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 442,
        "column": 33,
        "type": "error",
        "message": "Parameter 'writerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 448,
        "column": 40,
        "type": "error",
        "message": "Avoid variables with short names like o",
        "source": "ShortVariable"
      },
      {
        "line": 448,
        "column": 40,
        "type": "error",
        "message": "Parameter 'o' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyBackedChannelBufferFactory.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 39,
        "column": 40,
        "type": "error",
        "message": "Parameter 'capacity' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 43,
        "type": "error",
        "message": "Parameter 'array' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 54,
        "type": "error",
        "message": "Parameter 'offset' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 66,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 46,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 47,
        "type": "error",
        "message": "Parameter 'nioBuffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyChannel.java",
    "score": 0.0,
    "error_count": 47,
    "messages": [
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 44,
        "column": 122,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 48,
        "column": 73,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 50,
        "column": 58,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 71,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 50,
        "column": 91,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 25,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getOrAddChannel(Channel, URL, ChannelHandler)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 58,
        "column": 73,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 58,
        "column": 73,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 81,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 101,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 64,
        "column": 26,
        "type": "error",
        "message": "Avoid variables with short names like nc",
        "source": "ShortVariable"
      },
      {
        "line": 64,
        "column": 26,
        "type": "error",
        "message": "Local variable 'nc' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'removeChannelIfDisconnected(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 75,
        "column": 77,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 75,
        "column": 77,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 97,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 97,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 103,
        "column": 27,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 108,
        "column": 23,
        "type": "error",
        "message": "Local variable 'cause' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 112,
        "column": 11,
        "type": "error",
        "message": "Exception thrown at line 110 is caught in this block.",
        "source": "ExceptionAsFlowControl"
      },
      {
        "line": 112,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 126,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 127,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 131,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 132,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 136,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 137,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 144,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 145,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 150,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 155,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 160,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 160,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 169,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 182,
        "column": 34,
        "type": "error",
        "message": "Parameter 'obj' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 184,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 187,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 192,
        "column": 25,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 193,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 197,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 199,
        "column": 22,
        "type": "error",
        "message": "Local variable 'other' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 202,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 205,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java",
    "score": 0.0,
    "error_count": 26,
    "messages": [
      {
        "line": 42,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.LoggerCodeConstants.TRANSPORT_CLIENT_CONNECT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 43,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.LoggerCodeConstants.TRANSPORT_FAILED_CONNECT_PROVIDER'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 50,
        "column": 47,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 78,
        "column": 35,
        "type": "error",
        "message": "Local variable 'adapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 79,
        "column": 33,
        "type": "error",
        "message": "Local variable 'pipeline' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 20,
        "type": "error",
        "message": "The method 'doConnect()' has a cognitive complexity of 16, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 89,
        "column": 20,
        "type": "error",
        "message": "The method 'doConnect()' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 90,
        "column": 14,
        "type": "error",
        "message": "Local variable 'start' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 91,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 93,
        "column": 21,
        "type": "error",
        "message": "Local variable 'ret' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 96,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 100,
        "column": 29,
        "type": "error",
        "message": "Local variable 'oldChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 100,
        "column": 42,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 112,
        "column": 25,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 119,
        "column": 29,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 119,
        "column": 56,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 123,
        "column": 25,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 127,
        "column": 27,
        "type": "error",
        "message": "Local variable 'cause' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 129,
        "column": 35,
        "type": "error",
        "message": "Local variable 'remotingException' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 138,
        "column": 35,
        "type": "error",
        "message": "Local variable 'remotingException' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 159,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 160,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 175,
        "column": 17,
        "type": "error",
        "message": "Avoid variables with short names like c",
        "source": "ShortVariable"
      },
      {
        "line": 175,
        "column": 17,
        "type": "error",
        "message": "Local variable 'c' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 177,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 182,
        "column": 13,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getNettyChannel()'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyCodecAdapter.java",
    "score": 0.0,
    "error_count": 39,
    "messages": [
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.BUFFER_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.DEFAULT_BUFFER_SIZE'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.MAX_BUFFER_SIZE'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.MIN_BUFFER_SIZE'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 59,
        "column": 37,
        "type": "error",
        "message": "Parameter 'codec' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 48,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 94,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 63,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 63,
        "column": 13,
        "type": "error",
        "message": "Local variable 'b' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 76,
        "column": 13,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 76,
        "column": 13,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 79,
        "column": 68,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 79,
        "column": 68,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 79,
        "column": 79,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 80,
        "column": 60,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 82,
        "column": 26,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 92,
        "column": 13,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 92,
        "column": 13,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 98,
        "column": 21,
        "type": "error",
        "message": "The method 'messageReceived(ChannelHandlerContext, MessageEvent)' has a cognitive complexity of 24, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 98,
        "column": 21,
        "type": "error",
        "message": "The method 'messageReceived(ChannelHandlerContext, MessageEvent)' has a cyclomatic complexity of 14.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 98,
        "column": 21,
        "type": "error",
        "message": "The method 'messageReceived(ChannelHandlerContext, MessageEvent)' has an NPath complexity of 208, current threshold is 200",
        "source": "NPathComplexity"
      },
      {
        "line": 98,
        "column": 59,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 77,
        "type": "error",
        "message": "Parameter 'event' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 20,
        "type": "error",
        "message": "Avoid variables with short names like o",
        "source": "ShortVariable"
      },
      {
        "line": 99,
        "column": 20,
        "type": "error",
        "message": "Local variable 'o' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 102,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 105,
        "column": 27,
        "type": "error",
        "message": "Local variable 'input' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 106,
        "column": 17,
        "type": "error",
        "message": "Local variable 'readable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 117,
        "column": 25,
        "type": "error",
        "message": "Local variable 'size' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 128,
        "column": 26,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 139,
        "column": 34,
        "type": "error",
        "message": "Access to field `EMPTY_BUFFER` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 139,
        "column": 34,
        "type": "error",
        "message": "The value assigned to field 'buffer' is never used (overwritten on lines 139, 147, 158 and 160)",
        "source": "UnusedAssignment"
      },
      {
        "line": 142,
        "column": 32,
        "type": "error",
        "message": "Access to field `NEED_MORE_INPUT` on foreign value `Codec2.DecodeResult` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 147,
        "column": 38,
        "type": "error",
        "message": "Access to field `EMPTY_BUFFER` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 147,
        "column": 38,
        "type": "error",
        "message": "The value assigned to field 'buffer' is never used (overwritten on lines 139, 147, 158 and 160)",
        "source": "UnusedAssignment"
      },
      {
        "line": 160,
        "column": 30,
        "type": "error",
        "message": "Access to field `EMPTY_BUFFER` on foreign value `` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 167,
        "column": 59,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 167,
        "column": 79,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 167,
        "column": 79,
        "type": "error",
        "message": "Parameter 'e' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyHandler.java",
    "score": 0.0,
    "error_count": 23,
    "messages": [
      {
        "line": 43,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 45,
        "column": 72,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 51,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 51,
        "column": 29,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 51,
        "column": 49,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 56,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 79,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 68,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 84,
        "column": 59,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 84,
        "column": 82,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 85,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 99,
        "column": 55,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 73,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 99,
        "column": 73,
        "type": "error",
        "message": "Parameter 'e' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 100,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 109,
        "column": 54,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 109,
        "column": 72,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 109,
        "column": 72,
        "type": "error",
        "message": "Parameter 'e' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 120,
        "column": 55,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 120,
        "column": 75,
        "type": "error",
        "message": "Avoid variables with short names like e",
        "source": "ShortVariable"
      },
      {
        "line": 120,
        "column": 75,
        "type": "error",
        "message": "Parameter 'e' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 121,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyHelper.java",
    "score": 0.0,
    "error_count": 21,
    "messages": [
      {
        "line": 26,
        "column": 7,
        "type": "error",
        "message": "This utility class has a non-private constructor",
        "source": "UseUtilityClass"
      },
      {
        "line": 29,
        "column": 31,
        "type": "error",
        "message": "Local variable 'factory' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'DubboLoggerFactory'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 38,
        "column": 50,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 43,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'DubboLogger'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 45,
        "column": 24,
        "type": "error",
        "message": "Field 'logger' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 47,
        "column": 9,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 47,
        "column": 9,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'DubboLogger(Logger)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 47,
        "column": 28,
        "type": "error",
        "message": "Parameter 'logger' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 34,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 77,
        "column": 34,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 77,
        "column": 49,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 82,
        "column": 33,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 87,
        "column": 33,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 87,
        "column": 48,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 33,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 97,
        "column": 33,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 97,
        "column": 48,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 102,
        "column": 34,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 107,
        "column": 34,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 107,
        "column": 49,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyServer.java",
    "score": 0.0,
    "error_count": 30,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "A high number of imports can indicate a high degree of coupling within an object.",
        "source": "ExcessiveImports"
      },
      {
        "line": 48,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.BACKLOG_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 49,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.IO_THREADS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 50,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.EVENT_LOOP_BOSS_POOL_NAME'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 51,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.EVENT_LOOP_WORKER_POOL_NAME'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 58,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 66,
        "column": 28,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 48,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 73,
        "column": 25,
        "type": "error",
        "message": "Local variable 'boss' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 74,
        "column": 25,
        "type": "error",
        "message": "Local variable 'worker' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 24,
        "type": "error",
        "message": "Local variable 'channelFactory' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 88,
        "column": 35,
        "type": "error",
        "message": "Local variable 'adapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 89,
        "column": 33,
        "type": "error",
        "message": "Local variable 'pipeline' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 105,
        "column": 20,
        "type": "error",
        "message": "The method 'doClose()' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 111,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 112,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 115,
        "column": 59,
        "type": "error",
        "message": "Local variable 'channels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 117,
        "column": 56,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 120,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 121,
        "column": 25,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 125,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 126,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 133,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 134,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 140,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 141,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 147,
        "column": 29,
        "type": "error",
        "message": "Local variable 'chs' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 147,
        "column": 46,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashSet<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 148,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 159,
        "column": 49,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyTransporter.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 36,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 31,
        "column": 56,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 36,
        "column": 31,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 36,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/exchange/support/header/HeartbeatHandlerTest.java",
    "score": 0.0,
    "error_count": 46,
    "messages": [
      {
        "line": 41,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 41,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 43,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 49,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 52,
        "column": 22,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 57,
        "column": 22,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 67,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 69,
        "column": 87,
        "type": "error",
        "message": "Number 56780 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 73,
        "column": 24,
        "type": "error",
        "message": "Local variable 'connect' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 74,
        "column": 24,
        "type": "error",
        "message": "Local variable 'disconnect' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 30,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 90,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 94,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 94,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 95,
        "column": 13,
        "type": "error",
        "message": "Local variable 'serverURL' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 87,
        "type": "error",
        "message": "Number 56785 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 100,
        "column": 24,
        "type": "error",
        "message": "Local variable 'connect' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 101,
        "column": 24,
        "type": "error",
        "message": "Local variable 'disconnect' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 102,
        "column": 30,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 108,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 109,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 115,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 117,
        "column": 87,
        "type": "error",
        "message": "Number 56790 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 121,
        "column": 24,
        "type": "error",
        "message": "Local variable 'connect' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 122,
        "column": 24,
        "type": "error",
        "message": "Local variable 'disconnect' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 123,
        "column": 30,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 125,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 132,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 135,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'TestHeartbeatHandler'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 135,
        "column": 5,
        "type": "error",
        "message": "The class 'TestHeartbeatHandler' might be a test class, but it contains no test cases.",
        "source": "TestClassWithoutTestCases"
      },
      {
        "line": 139,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like connectCountDownLatch",
        "source": "LongVariable"
      },
      {
        "line": 139,
        "column": 32,
        "type": "error",
        "message": "Field 'connectCountDownLatch' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 140,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like disconnectCountDownLatch",
        "source": "LongVariable"
      },
      {
        "line": 140,
        "column": 32,
        "type": "error",
        "message": "Field 'disconnectCountDownLatch' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 142,
        "column": 52,
        "type": "error",
        "message": "Avoid excessively long variable names like connectCountDownLatch",
        "source": "LongVariable"
      },
      {
        "line": 142,
        "column": 52,
        "type": "error",
        "message": "Parameter 'connectCountDownLatch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 142,
        "column": 90,
        "type": "error",
        "message": "Avoid excessively long variable names like disconnectCountDownLatch",
        "source": "LongVariable"
      },
      {
        "line": 142,
        "column": 90,
        "type": "error",
        "message": "Parameter 'disconnectCountDownLatch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 147,
        "column": 80,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 169,
        "column": 54,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 170,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 174,
        "column": 55,
        "type": "error",
        "message": "Parameter 'exception' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 175,
        "column": 13,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 178,
        "column": 54,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/dispatcher/FakeChannelHandlers.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 27,
        "column": 12,
        "type": "error",
        "message": "Avoid unnecessary constructors - the compiler will generate these for you",
        "source": "UnnecessaryConstructor"
      },
      {
        "line": 40,
        "column": 58,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 40,
        "column": 71,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/ClientReconnectTest.java",
    "score": 2.5,
    "error_count": 15,
    "messages": [
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 46,
        "column": 17,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 47,
        "column": 20,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 28,
        "type": "error",
        "message": "Local variable 'server' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 17,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 20,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 47,
        "type": "error",
        "message": "Number 20000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 61,
        "column": 28,
        "type": "error",
        "message": "Local variable 'server' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 35,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 45,
        "type": "error",
        "message": "Parameter 'heartbeat' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 43,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 83,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'HandlerAdapter'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/ClientToServerTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 47,
        "type": "error",
        "message": "Do not hard code the IP address LOCALHOST",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 49,
        "column": 28,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 50,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 31,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 62,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 67,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 68,
        "column": 35,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 15,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/ClientsTest.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 25,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 26,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.Matchers.containsString'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 27,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 28,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertNull'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 29,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.fail'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 46,
        "column": 20,
        "type": "error",
        "message": "Local variable 'name' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 53,
        "column": 16,
        "type": "error",
        "message": "Local variable 'name' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 60,
        "column": 20,
        "type": "error",
        "message": "Local variable 'name' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/Hello.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 33,
        "column": 25,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 32,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/NettyBackedChannelBufferTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 26,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 28,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 41,
        "column": 18,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 45,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 45,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 46,
        "column": 16,
        "type": "error",
        "message": "Local variable 'tmp1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 47,
        "column": 16,
        "type": "error",
        "message": "Local variable 'tmp2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 48,
        "column": 23,
        "type": "error",
        "message": "Local variable 'source' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 16,
        "type": "error",
        "message": "Local variable 'actual' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/NettyClientTest.java",
    "score": 0.5,
    "error_count": 19,
    "messages": [
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 37,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 27,
        "type": "error",
        "message": "Do not use non-final non-private static fields",
        "source": "MutableStaticState"
      },
      {
        "line": 38,
        "column": 27,
        "type": "error",
        "message": "Missing commented default access modifier on field 'server'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 39,
        "column": 16,
        "type": "error",
        "message": "Do not use non-final non-private static fields",
        "source": "MutableStaticState"
      },
      {
        "line": 39,
        "column": 16,
        "type": "error",
        "message": "Missing commented default access modifier on field 'port'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 42,
        "column": 32,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 50,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 51,
        "column": 11,
        "type": "error",
        "message": "Empty finally clause",
        "source": "EmptyControlStatement"
      },
      {
        "line": 56,
        "column": 25,
        "type": "error",
        "message": "Avoid unused local variables such as 'client'.",
        "source": "UnusedLocalVariable"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 62,
        "column": 31,
        "type": "error",
        "message": "Local variable 'clients' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 54,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ArrayList<>(100)`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 64,
        "column": 29,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 30,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 77,
        "column": 28,
        "type": "error",
        "message": "Local variable 'aServer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/NettyClientToServerTest.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "The class 'NettyClientToServerTest' might be a test class, but it contains no test cases.",
        "source": "TestClassWithoutTestCases"
      },
      {
        "line": 32,
        "column": 44,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 32,
        "column": 61,
        "type": "error",
        "message": "Parameter 'receiver' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 45,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/NettyStringTest.java",
    "score": 3.0,
    "error_count": 14,
    "messages": [
      {
        "line": 33,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 33,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 34,
        "column": 27,
        "type": "error",
        "message": "Do not use non-final non-private static fields",
        "source": "MutableStaticState"
      },
      {
        "line": 34,
        "column": 27,
        "type": "error",
        "message": "Missing commented default access modifier on field 'server'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 35,
        "column": 28,
        "type": "error",
        "message": "Do not use non-final non-private static fields",
        "source": "MutableStaticState"
      },
      {
        "line": 35,
        "column": 28,
        "type": "error",
        "message": "Missing commented default access modifier on field 'client'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 38,
        "column": 32,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 41,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 48,
        "column": 35,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 51,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 54,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/TelnetClientHandler.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 33,
        "column": 57,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/TelnetServerHandler.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 33,
        "column": 57,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/ThreadNameTest.java",
    "score": 0.0,
    "error_count": 22,
    "messages": [
      {
        "line": 35,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 35,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 40,
        "column": 17,
        "type": "error",
        "message": "Perhaps 'serverURL' could be replaced by a local variable.",
        "source": "SingularField"
      },
      {
        "line": 41,
        "column": 17,
        "type": "error",
        "message": "Perhaps 'clientURL' could be replaced by a local variable.",
        "source": "SingularField"
      },
      {
        "line": 53,
        "column": 26,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 54,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 54,
        "column": 46,
        "type": "error",
        "message": "Number 20880 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 54,
        "column": 75,
        "type": "error",
        "message": "Number 10000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 69,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 72,
        "column": 22,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 77,
        "column": 22,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 82,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 91,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'ThreadNameVerifyHandler'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 93,
        "column": 24,
        "type": "error",
        "message": "Field 'message' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 95,
        "column": 25,
        "type": "error",
        "message": "Field 'client' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 96,
        "column": 32,
        "type": "error",
        "message": "Field 'latch' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 98,
        "column": 9,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'ThreadNameVerifyHandler(String, boolean, CountDownLatch)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 98,
        "column": 40,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 53,
        "type": "error",
        "message": "Parameter 'client' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 76,
        "type": "error",
        "message": "Parameter 'latch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 117,
        "column": 36,
        "type": "error",
        "message": "Parameter 'method' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 118,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/World.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 33,
        "column": 25,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 32,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/WorldHandler.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 56,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyBackedChannelBuffer.java",
    "score": 0.0,
    "error_count": 90,
    "messages": [
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "This class has a bunch of public methods and attributes",
        "source": "ExcessivePublicCount"
      },
      {
        "line": 31,
        "column": 64,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 35,
        "column": 45,
        "type": "error",
        "message": "Parameter 'buffer' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 35,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 46,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 60,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 44,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 53,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 48,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 60,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 80,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 87,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 87,
        "column": 50,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 87,
        "column": 59,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 99,
        "column": 40,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 105,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 105,
        "column": 44,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 105,
        "column": 53,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 105,
        "column": 67,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 48,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 117,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 117,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 117,
        "column": 60,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 117,
        "column": 74,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 122,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 129,
        "column": 29,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 48,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 129,
        "column": 57,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 135,
        "column": 40,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 135,
        "column": 51,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 180,
        "column": 41,
        "type": "error",
        "message": "Parameter 'writableBytes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 186,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 186,
        "column": 44,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 192,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 192,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 199,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 199,
        "column": 51,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 199,
        "column": 60,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 240,
        "column": 34,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 246,
        "column": 34,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 246,
        "column": 43,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 246,
        "column": 57,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 252,
        "column": 38,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 258,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 265,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 265,
        "column": 50,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 276,
        "column": 41,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 276,
        "column": 50,
        "type": "error",
        "message": "Parameter 'dstIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 276,
        "column": 64,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 281,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 288,
        "column": 40,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 312,
        "column": 33,
        "type": "error",
        "message": "Parameter 'readerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 318,
        "column": 40,
        "type": "error",
        "message": "Parameter 'dst' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 318,
        "column": 49,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 324,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 324,
        "column": 44,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 330,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 330,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 337,
        "column": 30,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 337,
        "column": 51,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 337,
        "column": 60,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 348,
        "column": 30,
        "type": "error",
        "message": "Parameter 'readerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 348,
        "column": 47,
        "type": "error",
        "message": "Parameter 'writerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 354,
        "column": 31,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 378,
        "column": 31,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 384,
        "column": 35,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 390,
        "column": 35,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 390,
        "column": 44,
        "type": "error",
        "message": "Parameter 'index' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 390,
        "column": 55,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 396,
        "column": 39,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 402,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 409,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 409,
        "column": 51,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 420,
        "column": 42,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 420,
        "column": 51,
        "type": "error",
        "message": "Parameter 'srcIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 420,
        "column": 65,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 422,
        "column": 16,
        "type": "error",
        "message": "Local variable 'data' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 429,
        "column": 39,
        "type": "error",
        "message": "Parameter 'src' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 429,
        "column": 48,
        "type": "error",
        "message": "Parameter 'length' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 441,
        "column": 33,
        "type": "error",
        "message": "Parameter 'writerIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 447,
        "column": 40,
        "type": "error",
        "message": "Avoid variables with short names like o",
        "source": "ShortVariable"
      },
      {
        "line": 447,
        "column": 40,
        "type": "error",
        "message": "Parameter 'o' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyChannel.java",
    "score": 0.0,
    "error_count": 55,
    "messages": [
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.DEFAULT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 7,
        "type": "error",
        "message": "Possible God Class (WMC=52, ATFD=11, TCC=25.731%)",
        "source": "GodClass"
      },
      {
        "line": 42,
        "column": 50,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 44,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 48,
        "column": 98,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 54,
        "column": 73,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new ConcurrentHashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 66,
        "column": 34,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 47,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 67,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 83,
        "column": 25,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getOrAddChannel(Channel, URL, ChannelHandler)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 83,
        "column": 49,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 83,
        "column": 49,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 83,
        "column": 57,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 83,
        "column": 77,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 85,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 89,
        "column": 26,
        "type": "error",
        "message": "Local variable 'nettyChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 108,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'removeChannelIfDisconnected(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 108,
        "column": 53,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 108,
        "column": 53,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 110,
        "column": 26,
        "type": "error",
        "message": "Local variable 'nettyChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 117,
        "column": 17,
        "type": "error",
        "message": "Missing commented default access modifier on method 'removeChannel(Channel)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 117,
        "column": 39,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 117,
        "column": 39,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 119,
        "column": 26,
        "type": "error",
        "message": "Local variable 'nettyChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 145,
        "column": 36,
        "type": "error",
        "message": "Parameter 'isActive' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 29,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 157,
        "column": 46,
        "type": "error",
        "message": "Parameter 'sent' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 164,
        "column": 27,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 170,
        "column": 23,
        "type": "error",
        "message": "Local variable 'cause' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 174,
        "column": 11,
        "type": "error",
        "message": "Exception thrown at line 172 is caught in this block.",
        "source": "ExceptionAsFlowControl"
      },
      {
        "line": 174,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 188,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 189,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 193,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 194,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 198,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 199,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 206,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 207,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 212,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 217,
        "column": 39,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 222,
        "column": 37,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 222,
        "column": 49,
        "type": "error",
        "message": "Parameter 'value' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 232,
        "column": 40,
        "type": "error",
        "message": "Parameter 'key' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 246,
        "column": 31,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 251,
        "column": 34,
        "type": "error",
        "message": "Parameter 'obj' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 253,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 256,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 261,
        "column": 25,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 262,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 266,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 268,
        "column": 22,
        "type": "error",
        "message": "Local variable 'other' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 271,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 274,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
    "score": 0.0,
    "error_count": 49,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "A high number of imports can indicate a high degree of coupling within an object.",
        "source": "ExcessiveImports"
      },
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 50,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.SSL_ENABLED_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 51,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.LoggerCodeConstants.TRANSPORT_CLIENT_CONNECT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 52,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.LoggerCodeConstants.TRANSPORT_FAILED_CONNECT_PROVIDER'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 53,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.DEFAULT_CONNECT_TIMEOUT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 54,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.api.NettyEventLoopFactory.eventLoopGroup'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 55,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.api.NettyEventLoopFactory.socketChannelClass'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 66,
        "column": 33,
        "type": "error",
        "message": "Avoid excessively long variable names like DEFAULT_SOCKS_PROXY_PORT",
        "source": "LongVariable"
      },
      {
        "line": 68,
        "column": 47,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 103,
        "column": 34,
        "type": "error",
        "message": "Avoid excessively long variable names like nettyClientHandler",
        "source": "LongVariable"
      },
      {
        "line": 112,
        "column": 53,
        "type": "error",
        "message": "Avoid excessively long variable names like nettyClientHandler",
        "source": "LongVariable"
      },
      {
        "line": 112,
        "column": 53,
        "type": "error",
        "message": "Parameter 'nettyClientHandler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 124,
        "column": 54,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 124,
        "column": 54,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 125,
        "column": 21,
        "type": "error",
        "message": "Local variable 'heartbeatInterval' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 131,
        "column": 35,
        "type": "error",
        "message": "Local variable 'adapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 138,
        "column": 24,
        "type": "error",
        "message": "Local variable 'socksProxyHost' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 140,
        "column": 25,
        "type": "error",
        "message": "Local variable 'socksProxyPort' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 141,
        "column": 40,
        "type": "error",
        "message": "Avoid excessively long variable names like socks5ProxyHandler",
        "source": "LongVariable"
      },
      {
        "line": 141,
        "column": 40,
        "type": "error",
        "message": "Local variable 'socks5ProxyHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 148,
        "column": 46,
        "type": "error",
        "message": "Parameter 'host' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 156,
        "column": 20,
        "type": "error",
        "message": "Local variable 'ipv6Address' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 164,
        "column": 19,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 164,
        "column": 36,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 173,
        "column": 13,
        "type": "error",
        "message": "Empty if statement",
        "source": "EmptyControlStatement"
      },
      {
        "line": 179,
        "column": 18,
        "type": "error",
        "message": "The method 'doConnect(InetSocketAddress)' has a cognitive complexity of 16, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 179,
        "column": 18,
        "type": "error",
        "message": "The method 'doConnect(InetSocketAddress)' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 179,
        "column": 46,
        "type": "error",
        "message": "Parameter 'serverAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 180,
        "column": 14,
        "type": "error",
        "message": "Local variable 'start' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 181,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 183,
        "column": 21,
        "type": "error",
        "message": "Local variable 'ret' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 186,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 190,
        "column": 29,
        "type": "error",
        "message": "Local variable 'oldChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 190,
        "column": 42,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 202,
        "column": 25,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 209,
        "column": 29,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 209,
        "column": 56,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 213,
        "column": 25,
        "type": "error",
        "message": "Useless qualified this usage in the same class.",
        "source": "UselessQualifiedThis"
      },
      {
        "line": 218,
        "column": 27,
        "type": "error",
        "message": "Local variable 'cause' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 222,
        "column": 35,
        "type": "error",
        "message": "Local variable 'remotingException' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 234,
        "column": 35,
        "type": "error",
        "message": "Local variable 'remotingException' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 246,
        "column": 13,
        "type": "error",
        "message": "Empty if statement",
        "source": "EmptyControlStatement"
      },
      {
        "line": 256,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 257,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 270,
        "column": 17,
        "type": "error",
        "message": "Avoid variables with short names like c",
        "source": "ShortVariable"
      },
      {
        "line": 270,
        "column": 17,
        "type": "error",
        "message": "Local variable 'c' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 272,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 277,
        "column": 13,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getNettyChannel()'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClientHandler.java",
    "score": 0.0,
    "error_count": 30,
    "messages": [
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.HEARTBEAT_EVENT'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 46,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 46,
        "column": 35,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 55,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 53,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 67,
        "column": 55,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 68,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 51,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 63,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 82,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 87,
        "column": 45,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 87,
        "column": 57,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 87,
        "column": 77,
        "type": "error",
        "message": "Parameter 'promise' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 102,
        "column": 23,
        "type": "error",
        "message": "Avoid variables with short names like t",
        "source": "ShortVariable"
      },
      {
        "line": 102,
        "column": 23,
        "type": "error",
        "message": "Local variable 't' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 25,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 105,
        "column": 26,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 112,
        "column": 58,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 112,
        "column": 70,
        "type": "error",
        "message": "Parameter 'evt' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 116,
        "column": 30,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 120,
        "column": 25,
        "type": "error",
        "message": "Local variable 'req' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 134,
        "column": 55,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 70,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 136,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 151,
        "column": 56,
        "type": "error",
        "message": "Parameter 'request' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 151,
        "column": 75,
        "type": "error",
        "message": "Avoid variables with short names like t",
        "source": "ShortVariable"
      },
      {
        "line": 151,
        "column": 75,
        "type": "error",
        "message": "Parameter 't' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 152,
        "column": 18,
        "type": "error",
        "message": "Local variable 'response' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyCodecAdapter.java",
    "score": 0.0,
    "error_count": 22,
    "messages": [
      {
        "line": 48,
        "column": 37,
        "type": "error",
        "message": "Parameter 'codec' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 48,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 48,
        "column": 94,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 62,
        "column": 13,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 62,
        "column": 13,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 65,
        "column": 53,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 65,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 65,
        "column": 78,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 66,
        "column": 27,
        "type": "error",
        "message": "Local variable 'buffer' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 67,
        "column": 21,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 67,
        "column": 21,
        "type": "error",
        "message": "Local variable 'ch' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 26,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 13,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 73,
        "column": 13,
        "type": "error",
        "message": "This class has only private constructors and may be final",
        "source": "ClassWithOnlyPrivateConstructorsShouldBeFinal"
      },
      {
        "line": 76,
        "column": 53,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 76,
        "column": 66,
        "type": "error",
        "message": "Parameter 'input' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 76,
        "column": 86,
        "type": "error",
        "message": "Parameter 'out' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 27,
        "type": "error",
        "message": "Local variable 'message' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 80,
        "column": 26,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 84,
        "column": 21,
        "type": "error",
        "message": "Local variable 'saveReaderIndex' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 24,
        "type": "error",
        "message": "Local variable 'msg' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 28,
        "type": "error",
        "message": "Access to field `NEED_MORE_INPUT` on foreign value `Codec2.DecodeResult` (degree 1)",
        "source": "LawOfDemeter"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyConfigOperator.java",
    "score": 4.0,
    "error_count": 12,
    "messages": [
      {
        "line": 37,
        "column": 28,
        "type": "error",
        "message": "Field 'handler' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 39,
        "column": 45,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 69,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 45,
        "column": 59,
        "type": "error",
        "message": "Parameter 'handlerList' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 46,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 31,
        "type": "error",
        "message": "Local variable 'codec' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 71,
        "column": 29,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 24,
        "type": "error",
        "message": "Local variable 'realHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 83,
        "column": 9,
        "type": "error",
        "message": "Empty if statement",
        "source": "EmptyControlStatement"
      },
      {
        "line": 86,
        "column": 32,
        "type": "error",
        "message": "Avoid variables with short names like sh",
        "source": "ShortVariable"
      },
      {
        "line": 86,
        "column": 32,
        "type": "error",
        "message": "Local variable 'sh' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 93,
        "column": 42,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyPortUnificationServer.java",
    "score": 0.0,
    "error_count": 40,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "A high number of imports can indicate a high degree of coupling within an object.",
        "source": "ExcessiveImports"
      },
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 53,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.ANYHOST_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 54,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.ANYHOST_VALUE'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 55,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.IO_THREADS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 56,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.SSL_ENABLED_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 57,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.EVENT_LOOP_BOSS_POOL_NAME'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 58,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.EVENT_LOOP_WORKER_POOL_NAME'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 65,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 67,
        "column": 23,
        "type": "error",
        "message": "Avoid excessively long variable names like serverShutdownTimeoutMills",
        "source": "LongVariable"
      },
      {
        "line": 81,
        "column": 43,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 63,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 42,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 92,
        "column": 62,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 132,
        "column": 58,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 132,
        "column": 58,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 134,
        "column": 43,
        "type": "error",
        "message": "Avoid variables with short names like p",
        "source": "ShortVariable"
      },
      {
        "line": 145,
        "column": 13,
        "type": "error",
        "message": "Local variable 'bindPort' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 149,
        "column": 27,
        "type": "error",
        "message": "Local variable 'bindAddress' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 150,
        "column": 23,
        "type": "error",
        "message": "Local variable 'channelFuture' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 156,
        "column": 17,
        "type": "error",
        "message": "The method 'doClose()' has a cyclomatic complexity of 10.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 162,
        "column": 27,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 165,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 170,
        "column": 33,
        "type": "error",
        "message": "Local variable 'channels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 172,
        "column": 30,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 175,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 176,
        "column": 25,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 180,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 181,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 184,
        "column": 27,
        "type": "error",
        "message": "Local variable 'protocol' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 190,
        "column": 22,
        "type": "error",
        "message": "Local variable 'timeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 191,
        "column": 22,
        "type": "error",
        "message": "Local variable 'quietPeriod' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 192,
        "column": 27,
        "type": "error",
        "message": "Avoid excessively long variable names like bossGroupShutdownFuture",
        "source": "LongVariable"
      },
      {
        "line": 192,
        "column": 27,
        "type": "error",
        "message": "Local variable 'bossGroupShutdownFuture' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 194,
        "column": 27,
        "type": "error",
        "message": "Avoid excessively long variable names like workerGroupShutdownFuture",
        "source": "LongVariable"
      },
      {
        "line": 194,
        "column": 27,
        "type": "error",
        "message": "Local variable 'workerGroupShutdownFuture' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 199,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 200,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 210,
        "column": 29,
        "type": "error",
        "message": "Local variable 'chs' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 216,
        "column": 49,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyPortUnificationServerHandler.java",
    "score": 0.0,
    "error_count": 33,
    "messages": [
      {
        "line": 57,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 57,
        "column": 50,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 66,
        "type": "error",
        "message": "Parameter 'sslCtx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 57,
        "column": 82,
        "type": "error",
        "message": "Parameter 'detectSsl' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 65,
        "type": "error",
        "message": "Parameter 'protocols' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 91,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 67,
        "type": "error",
        "message": "Parameter 'dubboChannels' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 99,
        "type": "error",
        "message": "Parameter 'urlMapper' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 138,
        "type": "error",
        "message": "Parameter 'handlerMapper' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 71,
        "column": 70,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 76,
        "column": 53,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 78,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 49,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 86,
        "column": 62,
        "type": "error",
        "message": "Avoid variables with short names like in",
        "source": "ShortVariable"
      },
      {
        "line": 86,
        "column": 62,
        "type": "error",
        "message": "Parameter 'in' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 88,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 91,
        "column": 34,
        "type": "error",
        "message": "Avoid using literals in if statements",
        "source": "AvoidLiteralsInIfCondition"
      },
      {
        "line": 92,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 100,
        "column": 31,
        "type": "error",
        "message": "Local variable 'buf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 107,
        "column": 32,
        "type": "error",
        "message": "Local variable 'protocolName' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 109,
        "column": 40,
        "type": "error",
        "message": "Local variable 'localHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 110,
        "column": 29,
        "type": "error",
        "message": "Local variable 'localURL' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 112,
        "column": 45,
        "type": "error",
        "message": "Local variable 'operator' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 115,
        "column": 21,
        "type": "error",
        "message": "This switch case may be reached by fallthrough from the previous case",
        "source": "ImplicitSwitchFallThrough"
      },
      {
        "line": 116,
        "column": 25,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 121,
        "column": 20,
        "type": "error",
        "message": "Local variable 'preface' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 123,
        "column": 25,
        "type": "error",
        "message": "Local variable 'supported' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 126,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 137,
        "column": 50,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 138,
        "column": 25,
        "type": "error",
        "message": "Avoid variables with short names like p",
        "source": "ShortVariable"
      },
      {
        "line": 138,
        "column": 25,
        "type": "error",
        "message": "Local variable 'p' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 146,
        "column": 35,
        "type": "error",
        "message": "Parameter 'buf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 149,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyPortUnificationTransporter.java",
    "score": 8.5,
    "error_count": 3,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 51,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 31,
        "column": 71,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyServer.java",
    "score": 0.0,
    "error_count": 41,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "A high number of imports can indicate a high degree of coupling within an object.",
        "source": "ExcessiveImports"
      },
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 52,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.IO_THREADS_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 53,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.KEEP_ALIVE_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 54,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.SSL_ENABLED_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 55,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.EVENT_LOOP_BOSS_POOL_NAME'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 56,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.remoting.Constants.EVENT_LOOP_WORKER_POOL_NAME'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 64,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 81,
        "column": 23,
        "type": "error",
        "message": "Avoid excessively long variable names like serverShutdownTimeoutMills",
        "source": "LongVariable"
      },
      {
        "line": 83,
        "column": 28,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 83,
        "column": 48,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 34,
        "type": "error",
        "message": "Avoid excessively long variable names like nettyServerHandler",
        "source": "LongVariable"
      },
      {
        "line": 110,
        "column": 23,
        "type": "error",
        "message": "Local variable 'channelFuture' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 130,
        "column": 59,
        "type": "error",
        "message": "Avoid excessively long variable names like nettyServerHandler",
        "source": "LongVariable"
      },
      {
        "line": 130,
        "column": 59,
        "type": "error",
        "message": "Parameter 'nettyServerHandler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 131,
        "column": 17,
        "type": "error",
        "message": "Local variable 'keepalive' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 141,
        "column": 62,
        "type": "error",
        "message": "Avoid variables with short names like ch",
        "source": "ShortVariable"
      },
      {
        "line": 141,
        "column": 62,
        "type": "error",
        "message": "Parameter 'ch' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 29,
        "type": "error",
        "message": "Local variable 'idleTimeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 144,
        "column": 43,
        "type": "error",
        "message": "Local variable 'adapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 158,
        "column": 20,
        "type": "error",
        "message": "The method 'doClose()' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 164,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 165,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 168,
        "column": 33,
        "type": "error",
        "message": "Local variable 'channels' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 170,
        "column": 30,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 173,
        "column": 40,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 174,
        "column": 25,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 178,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 179,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 183,
        "column": 22,
        "type": "error",
        "message": "Local variable 'timeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 184,
        "column": 22,
        "type": "error",
        "message": "Local variable 'quietPeriod' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 185,
        "column": 27,
        "type": "error",
        "message": "Avoid excessively long variable names like bossGroupShutdownFuture",
        "source": "LongVariable"
      },
      {
        "line": 185,
        "column": 27,
        "type": "error",
        "message": "Local variable 'bossGroupShutdownFuture' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 186,
        "column": 27,
        "type": "error",
        "message": "Avoid excessively long variable names like workerGroupShutdownFuture",
        "source": "LongVariable"
      },
      {
        "line": 186,
        "column": 27,
        "type": "error",
        "message": "Local variable 'workerGroupShutdownFuture' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 190,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 191,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 197,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 198,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 204,
        "column": 29,
        "type": "error",
        "message": "Local variable 'chs' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 211,
        "column": 49,
        "type": "error",
        "message": "Parameter 'remoteAddress' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyServerHandler.java",
    "score": 0.0,
    "error_count": 22,
    "messages": [
      {
        "line": 40,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 51,
        "column": 12,
        "type": "error",
        "message": "It is a good practice to call super() in a constructor",
        "source": "CallSuperInConstructor"
      },
      {
        "line": 51,
        "column": 35,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 51,
        "column": 55,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 67,
        "column": 53,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 68,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 80,
        "column": 55,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 81,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 95,
        "column": 51,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 95,
        "column": 63,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 96,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 45,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 57,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 104,
        "column": 77,
        "type": "error",
        "message": "Parameter 'promise' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 106,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 111,
        "column": 58,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 111,
        "column": 70,
        "type": "error",
        "message": "Parameter 'evt' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 114,
        "column": 26,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 116,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 126,
        "column": 55,
        "type": "error",
        "message": "Parameter 'ctx' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 126,
        "column": 70,
        "type": "error",
        "message": "Parameter 'cause' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 128,
        "column": 22,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyTransporter.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 34,
        "column": 36,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 56,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 31,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 51,
        "type": "error",
        "message": "Parameter 'handler' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/logging/FormattingTuple.java",
    "score": 3.5,
    "error_count": 13,
    "messages": [
      {
        "line": 27,
        "column": 34,
        "type": "error",
        "message": "Missing commented default access modifier on field 'NULL'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 33,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'FormattingTuple(String)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 33,
        "column": 28,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 5,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'FormattingTuple(String, Object[], Throwable)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 37,
        "column": 28,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 46,
        "type": "error",
        "message": "Parameter 'argArray' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 37,
        "column": 66,
        "type": "error",
        "message": "Parameter 'throwable' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 13,
        "type": "error",
        "message": "The user-supplied array 'argArray' is stored directly.",
        "source": "ArrayIsStoredDirectly"
      },
      {
        "line": 47,
        "column": 21,
        "type": "error",
        "message": "Missing commented default access modifier on method 'trimmedCopy(Object[])'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 47,
        "column": 33,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 47,
        "column": 42,
        "type": "error",
        "message": "Parameter 'argArray' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 52,
        "column": 18,
        "type": "error",
        "message": "Local variable 'trimmed' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 9,
        "type": "error",
        "message": "Returning 'argArray' may expose an internal array.",
        "source": "MethodReturnsInternalArray"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/logging/MessageFormatter.java",
    "score": 0.0,
    "error_count": 93,
    "messages": [
      {
        "line": 92,
        "column": 7,
        "type": "error",
        "message": "Possible God Class (WMC=59, ATFD=17, TCC=0.735%)",
        "source": "GodClass"
      },
      {
        "line": 92,
        "column": 30,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 93,
        "column": 33,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 94,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on field 'DELIM_START'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 95,
        "column": 23,
        "type": "error",
        "message": "Missing commented default access modifier on field 'DELIM_STOP'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 96,
        "column": 25,
        "type": "error",
        "message": "Missing commented default access modifier on field 'DELIM_STR'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 116,
        "column": 28,
        "type": "error",
        "message": "Missing commented default access modifier on method 'format(String, Object)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 116,
        "column": 42,
        "type": "error",
        "message": "Parameter 'messagePattern' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 116,
        "column": 65,
        "type": "error",
        "message": "Parameter 'arg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 139,
        "column": 28,
        "type": "error",
        "message": "Missing commented default access modifier on method 'format(String, Object, Object)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 140,
        "column": 42,
        "type": "error",
        "message": "Parameter 'argA' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 140,
        "column": 55,
        "type": "error",
        "message": "Parameter 'argB' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 144,
        "column": 22,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getThrowableCandidate(Object[])'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 144,
        "column": 44,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 144,
        "column": 53,
        "type": "error",
        "message": "Parameter 'argArray' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 146,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 151,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 166,
        "column": 28,
        "type": "error",
        "message": "Missing commented default access modifier on method 'arrayFormat(String, Object[])'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 166,
        "column": 28,
        "type": "error",
        "message": "The method 'arrayFormat(String, Object[])' has a cognitive complexity of 21, current threshold is 15",
        "source": "CognitiveComplexity"
      },
      {
        "line": 167,
        "column": 40,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 169,
        "column": 19,
        "type": "error",
        "message": "Avoid excessively long variable names like throwableCandidate",
        "source": "LongVariable"
      },
      {
        "line": 169,
        "column": 19,
        "type": "error",
        "message": "Local variable 'throwableCandidate' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 172,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 176,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 179,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like i",
        "source": "ShortVariable"
      },
      {
        "line": 180,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like j",
        "source": "ShortVariable"
      },
      {
        "line": 181,
        "column": 22,
        "type": "error",
        "message": "Local variable 'sbuf' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 183,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like l",
        "source": "ShortVariable"
      },
      {
        "line": 191,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 196,
        "column": 21,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 201,
        "column": 21,
        "type": "error",
        "message": "Avoid if (x != y) ..; else ..;",
        "source": "ConfusingTernary"
      },
      {
        "line": 211,
        "column": 77,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 217,
        "column": 73,
        "type": "error",
        "message": "Explicit type arguments can be replaced by a diamond: `new HashMap<>()`",
        "source": "UseDiamondOperator"
      },
      {
        "line": 225,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 231,
        "column": 20,
        "type": "error",
        "message": "Missing commented default access modifier on method 'isEscapedDelimeter(String, int)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 231,
        "column": 46,
        "type": "error",
        "message": "Parameter 'messagePattern' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 232,
        "column": 43,
        "type": "error",
        "message": "Avoid excessively long variable names like delimeterStartIndex",
        "source": "LongVariable"
      },
      {
        "line": 232,
        "column": 43,
        "type": "error",
        "message": "Parameter 'delimeterStartIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 234,
        "column": 9,
        "type": "error",
        "message": "This if statement can be replaced by `return !{condition} || {elseBranch};`",
        "source": "SimplifyBooleanReturns"
      },
      {
        "line": 235,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 240,
        "column": 20,
        "type": "error",
        "message": "Missing commented default access modifier on method 'isDoubleEscaped(String, int)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 240,
        "column": 43,
        "type": "error",
        "message": "Parameter 'messagePattern' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 241,
        "column": 40,
        "type": "error",
        "message": "Avoid excessively long variable names like delimeterStartIndex",
        "source": "LongVariable"
      },
      {
        "line": 241,
        "column": 40,
        "type": "error",
        "message": "Parameter 'delimeterStartIndex' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 246,
        "column": 25,
        "type": "error",
        "message": "The method 'deeplyAppendParameter(StringBuffer, Object, Map<Object[], Void>)' has a cyclomatic complexity of 11.",
        "source": "CyclomaticComplexity"
      },
      {
        "line": 246,
        "column": 60,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 246,
        "column": 73,
        "type": "error",
        "message": "Avoid variables with short names like o",
        "source": "ShortVariable"
      },
      {
        "line": 246,
        "column": 73,
        "type": "error",
        "message": "Parameter 'o' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 247,
        "column": 67,
        "type": "error",
        "message": "Parameter 'seenMap' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 252,
        "column": 9,
        "type": "error",
        "message": "Avoid if (x != y) ..; else ..;",
        "source": "ConfusingTernary"
      },
      {
        "line": 279,
        "column": 55,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 279,
        "column": 68,
        "type": "error",
        "message": "Avoid variables with short names like o",
        "source": "ShortVariable"
      },
      {
        "line": 279,
        "column": 68,
        "type": "error",
        "message": "Parameter 'o' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 281,
        "column": 20,
        "type": "error",
        "message": "Local variable 'oAsString' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 283,
        "column": 28,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 284,
        "column": 13,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 287,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 292,
        "column": 56,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 292,
        "column": 71,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 292,
        "column": 71,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 293,
        "column": 63,
        "type": "error",
        "message": "Parameter 'seenMap' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 295,
        "column": 9,
        "type": "error",
        "message": "Avoid if (x != y) ..; else ..;",
        "source": "ConfusingTernary"
      },
      {
        "line": 312,
        "column": 57,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 312,
        "column": 63,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 312,
        "column": 73,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 312,
        "column": 73,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 324,
        "column": 54,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 324,
        "column": 67,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 324,
        "column": 67,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 336,
        "column": 54,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 336,
        "column": 60,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 336,
        "column": 67,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 336,
        "column": 67,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 348,
        "column": 55,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 348,
        "column": 61,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 348,
        "column": 69,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 348,
        "column": 69,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 360,
        "column": 53,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 360,
        "column": 59,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 360,
        "column": 65,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 360,
        "column": 65,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 372,
        "column": 54,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 372,
        "column": 60,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 372,
        "column": 67,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 372,
        "column": 67,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 384,
        "column": 55,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 384,
        "column": 61,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 384,
        "column": 69,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 384,
        "column": 69,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 396,
        "column": 56,
        "type": "error",
        "message": "Parameter 'sbuf' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 396,
        "column": 62,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 396,
        "column": 71,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 396,
        "column": 71,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/ClientReconnectTest.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 36,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 49,
        "column": 17,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 50,
        "column": 20,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 28,
        "type": "error",
        "message": "Local variable 'server' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 20,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 47,
        "type": "error",
        "message": "Number 20000 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 64,
        "column": 28,
        "type": "error",
        "message": "Local variable 'server' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 35,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 75,
        "column": 45,
        "type": "error",
        "message": "Parameter 'heartbeat' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 80,
        "column": 43,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 85,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'HandlerAdapter'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/ClientToServerTest.java",
    "score": 6.0,
    "error_count": 8,
    "messages": [
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 48,
        "column": 28,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 49,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 61,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 67,
        "column": 35,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 15,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/ClientsTest.java",
    "score": 2.0,
    "error_count": 16,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 25,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 26,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.Matchers.containsString'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 27,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 28,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertNull'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 29,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.fail'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 33,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 33,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 44,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 46,
        "column": 20,
        "type": "error",
        "message": "Local variable 'name' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 53,
        "column": 16,
        "type": "error",
        "message": "Local variable 'name' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 58,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 60,
        "column": 20,
        "type": "error",
        "message": "Local variable 'name' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/ConnectionTest.java",
    "score": 0.0,
    "error_count": 22,
    "messages": [
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 31,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 33,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 33,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 34,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 35,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 24,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 41,
        "column": 24,
        "type": "error",
        "message": "Local variable 'connection' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 56,
        "column": 15,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 56,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      },
      {
        "line": 65,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 65,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 66,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 67,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 24,
        "type": "error",
        "message": "Ensure that resources like this Connection object are closed after use",
        "source": "CloseResource"
      },
      {
        "line": 73,
        "column": 24,
        "type": "error",
        "message": "Local variable 'connection' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 74,
        "column": 29,
        "type": "error",
        "message": "Local variable 'service' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 26,
        "type": "error",
        "message": "Local variable 'runnable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 81,
        "column": 23,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 81,
        "column": 30,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 90,
        "column": 15,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 90,
        "column": 32,
        "type": "error",
        "message": "A catch statement should never catch throwable since it includes errors.",
        "source": "AvoidCatchingThrowable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/DefaultCodec.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 25,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/DemoService.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 26,
        "column": 18,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 26,
        "column": 25,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/DemoServiceImpl.java",
    "score": 6.5,
    "error_count": 7,
    "messages": [
      {
        "line": 23,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 24,
        "column": 33,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 25,
        "column": 9,
        "type": "error",
        "message": "Usage of System.out/err",
        "source": "SystemPrintln"
      },
      {
        "line": 28,
        "column": 25,
        "type": "error",
        "message": "Avoid variables with short names like a",
        "source": "ShortVariable"
      },
      {
        "line": 28,
        "column": 25,
        "type": "error",
        "message": "Parameter 'a' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 28,
        "column": 32,
        "type": "error",
        "message": "Avoid variables with short names like b",
        "source": "ShortVariable"
      },
      {
        "line": 28,
        "column": 32,
        "type": "error",
        "message": "Parameter 'b' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/EmptyWireProtocol.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/Hello.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 33,
        "column": 25,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 32,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/MockResult.java",
    "score": 9.5,
    "error_count": 1,
    "messages": [
      {
        "line": 30,
        "column": 30,
        "type": "error",
        "message": "Parameter 'result' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/NettyBackedChannelBufferTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 27,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 29,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 42,
        "column": 18,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 46,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 46,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 47,
        "column": 16,
        "type": "error",
        "message": "Local variable 'tmp1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 48,
        "column": 16,
        "type": "error",
        "message": "Local variable 'tmp2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 23,
        "type": "error",
        "message": "Local variable 'source' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 59,
        "column": 16,
        "type": "error",
        "message": "Local variable 'actual' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/NettyChannelTest.java",
    "score": 0.0,
    "error_count": 32,
    "messages": [
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 33,
        "column": 21,
        "type": "error",
        "message": "Field 'channel' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 34,
        "column": 17,
        "type": "error",
        "message": "Field 'url' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 34,
        "column": 53,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 35,
        "column": 28,
        "type": "error",
        "message": "Field 'channelHandler' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 24,
        "type": "error",
        "message": "Local variable 'channelHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 67,
        "column": 22,
        "type": "error",
        "message": "Local variable 'nettyChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 27,
        "type": "error",
        "message": "Local variable 'localAddress' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 68,
        "column": 77,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 69,
        "column": 27,
        "type": "error",
        "message": "Local variable 'remoteAddress' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 78,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 77,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 77,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 78,
        "column": 22,
        "type": "error",
        "message": "Local variable 'nettyChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 79,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 22,
        "type": "error",
        "message": "Local variable 'finalNettyChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 19,
        "type": "error",
        "message": "Local variable 'exception' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 101,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 101,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 102,
        "column": 22,
        "type": "error",
        "message": "Local variable 'nettyChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 112,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 113,
        "column": 22,
        "type": "error",
        "message": "Local variable 'nettyChannel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 114,
        "column": 22,
        "type": "error",
        "message": "Local variable 'nettyChannel2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/NettyClientHandlerTest.java",
    "score": 0.0,
    "error_count": 27,
    "messages": [
      {
        "line": 34,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.ArgumentMatchers.any'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.when'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 38,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 41,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 41,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 42,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 49,
        "type": "error",
        "message": "Do not hard code the IP address ${variableName}",
        "source": "AvoidUsingHardCodedIP"
      },
      {
        "line": 42,
        "column": 62,
        "type": "error",
        "message": "Number 20901 should separate every third digit with an underscore",
        "source": "UseUnderscoresInNumericLiterals"
      },
      {
        "line": 43,
        "column": 24,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 44,
        "column": 31,
        "type": "error",
        "message": "Local variable 'ctx' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 45,
        "column": 17,
        "type": "error",
        "message": "Local variable 'channel' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 49,
        "column": 23,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 53,
        "column": 28,
        "type": "error",
        "message": "Avoid excessively long variable names like nettyClientHandler",
        "source": "LongVariable"
      },
      {
        "line": 53,
        "column": 28,
        "type": "error",
        "message": "Local variable 'nettyClientHandler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 63,
        "column": 19,
        "type": "error",
        "message": "Local variable 'throwable' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 66,
        "column": 35,
        "type": "error",
        "message": "Avoid excessively long variable names like throwableArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 66,
        "column": 35,
        "type": "error",
        "message": "Local variable 'throwableArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 71,
        "column": 32,
        "type": "error",
        "message": "Avoid excessively long variable names like objectArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 71,
        "column": 32,
        "type": "error",
        "message": "Local variable 'objectArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 75,
        "column": 33,
        "type": "error",
        "message": "Avoid excessively long variable names like requestArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 75,
        "column": 33,
        "type": "error",
        "message": "Local variable 'requestArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 79,
        "column": 17,
        "type": "error",
        "message": "Local variable 'request' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 80,
        "column": 24,
        "type": "error",
        "message": "Local variable 'promise' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 82,
        "column": 47,
        "type": "error",
        "message": "Avoid excessively long variable names like listenerArgumentCaptor",
        "source": "LongVariable"
      },
      {
        "line": 82,
        "column": 47,
        "type": "error",
        "message": "Local variable 'listenerArgumentCaptor' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/NettyClientToServerTest.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "The class 'NettyClientToServerTest' might be a test class, but it contains no test cases.",
        "source": "TestClassWithoutTestCases"
      },
      {
        "line": 32,
        "column": 44,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 32,
        "column": 61,
        "type": "error",
        "message": "Parameter 'receiver' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 45,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/NettyCodecAdapterTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 35,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 36,
        "column": 16,
        "type": "error",
        "message": "Local variable 'codec2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 37,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 38,
        "column": 24,
        "type": "error",
        "message": "Local variable 'handler' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 27,
        "type": "error",
        "message": "Local variable 'nettyCodecAdapter' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 40,
        "column": 41,
        "type": "error",
        "message": "Local variable 'decoder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 41,
        "column": 41,
        "type": "error",
        "message": "Local variable 'encoder' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/NettyTransporterTest.java",
    "score": 3.0,
    "error_count": 14,
    "messages": [
      {
        "line": 32,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.CoreMatchers.is'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 35,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 35,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 37,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 39,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 42,
        "column": 24,
        "type": "error",
        "message": "Local variable 'server' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 48,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 48,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 51,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 52,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 64,
        "column": 38,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 64,
        "column": 54,
        "type": "error",
        "message": "Parameter 'message' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/PortUnificationExchangerTest.java",
    "score": 7.0,
    "error_count": 6,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 31,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 32,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/PortUnificationServerTest.java",
    "score": 7.5,
    "error_count": 5,
    "messages": [
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 27,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 30,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 31,
        "column": 13,
        "type": "error",
        "message": "Local variable 'port' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 32,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/ReplierDispatcherTest.java",
    "score": 0.0,
    "error_count": 38,
    "messages": [
      {
        "line": 41,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.fail'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 48,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 48,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 52,
        "column": 13,
        "type": "error",
        "message": "Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead",
        "source": "LooseCoupling"
      },
      {
        "line": 52,
        "column": 56,
        "type": "error",
        "message": "Field 'clients' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 59,
        "column": 27,
        "type": "error",
        "message": "Local variable 'dispatcher' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 67,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 68,
        "column": 25,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 69,
        "column": 16,
        "type": "error",
        "message": "Local variable 'random' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 71,
        "column": 27,
        "type": "error",
        "message": "Avoid variables with short names like sb",
        "source": "ShortVariable"
      },
      {
        "line": 71,
        "column": 27,
        "type": "error",
        "message": "Local variable 'sb' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 72,
        "column": 13,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 74,
        "column": 18,
        "type": "error",
        "message": "Avoid variables with short names like d",
        "source": "ShortVariable"
      },
      {
        "line": 74,
        "column": 18,
        "type": "error",
        "message": "Local variable 'd' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 83,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 83,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 84,
        "column": 13,
        "type": "error",
        "message": "Avoid variables with short names like tc",
        "source": "ShortVariable"
      },
      {
        "line": 84,
        "column": 13,
        "type": "error",
        "message": "Local variable 'tc' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 25,
        "type": "error",
        "message": "Local variable 'exec' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 86,
        "column": 9,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 90,
        "column": 26,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 98,
        "column": 10,
        "type": "error",
        "message": "Missing commented default access modifier on method 'clientExchangeInfo(int)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 98,
        "column": 33,
        "type": "error",
        "message": "Parameter 'port' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 39,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 99,
        "column": 25,
        "type": "error",
        "message": "Local variable 'client' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 101,
        "column": 20,
        "type": "error",
        "message": "Local variable 'result' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 107,
        "column": 39,
        "type": "error",
        "message": "Local variable 'future' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 117,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 119,
        "column": 17,
        "type": "error",
        "message": "Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()",
        "source": "UseCollectionIsEmpty"
      },
      {
        "line": 120,
        "column": 17,
        "type": "error",
        "message": "This statement should have braces",
        "source": "ControlStatementBraces"
      },
      {
        "line": 128,
        "column": 12,
        "type": "error",
        "message": "Avoid short class names like Data",
        "source": "ShortClassName"
      },
      {
        "line": 128,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'Data'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 140,
        "column": 36,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 145,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'StringMessage'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 148,
        "column": 24,
        "type": "error",
        "message": "Field 'mText' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 150,
        "column": 9,
        "type": "error",
        "message": "Missing commented default access modifier on constructor 'StringMessage(String)'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 150,
        "column": 30,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 154,
        "column": 23,
        "type": "error",
        "message": "The method 'toString()' is missing an @Override annotation.",
        "source": "MissingOverride"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/RpcMessage.java",
    "score": 3.0,
    "error_count": 14,
    "messages": [
      {
        "line": 28,
        "column": 20,
        "type": "error",
        "message": "Field 'mClassName' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 30,
        "column": 20,
        "type": "error",
        "message": "Field 'mMethodDesc' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 32,
        "column": 24,
        "type": "error",
        "message": "Field 'mParameterTypes' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 34,
        "column": 22,
        "type": "error",
        "message": "Field 'mArguments' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 36,
        "column": 30,
        "type": "error",
        "message": "Avoid variables with short names like cn",
        "source": "ShortVariable"
      },
      {
        "line": 36,
        "column": 30,
        "type": "error",
        "message": "Parameter 'cn' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 36,
        "column": 41,
        "type": "error",
        "message": "Parameter 'desc' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 36,
        "column": 58,
        "type": "error",
        "message": "Parameter 'parameterTypes' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 36,
        "column": 74,
        "type": "error",
        "message": "Consider using varargs for methods or constructors which take an array the last parameter.",
        "source": "UseVarargs"
      },
      {
        "line": 36,
        "column": 83,
        "type": "error",
        "message": "Parameter 'args' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 39,
        "column": 9,
        "type": "error",
        "message": "The user-supplied array 'parameterTypes' is stored directly.",
        "source": "ArrayIsStoredDirectly"
      },
      {
        "line": 40,
        "column": 9,
        "type": "error",
        "message": "The user-supplied array 'args' is stored directly.",
        "source": "ArrayIsStoredDirectly"
      },
      {
        "line": 52,
        "column": 9,
        "type": "error",
        "message": "Returning 'mParameterTypes' may expose an internal array.",
        "source": "MethodReturnsInternalArray"
      },
      {
        "line": 56,
        "column": 9,
        "type": "error",
        "message": "Returning 'mArguments' may expose an internal array.",
        "source": "MethodReturnsInternalArray"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/RpcMessageHandler.java",
    "score": 0.5,
    "error_count": 19,
    "messages": [
      {
        "line": 33,
        "column": 23,
        "type": "error",
        "message": "The method 'getImplementation(String)' is missing an @Override annotation.",
        "source": "MissingOverride"
      },
      {
        "line": 33,
        "column": 48,
        "type": "error",
        "message": "Parameter 'service' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 34,
        "column": 20,
        "type": "error",
        "message": "Local variable 'impl' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 26,
        "type": "error",
        "message": "Avoid variables with short names like cl",
        "source": "ShortVariable"
      },
      {
        "line": 36,
        "column": 26,
        "type": "error",
        "message": "Local variable 'cl' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 36,
        "column": 31,
        "type": "error",
        "message": "Call to `getContextClassLoader` on foreign value `Thread.currentThread()` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 36,
        "column": 31,
        "type": "error",
        "message": "Call to `loadClass` on foreign value `Thread.currentThread().getContextClassLoader()` (degree 2)",
        "source": "LawOfDemeter"
      },
      {
        "line": 37,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 38,
        "column": 22,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 39,
        "column": 17,
        "type": "error",
        "message": "Avoid printStackTrace(); use a logger call instead.",
        "source": "AvoidPrintStackTrace"
      },
      {
        "line": 50,
        "column": 46,
        "type": "error",
        "message": "Parameter 'prov' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 41,
        "type": "error",
        "message": "Parameter 'channel' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 58,
        "column": 61,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 59,
        "column": 16,
        "type": "error",
        "message": "Local variable 'desc' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 60,
        "column": 18,
        "type": "error",
        "message": "Local variable 'args' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 61,
        "column": 16,
        "type": "error",
        "message": "Local variable 'impl' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 62,
        "column": 17,
        "type": "error",
        "message": "Local variable 'wrap' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 64,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 66,
        "column": 19,
        "type": "error",
        "message": "Thrown exception does not preserve the stack trace of exception 'e' on all code paths",
        "source": "PreserveStackTrace"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/World.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 33,
        "column": 25,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 41,
        "column": 32,
        "type": "error",
        "message": "Parameter 'name' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-netty4/src/test/java/org/apache/dubbo/remoting/transport/netty4/WorldHandler.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 26,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 32,
        "column": 56,
        "type": "error",
        "message": "Parameter 'msg' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/main/java/org/apache/dubbo/remoting/zookeeper/curator5/Curator5ZookeeperClient.java",
    "score": 0.0,
    "error_count": 113,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "A high number of imports can indicate a high degree of coupling within an object.",
        "source": "ExcessiveImports"
      },
      {
        "line": 56,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.SESSION_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 57,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.CommonConstants.TIMEOUT_KEY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 58,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.apache.dubbo.common.constants.LoggerCodeConstants.CONFIG_FAILED_CONNECT_REGISTRY'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 61,
        "column": 161,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 63,
        "column": 49,
        "type": "error",
        "message": "The constant name 'logger' doesn't match '[A-Z][A-Z_0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 69,
        "column": 40,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 72,
        "column": 17,
        "type": "error",
        "message": "Local variable 'timeout' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 17,
        "type": "error",
        "message": "Local variable 'sessionExpireMs' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 79,
        "column": 20,
        "type": "error",
        "message": "Local variable 'userInformation' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 97,
        "column": 21,
        "type": "error",
        "message": "Local variable 'connected' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 100,
        "column": 39,
        "type": "error",
        "message": "Avoid excessively long variable names like illegalStateException",
        "source": "LongVariable"
      },
      {
        "line": 100,
        "column": 39,
        "type": "error",
        "message": "Local variable 'illegalStateException' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 109,
        "column": 11,
        "type": "error",
        "message": "Exception thrown at line 106 is caught in this block.",
        "source": "ExceptionAsFlowControl"
      },
      {
        "line": 109,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 115,
        "column": 41,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 119,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 120,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 126,
        "column": 40,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 130,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 136,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 142,
        "column": 44,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 142,
        "column": 57,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 143,
        "column": 16,
        "type": "error",
        "message": "Local variable 'dataBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 149,
        "column": 22,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 150,
        "column": 23,
        "type": "error",
        "message": "Thrown exception does not preserve the stack trace of exception 'e' on all code paths",
        "source": "PreserveStackTrace"
      },
      {
        "line": 152,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 158,
        "column": 43,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 158,
        "column": 56,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 159,
        "column": 16,
        "type": "error",
        "message": "Local variable 'dataBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 163,
        "column": 13,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 169,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 175,
        "column": 34,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 175,
        "column": 47,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 175,
        "column": 57,
        "type": "error",
        "message": "Parameter 'version' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 176,
        "column": 16,
        "type": "error",
        "message": "Local variable 'dataBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 179,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 185,
        "column": 52,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 185,
        "column": 65,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 185,
        "column": 75,
        "type": "error",
        "message": "Parameter 'version' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 192,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 198,
        "column": 51,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 198,
        "column": 64,
        "type": "error",
        "message": "Parameter 'data' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 198,
        "column": 74,
        "type": "error",
        "message": "Parameter 'version' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 205,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 211,
        "column": 38,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 215,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 221,
        "column": 44,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 223,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 225,
        "column": 20,
        "type": "error",
        "message": "Return an empty collection rather than null.",
        "source": "ReturnEmptyCollectionRatherThanNull"
      },
      {
        "line": 226,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 232,
        "column": 39,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 235,
        "column": 17,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 237,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 248,
        "column": 39,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 250,
        "column": 20,
        "type": "error",
        "message": "Local variable 'dataBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 251,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 252,
        "column": 11,
        "type": "error",
        "message": "Avoid empty catch blocks",
        "source": "EmptyCatchBlock"
      },
      {
        "line": 254,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 261,
        "column": 46,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 266,
        "column": 20,
        "type": "error",
        "message": "Local variable 'dataBytes' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 267,
        "column": 70,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 269,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 270,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 283,
        "column": 88,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 283,
        "column": 108,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 288,
        "column": 55,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 288,
        "column": 80,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 290,
        "column": 13,
        "type": "error",
        "message": "A method should have only one exit point, and that should be the last statement in the method",
        "source": "OnlyOneReturn"
      },
      {
        "line": 292,
        "column": 20,
        "type": "error",
        "message": "Return an empty collection rather than null.",
        "source": "ReturnEmptyCollectionRatherThanNull"
      },
      {
        "line": 293,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 299,
        "column": 93,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 299,
        "column": 112,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 304,
        "column": 49,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 304,
        "column": 101,
        "type": "error",
        "message": "Parameter 'nodeCacheListener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 309,
        "column": 49,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 309,
        "column": 101,
        "type": "error",
        "message": "Parameter 'nodeCacheListener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 309,
        "column": 129,
        "type": "error",
        "message": "Parameter 'executor' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 311,
        "column": 23,
        "type": "error",
        "message": "Local variable 'nodeCache' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 322,
        "column": 18,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 328,
        "column": 52,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 328,
        "column": 104,
        "type": "error",
        "message": "Parameter 'nodeCacheListener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 329,
        "column": 19,
        "type": "error",
        "message": "Local variable 'nodeCache' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 333,
        "column": 9,
        "type": "error",
        "message": "Access to field `dataListener` on foreign value `nodeCacheListener` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 333,
        "column": 42,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 337,
        "column": 75,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 341,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'NodeCacheListenerImpl'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 343,
        "column": 34,
        "type": "error",
        "message": "Avoid unused private fields such as 'client'.",
        "source": "UnusedPrivateField"
      },
      {
        "line": 352,
        "column": 55,
        "type": "error",
        "message": "Parameter 'client' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 352,
        "column": 76,
        "type": "error",
        "message": "Parameter 'dataListener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 352,
        "column": 97,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 360,
        "column": 23,
        "type": "error",
        "message": "Local variable 'childData' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 376,
        "column": 12,
        "type": "error",
        "message": "Missing commented default access modifier on nested class 'CuratorWatcherImpl'",
        "source": "CommentDefaultAccessModifier"
      },
      {
        "line": 382,
        "column": 52,
        "type": "error",
        "message": "Parameter 'client' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 382,
        "column": 74,
        "type": "error",
        "message": "Parameter 'listener' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 382,
        "column": 91,
        "type": "error",
        "message": "Parameter 'path' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 392,
        "column": 34,
        "type": "error",
        "message": "Assigning an Object to null is a code smell.  Consider refactoring.",
        "source": "NullAssignment"
      },
      {
        "line": 396,
        "column": 42,
        "type": "error",
        "message": "Parameter 'event' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 399,
        "column": 36,
        "type": "error",
        "message": "Access to field `EventType` on foreign value `Watcher.Event` (degree 1)",
        "source": "LawOfDemeter"
      },
      {
        "line": 410,
        "column": 28,
        "type": "error",
        "message": "Avoid excessively long variable names like UNKNOWN_SESSION_ID",
        "source": "LongVariable"
      },
      {
        "line": 410,
        "column": 28,
        "type": "error",
        "message": "The final field name 'UNKNOWN_SESSION_ID' doesn't match '[a-z][a-zA-Z0-9]*'",
        "source": "FieldNamingConventions"
      },
      {
        "line": 413,
        "column": 21,
        "type": "error",
        "message": "Field 'timeout' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 414,
        "column": 21,
        "type": "error",
        "message": "Field 'sessionExpireMs' may be declared final",
        "source": "ImmutableField"
      },
      {
        "line": 416,
        "column": 51,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 422,
        "column": 51,
        "type": "error",
        "message": "Parameter 'client' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 422,
        "column": 75,
        "type": "error",
        "message": "Parameter 'state' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 426,
        "column": 22,
        "type": "error",
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block",
        "source": "AvoidCatchingGenericException"
      },
      {
        "line": 431,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 434,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 439,
        "column": 17,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 443,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 447,
        "column": 21,
        "type": "error",
        "message": "Logger calls should be surrounded by log level guards.",
        "source": "GuardLogStatement"
      },
      {
        "line": 462,
        "column": 22,
        "type": "error",
        "message": "Missing commented default access modifier on method 'getClient()'",
        "source": "CommentDefaultAccessModifier"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/main/java/org/apache/dubbo/remoting/zookeeper/curator5/Curator5ZookeeperTransporter.java",
    "score": 9.0,
    "error_count": 2,
    "messages": [
      {
        "line": 23,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 26,
        "column": 54,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/Curator5ZookeeperClientTest.java",
    "score": 0.0,
    "error_count": 45,
    "messages": [
      {
        "line": 17,
        "column": 1,
        "type": "error",
        "message": "Too many static imports may lead to messy code",
        "source": "TooManyStaticImports"
      },
      {
        "line": 36,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 37,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.core.Is.is'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertEquals'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 39,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.junit.jupiter.api.Assertions.assertNull'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 40,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.mockito.Mockito.mock'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 42,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 42,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 42,
        "column": 42,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 46,
        "column": 24,
        "type": "error",
        "message": "Avoid excessively long variable names like zookeeperServerPort1",
        "source": "LongVariable"
      },
      {
        "line": 47,
        "column": 27,
        "type": "error",
        "message": "Avoid excessively long variable names like zookeeperConnectionAddress1",
        "source": "LongVariable"
      },
      {
        "line": 50,
        "column": 32,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 59,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 60,
        "column": 16,
        "type": "error",
        "message": "Local variable 'path' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 67,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 68,
        "column": 16,
        "type": "error",
        "message": "Local variable 'path' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 73,
        "column": 22,
        "type": "error",
        "message": "Local variable 'children' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 78,
        "column": 13,
        "type": "error",
        "message": "Avoid the use of value in annotations when its the only element",
        "source": "UnnecessaryAnnotationValueElement"
      },
      {
        "line": 79,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 79,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 80,
        "column": 16,
        "type": "error",
        "message": "Local variable 'path' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 96,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 104,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 104,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 105,
        "column": 23,
        "type": "error",
        "message": "Local variable 'childListener' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 111,
        "column": 17,
        "type": "error",
        "message": "JUnit tests should include assert() or fail()",
        "source": "JUnitTestsShouldIncludeAssert"
      },
      {
        "line": 117,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 119,
        "column": 17,
        "type": "error",
        "message": "Local variable 'connected' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 124,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 124,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 125,
        "column": 16,
        "type": "error",
        "message": "Local variable 'path' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 126,
        "column": 16,
        "type": "error",
        "message": "Local variable 'content' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 137,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 137,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 138,
        "column": 16,
        "type": "error",
        "message": "Local variable 'path' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 139,
        "column": 16,
        "type": "error",
        "message": "Local variable 'content' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 150,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 150,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 151,
        "column": 16,
        "type": "error",
        "message": "Local variable 'listenerPath' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 152,
        "column": 16,
        "type": "error",
        "message": "Local variable 'path' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 153,
        "column": 16,
        "type": "error",
        "message": "Local variable 'value' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 155,
        "column": 37,
        "type": "error",
        "message": "The String literal \"/d.json\" appears 8 times in this file; the first occurrence is on line 155",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 182,
        "column": 24,
        "type": "error",
        "message": "Unit tests that execute tests should use the @Test annotation. In case of JUnit 5, test methods might use @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest annotations instead.",
        "source": "JUnit4TestShouldUseTestAnnotation"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/Curator5ZookeeperTransporterTest.java",
    "score": 5.0,
    "error_count": 10,
    "messages": [
      {
        "line": 26,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 27,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.core.IsNot.not'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 28,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.core.IsNull.nullValue'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 30,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 32,
        "column": 42,
        "type": "error",
        "message": "Avoid excessively long variable names like curatorZookeeperTransporter",
        "source": "LongVariable"
      },
      {
        "line": 32,
        "column": 42,
        "type": "error",
        "message": "Avoid unused private fields such as 'curatorZookeeperTransporter'.",
        "source": "UnusedPrivateField"
      },
      {
        "line": 33,
        "column": 27,
        "type": "error",
        "message": "Avoid excessively long variable names like zookeeperConnectionAddress1",
        "source": "LongVariable"
      },
      {
        "line": 41,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 47,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      }
    ]
  },
  {
    "file": "/workspace/repo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/support/AbstractZookeeperTransporterTest.java",
    "score": 0.0,
    "error_count": 75,
    "messages": [
      {
        "line": 31,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.MatcherAssert.assertThat'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 32,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.core.IsNot.not'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 33,
        "column": 1,
        "type": "error",
        "message": "Unused static import 'org.hamcrest.core.IsNull.nullValue'",
        "source": "UnnecessaryImport"
      },
      {
        "line": 38,
        "column": 8,
        "type": "error",
        "message": "Each class should declare at least one constructor",
        "source": "AtLeastOneConstructor"
      },
      {
        "line": 38,
        "column": 8,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 38,
        "column": 47,
        "type": "error",
        "message": "This class has too many methods, consider refactoring it.",
        "source": "TooManyMethods"
      },
      {
        "line": 40,
        "column": 42,
        "type": "error",
        "message": "Avoid excessively long variable names like abstractZookeeperTransporter",
        "source": "LongVariable"
      },
      {
        "line": 42,
        "column": 24,
        "type": "error",
        "message": "Avoid excessively long variable names like zookeeperServerPort1",
        "source": "LongVariable"
      },
      {
        "line": 42,
        "column": 24,
        "type": "error",
        "message": "Use one line for each declaration, it enhances code readability.",
        "source": "OneDeclarationPerLine"
      },
      {
        "line": 42,
        "column": 46,
        "type": "error",
        "message": "Avoid excessively long variable names like zookeeperServerPort2",
        "source": "LongVariable"
      },
      {
        "line": 43,
        "column": 27,
        "type": "error",
        "message": "Avoid excessively long variable names like zookeeperConnectionAddress1",
        "source": "LongVariable"
      },
      {
        "line": 43,
        "column": 27,
        "type": "error",
        "message": "Use one line for each declaration, it enhances code readability.",
        "source": "OneDeclarationPerLine"
      },
      {
        "line": 43,
        "column": 56,
        "type": "error",
        "message": "Avoid excessively long variable names like zookeeperConnectionAddress2",
        "source": "LongVariable"
      },
      {
        "line": 54,
        "column": 25,
        "type": "error",
        "message": "A method/constructor should not explicitly throw java.lang.Exception",
        "source": "SignatureDeclareThrowsException"
      },
      {
        "line": 60,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 66,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 67,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 67,
        "column": 61,
        "type": "error",
        "message": "The String literal \"/org.apache.dubbo.registry.RegistryService?backup=127.0.0.1:\" appears 4 times in this file; the first occurrence is on line 67",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 67,
        "column": 133,
        "type": "error",
        "message": "The String literal \"&application=metadatareport-local-xml-provider2&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=47418&specVersion=2.7.0-SNAPSHOT&timestamp=1547102428828\" appears 4 times in this file; the first occurrence is on line 67",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 68,
        "column": 22,
        "type": "error",
        "message": "Local variable 'stringList' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 70,
        "column": 52,
        "type": "error",
        "message": "The String literal \"127.0.0.1:\" appears 11 times in this file; the first occurrence is on line 70",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 75,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 76,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 77,
        "column": 22,
        "type": "error",
        "message": "Local variable 'stringList' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 83,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 83,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 84,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 85,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient",
        "source": "LongVariable"
      },
      {
        "line": 85,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 87,
        "column": 39,
        "type": "error",
        "message": "The String literal \"/dubbo/test\" appears 9 times in this file; the first occurrence is on line 87",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 91,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 91,
        "column": 82,
        "type": "error",
        "message": "The String literal \"/org.apache.dubbo.metadata.store.MetadataReport?address=zookeeper://127.0.0.1:2181&application=metadatareport-local-xml-provider2&cycle-report=false&interface=org.apache.dubbo.metadata.store.MetadataReport&retry-period=4590&retry-times=23&sync-report=true\" appears 4 times in this file; the first occurrence is on line 91",
        "source": "AvoidDuplicateLiterals"
      },
      {
        "line": 93,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url3' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 97,
        "column": 54,
        "type": "error",
        "message": "Parameter 'url' is not assigned and could be declared final",
        "source": "MethodArgumentCouldBeFinal"
      },
      {
        "line": 98,
        "column": 22,
        "type": "error",
        "message": "Local variable 'addressList' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 99,
        "column": 25,
        "type": "error",
        "message": "Local variable 'zookeeperClient' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 104,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 104,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 105,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 106,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 107,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient",
        "source": "LongVariable"
      },
      {
        "line": 107,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 114,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient2",
        "source": "LongVariable"
      },
      {
        "line": 114,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 123,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 123,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 124,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 125,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 126,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient",
        "source": "LongVariable"
      },
      {
        "line": 126,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 132,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient2",
        "source": "LongVariable"
      },
      {
        "line": 132,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 142,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 142,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 144,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 145,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 146,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient",
        "source": "LongVariable"
      },
      {
        "line": 146,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 152,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient2",
        "source": "LongVariable"
      },
      {
        "line": 152,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 162,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 162,
        "column": 17,
        "type": "error",
        "message": "Unit tests should not contain more than 1 assert(s).",
        "source": "JUnitTestContainsTooManyAsserts"
      },
      {
        "line": 164,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 165,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 166,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient",
        "source": "LongVariable"
      },
      {
        "line": 166,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 172,
        "column": 25,
        "type": "error",
        "message": "Avoid excessively long variable names like newZookeeperClient2",
        "source": "LongVariable"
      },
      {
        "line": 172,
        "column": 25,
        "type": "error",
        "message": "Local variable 'newZookeeperClient2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 182,
        "column": 17,
        "type": "error",
        "message": "JUnit 5 tests should be package-private.",
        "source": "JUnit5TestShouldBePackagePrivate"
      },
      {
        "line": 183,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 184,
        "column": 13,
        "type": "error",
        "message": "Local variable 'url2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 185,
        "column": 25,
        "type": "error",
        "message": "Local variable 'client1' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      },
      {
        "line": 186,
        "column": 25,
        "type": "error",
        "message": "Local variable 'client2' could be declared final",
        "source": "LocalVariableCouldBeFinal"
      }
    ]
  }
]