{
  "patch": "diff --git a/django/core/handlers/asgi.py b/django/core/handlers/asgi.py\nindex 7fbabe4510..c12cb7de0c 100644\n--- a/django/core/handlers/asgi.py\n+++ b/django/core/handlers/asgi.py\n@@ -159,6 +159,8 @@ class ASGIHandler(base.BaseHandler):\n             return\n         # Get the response, using the async mode of BaseHandler.\n         response = await self.get_response_async(request)\n+        if asyncio.iscoroutine(response):\n+            response = await response\n         response._handler_class = self.__class__\n         # Increase chunk size on file responses (ASGI servers handles low-level\n         # chunking).\ndiff --git a/django/utils/deprecation.py b/django/utils/deprecation.py\nindex b2c681b33c..1629568c4b 100644\n--- a/django/utils/deprecation.py\n+++ b/django/utils/deprecation.py\n@@ -116,7 +116,10 @@ class MiddlewareMixin:\n             response = self.process_request(request)\n         response = response or self.get_response(request)\n         if hasattr(self, 'process_response'):\n-            response = self.process_response(request, response)\n+            if asyncio.iscoroutinefunction(self.process_response):\n+                response = await self.process_response(request, response)\n+            else:\n+                response = self.process_response(request, response)\n         return response\n \n     async def __acall__(self, request):\n@@ -132,10 +135,13 @@ class MiddlewareMixin:\n             )(request)\n         response = response or await self.get_response(request)\n         if hasattr(self, 'process_response'):\n-            response = await sync_to_async(\n-                self.process_response,\n-                thread_sensitive=True,\n-            )(request, response)\n+            if asyncio.iscoroutinefunction(self.process_response):\n+                response = await self.process_response(request, response)\n+            else:\n+                response = await sync_to_async(\n+                    self.process_response,\n+                    thread_sensitive=True,\n+                )(request, response)\n         return response\n \n     def _get_response_none_deprecation(self, get_response):\n"
}