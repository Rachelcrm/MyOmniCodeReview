{
  "patch": "diff --git a/lib/matplotlib/patches.py b/lib/matplotlib/patches.py\nindex e062249589..6cf1b7a2fb 100644\n--- a/lib/matplotlib/patches.py\n+++ b/lib/matplotlib/patches.py\n@@ -549,7 +549,7 @@ class Patch(artist.Artist):\n         if self._edgecolor[3] == 0 or self._linestyle == 'None':\n             lw = 0\n         gc.set_linewidth(lw)\n-        gc.set_dashes(*self._dash_pattern)\n+        gc.set_dashes(*self._unscaled_dash_pattern)\n         gc.set_capstyle(self._capstyle)\n         gc.set_joinstyle(self._joinstyle)\n \n@@ -586,14 +586,14 @@ class Patch(artist.Artist):\n         # docstring inherited\n         if not self.get_visible():\n             return\n-        # Patch has traditionally ignored the dashoffset.\n-        with cbook._setattr_cm(\n-                 self, _dash_pattern=(0, self._dash_pattern[1])), \\\n-             self._bind_draw_path_function(renderer) as draw_path:\n+       # Use the correct dash pattern that includes the offset.\n+        with self._bind_draw_path_function(renderer) as draw_path:\n             path = self.get_path()\n             transform = self.get_transform()\n             tpath = transform.transform_path_non_affine(path)\n             affine = transform.get_affine()\n+            gc = renderer.new_gc()\n+            gc.set_dashes(*self._dash_pattern)\n             draw_path(tpath, affine,\n                       # Work around a bug in the PDF and SVG renderers, which\n                       # do not draw the hatches if the facecolor is fully\n"
}