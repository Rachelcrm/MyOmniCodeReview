{
  "patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex a415a7074..2dd04e039 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -430,8 +430,12 @@ def safe_getattr(obj: Any, name: str, *defargs: Any) -> Any:\n         raise AttributeError(name) from exc\n \n \n+import enum\n+\n def object_description(object: Any) -> str:\n     \"\"\"A repr() implementation that returns text safe to use in reST context.\"\"\"\n+    if isinstance(object, enum.Enum):\n+        return f\"{object.__class__.__name__}.{object.name}\"\n     if isinstance(object, dict):\n         try:\n             sorted_keys = sorted(object)\n@@ -456,7 +460,7 @@ def object_description(object: Any) -> str:\n             pass  # Cannot sort frozenset values, fall back to generic repr\n         else:\n             return \"frozenset({%s})\" % \", \".join(object_description(x)\n-                                                 for x in sorted_values)\n+                                                  for x in sorted_values)\n     try:\n         s = repr(object)\n     except Exception as exc:\n"
}