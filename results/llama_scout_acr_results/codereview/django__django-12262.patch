{
  "patch": "diff --git a/django/template/library.py b/django/template/library.py\nindex 20bc86dac8..c006b12297 100644\n--- a/django/template/library.py\n+++ b/django/template/library.py\n@@ -261,7 +261,8 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n         if kwarg:\n             # The kwarg was successfully extracted\n             param, value = kwarg.popitem()\n-            if param not in params and param not in unhandled_kwargs and varkw is None:\n+            if (param not in params and param not in kwonly and \n+                param not in unhandled_kwargs and varkw is None):\n                 # An unexpected keyword argument was supplied\n                 raise TemplateSyntaxError(\n                     \"'%s' received unexpected keyword argument '%s'\" %\n@@ -271,6 +272,8 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n                 raise TemplateSyntaxError(\n                     \"'%s' received multiple values for keyword argument '%s'\" %\n                     (name, param))\n+            elif param in kwonly_defaults and param not in unhandled_kwargs:\n+                unhandled_kwargs.append(param)\n             else:\n                 # All good, record the keyword argument\n                 kwargs[str(param)] = value\n@@ -281,6 +284,14 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n                 elif param in unhandled_kwargs:\n                     # Same for keyword-only arguments\n                     unhandled_kwargs.remove(param)\n+                elif param in kwonly_defaults:\n+                    # If the argument is a kwonly with a default, it should not be in unhandled_kwargs\n+                    pass\n+                else:\n+                    # If the argument is not expected, raise an error\n+                    raise TemplateSyntaxError(\n+                        \"'%s' received unexpected keyword argument '%s'\" %\n+                        (name, param))\n         else:\n             if kwargs:\n                 raise TemplateSyntaxError(\n"
}