{
  "patch": "diff --git a/django/contrib/auth/management/commands/changepassword.py b/django/contrib/auth/management/commands/changepassword.py\nindex a69362f05c..25de1a7e9b 100644\n--- a/django/contrib/auth/management/commands/changepassword.py\n+++ b/django/contrib/auth/management/commands/changepassword.py\n@@ -32,13 +32,20 @@ class Command(BaseCommand):\n         )\n \n     def handle(self, *args, **options):\n+        database = options['database']\n+        db_options = {}\n+        if options['database_opt']:\n+            for opt in options['database_opt']:\n+                key, value = opt.split('=')\n+                db_options[key] = value\n+\n         if options['username']:\n             username = options['username']\n         else:\n             username = getpass.getuser()\n \n         try:\n-            u = UserModel._default_manager.using(options['database']).get(**{\n+            u = UserModel._default_manager.using(options['database'], **db_options).get(**{\n                 UserModel.USERNAME_FIELD: username\n             })\n         except UserModel.DoesNotExist:\ndiff --git a/django/contrib/auth/management/commands/createsuperuser.py b/django/contrib/auth/management/commands/createsuperuser.py\nindex d700ce4c0e..d8cc3d9e0e 100644\n--- a/django/contrib/auth/management/commands/createsuperuser.py\n+++ b/django/contrib/auth/management/commands/createsuperuser.py\n@@ -63,6 +63,11 @@ class Command(BaseCommand):\n     def handle(self, *args, **options):\n         username = options[self.UserModel.USERNAME_FIELD]\n         database = options['database']\n+        db_options = {}\n+        if options['database_opt']:\n+            for opt in options['database_opt']:\n+                key, value = opt.split('=')\n+                db_options[key] = value\n         user_data = {}\n         verbose_field_name = self.username_field.verbose_name\n         try:\n@@ -153,7 +158,7 @@ class Command(BaseCommand):\n                     else:\n                         raise CommandError('You must use --%s with --noinput.' % field_name)\n \n-            self.UserModel._default_manager.db_manager(database).create_superuser(**user_data)\n+            self.UserModel._default_manager.db_manager(database, **db_options).create_superuser(**user_data)\n             if options['verbosity'] >= 1:\n                 self.stdout.write(\"Superuser created successfully.\")\n         except KeyboardInterrupt:\n"
}