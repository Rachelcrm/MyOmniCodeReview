{
  "patch": "diff --git a/src/_pytest/runner.py b/src/_pytest/runner.py\nindex 584c3229d..4263ada58 100644\n--- a/src/_pytest/runner.py\n+++ b/src/_pytest/runner.py\n@@ -176,6 +176,8 @@ def pytest_runtest_call(item: Item) -> None:\n \n \n def pytest_runtest_teardown(item: Item, nextitem: Optional[Item]) -> None:\n+    if item._skipped_by_unittest:\n+        return\n     _update_current_test_var(item, \"teardown\")\n     item.session._setupstate.teardown_exact(nextitem)\n     _update_current_test_var(item, None)\ndiff --git a/testing/test_runner.py b/testing/test_runner.py\nindex 2e2c462d9..5962a2b33 100644\n--- a/testing/test_runner.py\n+++ b/testing/test_runner.py\n@@ -120,7 +120,7 @@ class BaseFunctionalTests:\n             \"\"\"\n             def test_func():\n                 pass\n-        \"\"\"\n+            \"\"\"\n         )\n         rep = reports[1]\n         assert rep.passed\n@@ -128,6 +128,20 @@ class BaseFunctionalTests:\n         assert rep.outcome == \"passed\"\n         assert not rep.longrepr\n \n+    def test_class_skip_teardown_not_executed(self, pytester: Pytester) -> None:\n+        reports = pytester.runitem(\n+            \"\"\"\n+            import unittest\n+            @unittest.skip(\"hello\")\n+            class TestClass(unittest.TestCase):\n+                def test_func(self):\n+                    pass\n+                def tearDown(self):\n+                    assert False, \"tearDown should not be executed\"\n+            \"\"\"\n+        )\n+        assert len(reports) == 1\n+\n     def test_failfunction(self, pytester: Pytester) -> None:\n         reports = pytester.runitem(\n             \"\"\"\n"
}