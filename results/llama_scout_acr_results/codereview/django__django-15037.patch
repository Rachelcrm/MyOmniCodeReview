{
  "patch": "diff --git a/django/db/backends/mysql/introspection.py b/django/db/backends/mysql/introspection.py\nindex 2383c9ca1b..82fe9f96c1 100644\n--- a/django/db/backends/mysql/introspection.py\n+++ b/django/db/backends/mysql/introspection.py\n@@ -149,14 +149,21 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n         return []\n \n     def get_relations(self, cursor, table_name):\n+        \"\"\"\n+        Return a dictionary of {field_name: (field_name_other_table, other_table)}\n+        representing all relationships to the given table.\n+        \"\"\"\n         \"\"\"\n         Return a dictionary of {field_name: (field_name_other_table, other_table)}\n         representing all relationships to the given table.\n         \"\"\"\n         constraints = self.get_key_columns(cursor, table_name)\n         relations = {}\n-        for my_fieldname, other_table, other_field in constraints:\n-            relations[my_fieldname] = (other_field, other_table)\n+        for my_fieldname, other_table, other_field, is_primary_key in constraints:\n+            if is_primary_key:\n+                relations[my_fieldname] = (other_field, other_table)\n+            else:\n+                relations[my_fieldname] = (other_field, other_table, {'to_field': other_field})\n         return relations\n \n     def get_key_columns(self, cursor, table_name):\n"
}