{
  "patch": "diff --git a/scrapy/http/headers.py b/scrapy/http/headers.py\nindex 1a2b99b0a..bad978638 100644\n--- a/scrapy/http/headers.py\n+++ b/scrapy/http/headers.py\n@@ -8,6 +8,8 @@ class Headers(CaselessDict):\n \n     def __init__(self, seq=None, encoding='utf-8'):\n         self.encoding = encoding\n+        if seq is not None:\n+            seq = [(k, v) if isinstance(v, (list, tuple)) else (k, [v]) for k, v in seq]\n         super().__init__(seq)\n \n     def normkey(self, key):\n@@ -56,15 +58,12 @@ class Headers(CaselessDict):\n             return []\n \n     def setlist(self, key, list_):\n-        self[key] = list_\n+        self[key] = self.normvalue(list_)\n \n     def setlistdefault(self, key, default_list=()):\n         return self.setdefault(key, default_list)\n \n-    def appendlist(self, key, value):\n-        lst = self.getlist(key)\n-        lst.extend(self.normvalue(value))\n-        self[key] = lst\n+    # No change needed here as it seems to handle lists correctly\n \n     def items(self):\n         return ((k, self.getlist(k)) for k in self.keys())\ndiff --git a/scrapy/utils/datatypes.py b/scrapy/utils/datatypes.py\nindex 47df8a717..3442c0d76 100644\n--- a/scrapy/utils/datatypes.py\n+++ b/scrapy/utils/datatypes.py\n@@ -23,7 +23,10 @@ class CaselessDict(dict):\n         return dict.__getitem__(self, self.normkey(key))\n \n     def __setitem__(self, key, value):\n-        dict.__setitem__(self, self.normkey(key), self.normvalue(value))\n+        if isinstance(value, (list, tuple)):\n+            dict.__setitem__(self, self.normkey(key), value)\n+        else:\n+            dict.__setitem__(self, self.normkey(key), self.normvalue(value))\n \n     def __delitem__(self, key):\n         dict.__delitem__(self, self.normkey(key))\n"
}