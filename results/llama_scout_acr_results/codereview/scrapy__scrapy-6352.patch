{
  "patch": "diff --git a/scrapy/core/downloader/__init__.py b/scrapy/core/downloader/__init__.py\nindex 98e1af6fb..733ab3b25 100644\n--- a/scrapy/core/downloader/__init__.py\n+++ b/scrapy/core/downloader/__init__.py\n@@ -144,6 +144,13 @@ class Downloader:\n         return key, self.slots[key]\n \n     def _get_slot_key(self, request: Request, spider: Optional[Spider]) -> str:\n+        if spider is not None:\n+            import warnings\n+            warnings.warn(\n+                \"The spider argument to _get_slot_key is deprecated\",\n+                ScrapyDeprecationWarning,\n+                stacklevel=2,\n+            )\n         if self.DOWNLOAD_SLOT in request.meta:\n             return cast(str, request.meta[self.DOWNLOAD_SLOT])\n \n@@ -153,6 +160,9 @@ class Downloader:\n \n         return key\n \n+    def get_slot_key(self, request: Request) -> str:\n+        return self._get_slot_key(request, None)\n+\n     def _enqueue_request(self, request: Request, spider: Spider) -> Deferred:\n         key, slot = self._get_slot(request, spider)\n         request.meta[self.DOWNLOAD_SLOT] = key\ndiff --git a/scrapy/pqueues.py b/scrapy/pqueues.py\nindex 773825c5e..58a47ef0f 100644\n--- a/scrapy/pqueues.py\n+++ b/scrapy/pqueues.py\n@@ -180,7 +180,7 @@ class DownloaderInterface:\n         return [(self._active_downloads(slot), slot) for slot in possible_slots]\n \n     def get_slot_key(self, request: Request) -> str:\n-        return self.downloader._get_slot_key(request, None)\n+        return self.downloader.get_slot_key(request)\n \n     def _active_downloads(self, slot: str) -> int:\n         \"\"\"Return a number of requests in a Downloader for a given slot\"\"\"\n"
}