{
  "patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex 5089737034..fcead7f70c 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -383,7 +383,7 @@ class In(FieldGetDbPrepValueIterableMixin, BuiltinLookup):\n                 \"Subqueries aren't allowed across different databases. Force \"\n                 \"the inner query to be evaluated using `list(inner_query)`.\"\n             )\n-\n+ \n         if self.rhs_is_direct_value():\n             # Remove None from the list as NULL is never equal to anything.\n             try:\n@@ -391,17 +391,17 @@ class In(FieldGetDbPrepValueIterableMixin, BuiltinLookup):\n                 rhs.discard(None)\n             except TypeError:  # Unhashable items in self.rhs\n                 rhs = [r for r in self.rhs if r is not None]\n-\n+ \n             if not rhs:\n                 raise EmptyResultSet\n-\n+ \n             # rhs should be an iterable; use batch_process_rhs() to\n             # prepare/transform those values.\n             sqls, sqls_params = self.batch_process_rhs(compiler, connection, rhs)\n             placeholder = '(' + ', '.join(sqls) + ')'\n             return (placeholder, sqls_params)\n         else:\n-            if not getattr(self.rhs, 'has_select_fields', True):\n+            if hasattr(self.rhs, 'has_select_fields') and self.rhs.has_select_fields:\n                 self.rhs.clear_select_clause()\n                 self.rhs.add_fields(['pk'])\n             return super().process_rhs(compiler, connection)\n"
}