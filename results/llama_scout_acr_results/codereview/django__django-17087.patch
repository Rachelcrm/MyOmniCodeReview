{
  "patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex f958589bea..e888a21ccb 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -262,6 +262,12 @@ class Field(RegisterLookupMixin):\n     def __repr__(self):\n         \"\"\"Display the module, class, and name of the field.\"\"\"\n         path = \"%s.%s\" % (self.__class__.__module__, self.__class__.__qualname__)\n+\n+        def _get_default(self):\n+            if self.has_default():\n+                if callable(self.default):\n+                    return self.default\n+                return lambda: self.default\n         name = getattr(self, \"name\", None)\n         if name is not None:\n             return \"<%s: %s>\" % (path, name)\n@@ -978,6 +984,7 @@ class Field(RegisterLookupMixin):\n         value = getattr(model_instance, self.attname)\n         if not connection.features.supports_default_keyword_in_insert:\n             from django.db.models.expressions import DatabaseDefault\n+            from django.utils.functional import cached_property\n \n             if isinstance(value, DatabaseDefault):\n                 return self.db_default\n"
}