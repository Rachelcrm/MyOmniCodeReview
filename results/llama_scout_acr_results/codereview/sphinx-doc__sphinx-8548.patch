{
  "patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex ddfd2b365..cf6d84600 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -676,7 +676,13 @@ class Documenter:\n                         return False\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n-\n+                    # Check for members inherited from parent classes\n+                    for parent_cls in cls.__bases__:\n+                        if name in parent_cls.__dict__:\n+                            return False\n+                        elif name in self.get_attr(parent_cls, '__annotations__', {}):\n+                            return False\n+    \n             return False\n \n         ret = []\n@@ -718,6 +724,20 @@ class Documenter:\n \n             has_doc = bool(doc)\n \n+            # Adjust filtering logic for inherited members\n+            if self.options.inherited_members and inspect.isclass(self.object):\n+                keep = False\n+                for cls in self.object.__mro__:\n+                    if membername in cls.__dict__:\n+                        keep = True\n+                        break\n+                    elif membername in self.get_attr(cls, '__annotations__', {}):\n+                        keep = True\n+                        break\n+                if keep:\n+                    ret.append((membername, member, isattr))\n+                continue\n+\n             metadata = extract_metadata(doc)\n             if 'private' in metadata:\n                 # consider a member private if docstring has \"private\" metadata\n"
}