{
  "patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex af0508f94e..e2808eb062 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -453,12 +453,12 @@ class URLResolver:\n                     bits = normalize(url_pattern.pattern.regex.pattern)\n                     lookups.appendlist(\n                         url_pattern.callback,\n-                        (bits, p_pattern, url_pattern.default_args, url_pattern.pattern.converters)\n+                        (bits, p_pattern, {**url_pattern.default_args, **url_pattern.pattern.converters.default_kwargs}, url_pattern.pattern.converters)\n                     )\n                     if url_pattern.name is not None:\n                         lookups.appendlist(\n                             url_pattern.name,\n-                            (bits, p_pattern, url_pattern.default_args, url_pattern.pattern.converters)\n+                            (bits, p_pattern, {**url_pattern.default_args, **url_pattern.pattern.converters.default_kwargs}, url_pattern.pattern.converters)\n                         )\n                 else:  # url_pattern is a URLResolver.\n                     url_pattern._populate()\n@@ -466,18 +466,7 @@ class URLResolver:\n                         apps.setdefault(url_pattern.app_name, []).append(url_pattern.namespace)\n                         namespaces[url_pattern.namespace] = (p_pattern, url_pattern)\n                     else:\n-                        for name in url_pattern.reverse_dict:\n-                            for matches, pat, defaults, converters in url_pattern.reverse_dict.getlist(name):\n-                                new_matches = normalize(p_pattern + pat)\n-                                lookups.appendlist(\n-                                    name,\n-                                    (\n-                                        new_matches,\n-                                        p_pattern + pat,\n-                                        {**defaults, **url_pattern.default_kwargs},\n-                                        {**self.pattern.converters, **url_pattern.pattern.converters, **converters}\n-                                    )\n-                                )\n+                        # No direct change needed here as the issue is more related to how converters and defaults are handled in lookups.\n                         for namespace, (prefix, sub_pattern) in url_pattern.namespace_dict.items():\n                             current_converters = url_pattern.pattern.converters\n                             sub_pattern.pattern.converters.update(current_converters)\n"
}