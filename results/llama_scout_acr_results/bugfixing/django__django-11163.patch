{
  "patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex d157c291ef..b5a34f95b2 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -44,7 +44,7 @@ def construct_instance(form, instance, fields=None, exclude=None):\n             continue\n         if fields is not None and f.name not in fields:\n             continue\n-        if exclude and f.name in exclude:\n+        if exclude is not None and f.name in exclude:\n             continue\n         # Leave defaults for fields that aren't in POST data, except for\n         # checkbox inputs because they don't appear in POST data if not checked.\n@@ -83,7 +83,7 @@ def model_to_dict(instance, fields=None, exclude=None):\n     for f in chain(opts.concrete_fields, opts.private_fields, opts.many_to_many):\n         if not getattr(f, 'editable', False):\n             continue\n-        if fields and f.name not in fields:\n+        if fields is not None and f.name not in fields:\n             continue\n         if exclude and f.name in exclude:\n             continue\n@@ -431,9 +431,9 @@ class BaseModelForm(BaseForm):\n         for f in chain(opts.many_to_many, opts.private_fields):\n             if not hasattr(f, 'save_form_data'):\n                 continue\n-            if fields and f.name not in fields:\n+            if fields is not None and f.name not in fields:\n                 continue\n-            if exclude and f.name in exclude:\n+            if exclude is not None and f.name in exclude:\n                 continue\n             if f.name in cleaned_data:\n                 f.save_form_data(self.instance, cleaned_data[f.name])\n"
}