{
  "patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 79d7e4f46..47ff728a6 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -1255,22 +1255,28 @@ class PythonDomain(Domain):\n             else:\n                 objtypes = self.objtypes_for_role(type)\n             if objtypes is not None:\n+                # try fullname first if given\n                 if modname and classname:\n                     fullname = modname + '.' + classname + '.' + name\n                     if fullname in self.objects and self.objects[fullname].objtype in objtypes:\n                         newname = fullname\n+                # then try current module\n+                if not newname and modname and modname + '.' + name in self.objects and \\\n+                   self.objects[modname + '.' + name].objtype in objtypes:\n+                    newname = modname + '.' + name\n+                # then try class\n+                if not newname and classname and classname + '.' + name in self.objects and \\\n+                   self.objects[classname + '.' + name].objtype in objtypes:\n+                    newname = classname + '.' + name\n+                # then try global\n+                if not newname and name in self.objects and self.objects[name].objtype in objtypes:\n+                    newname = name\n+                # \"fuzzy\" searching mode\n                 if not newname:\n-                    if modname and modname + '.' + name in self.objects and \\\n-                       self.objects[modname + '.' + name].objtype in objtypes:\n-                        newname = modname + '.' + name\n-                    elif name in self.objects and self.objects[name].objtype in objtypes:\n-                        newname = name\n-                    else:\n-                        # \"fuzzy\" searching mode\n-                        searchname = '.' + name\n-                        matches = [(oname, self.objects[oname]) for oname in self.objects\n-                                   if oname.endswith(searchname) and\n-                                   self.objects[oname].objtype in objtypes]\n+                    searchname = '.' + name\n+                    matches = [(oname, self.objects[oname]) for oname in self.objects\n+                               if oname.endswith(searchname) and\n+                               self.objects[oname].objtype in objtypes]\n         else:\n             # NOTE: searching for exact match, object type is not considered\n             if name in self.objects:\n"
}