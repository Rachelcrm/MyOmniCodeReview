{
  "patch": "diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py\nindex c580043eeb..faee118509 100644\n--- a/lib/matplotlib/stackplot.py\n+++ b/lib/matplotlib/stackplot.py\n@@ -70,7 +70,11 @@ def stackplot(axes, x, *args,\n \n     labels = iter(labels)\n     if colors is not None:\n-        axes.set_prop_cycle(color=colors)\n+        try:\n+            axes.set_prop_cycle(cycler('color', colors))\n+        except ValueError:\n+            # handle the case where colors contains 'CN' color aliases\n+            pass\n \n     # Assume data passed has not been 'stacked', so stack it here.\n     # We'll need a float buffer for the upcoming calculations.\n@@ -108,10 +112,13 @@ def stackplot(axes, x, *args,\n         stack += first_line\n \n     # Color between x = 0 and the first array.\n-    color = axes._get_lines.get_next_color()\n-    coll = axes.fill_between(x, first_line, stack[0, :],\n-                             facecolor=color, label=next(labels, None),\n-                             **kwargs)\n+    for i, c in enumerate(colors):\n+        color = c\n+        if isinstance(color, str) and color.startswith('C'):\n+            color = plt.rcParams['axes.prop_cycle'].by_key()['color'][int(color[1:])]\n+        coll = axes.fill_between(x, stack[i, :], stack[i + 1, :],\n+                                 facecolor=color, label=next(labels, None),\n+                                 **kwargs)\n     coll.sticky_edges.y[:] = [0]\n     r = [coll]\n \n"
}