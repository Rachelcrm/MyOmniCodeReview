{
  "patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 4b73d52293..afa1a298d5 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6695,7 +6695,11 @@ optional.\n         for i in range(nx):\n             # this will automatically overwrite bins,\n             # so that each histogram uses the same bins\n-            m, bins = np.histogram(x[i], bins, weights=w[i], **hist_kwargs)\n+            if range is not None:\n+                xmin, xmax = range\n+                m, bins = np.histogram(x[i], bins, range=(xmin, xmax), weights=w[i], **hist_kwargs)\n+            else:\n+                m, bins = np.histogram(x[i], bins, weights=w[i], **hist_kwargs)\n             m = m.astype(float)  # causes problems later if it's an int\n             if mlast is None:\n                 mlast = np.zeros(len(bins)-1, m.dtype)\n@@ -6706,10 +6710,10 @@ optional.\n \n         # If a stacked density plot, normalize so the area of all the stacked\n         # histograms together is 1\n-        if stacked and density:\n+        if density:\n             db = np.diff(bins)\n             for m in tops:\n-                m[:] = (m / db) / tops[-1].sum()\n+                m[:] = m / db / m.sum()\n         if cumulative:\n             slc = slice(None)\n             if isinstance(cumulative, Number) and cumulative < 0:\n"
}