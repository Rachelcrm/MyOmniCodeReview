{
  "patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 1ddbde9393..743c13d914 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1675,7 +1675,7 @@ class Model(metaclass=ModelBase):\n         fields = cls._meta.ordering\n \n         # Skip expressions and '?' fields.\n-        fields = (f for f in fields if isinstance(f, str) and f != '?')\n+        fields = (f for f in fields if isinstance(f, str) and f != '?' and not isinstance(f, OrderBy))\n \n         # Convert \"-field\" to \"field\".\n         fields = ((f[1:] if f.startswith('-') else f) for f in fields)\ndiff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex e15e64cde4..871a5d4313 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1852,11 +1852,10 @@ class Query(BaseExpression):\n \n         If 'ordering' is empty, clear all ordering from the query.\n         \"\"\"\n-        errors = []\n         for item in ordering:\n-            if not hasattr(item, 'resolve_expression') and not ORDER_PATTERN.match(item):\n+            if isinstance(item, str) and not ORDER_PATTERN.match(item):\n                 errors.append(item)\n-            if getattr(item, 'contains_aggregate', False):\n+            elif hasattr(item, 'resolve_expression') and getattr(item, 'contains_aggregate', False):\n                 raise FieldError(\n                     'Using an aggregate in order_by() without also including '\n                     'it in annotate() is not allowed: %s' % item\n"
}