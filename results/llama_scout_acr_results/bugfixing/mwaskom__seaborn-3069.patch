{
  "patch": "diff --git a/seaborn/categorical.py b/seaborn/categorical.py\nindex 3394c9c7..3bc64c44 100644\n--- a/seaborn/categorical.py\n+++ b/seaborn/categorical.py\n@@ -192,13 +192,13 @@ class _CategoricalPlotterNew(_RelationalPlotter):\n         lum = min(light_vals) * .6\n         return (lum, lum, lum)\n \n-    def _adjust_cat_axis(self, ax, axis):\n+    def _adjust_cat_axis(self, ax, axis, nominal=False):\n         \"\"\"Set ticks and limits for a categorical variable.\"\"\"\n         # Note: in theory, this could happen in _attach for all categorical axes\n         # But two reasons not to do that:\n         # - If it happens before plotting, autoscaling messes up the plot limits\n         # - It would change existing plots from other seaborn functions\n-        if self.var_types[axis] != \"categorical\":\n+        if self.var_types[axis] not in [\"categorical\", \"nominal\"]:\n             return\n \n         # If both x/y data are empty, the correct way to set up the plot is\n@@ -217,11 +217,15 @@ class _CategoricalPlotterNew(_RelationalPlotter):\n \n         if axis == \"x\":\n             ax.xaxis.grid(False)\n-            ax.set_xlim(-.5, n - .5, auto=None)\n+            if not nominal:\n+                ax.set_xlim(-.5, n - .5, auto=None)\n         else:\n             ax.yaxis.grid(False)\n             # Note limits that correspond to previously-inverted y axis\n-            ax.set_ylim(n - .5, -.5, auto=None)\n+            if not nominal:\n+                ax.set_ylim(n - .5, -.5, auto=None)\n+            else:\n+                ax.invert_yaxis()\n \n     @property\n     def _native_width(self):\n"
}