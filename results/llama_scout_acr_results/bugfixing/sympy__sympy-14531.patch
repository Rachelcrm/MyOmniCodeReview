{
  "patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex cc1d19fcce..45d645f47f 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -215,10 +215,8 @@ def _print_LatticeOp(self, expr):\n \n     def _print_Limit(self, expr):\n         e, z, z0, dir = expr.args\n-        if str(dir) == \"+\":\n-            return \"Limit(%s, %s, %s)\" % (e, z, z0)\n-        else:\n-            return \"Limit(%s, %s, %s, dir='%s')\" % (e, z, z0, dir)\n+        return \"Limit(%s, %s, %s%s)\" % (self._print(e), self._print(z), self._print(z0), \n+                                            \"dir='%s'\" % dir if str(dir) != \"+\" else \"\")\n \n     def _print_list(self, expr):\n         return \"[%s]\" % self.stringify(expr, \", \")\n@@ -570,11 +568,9 @@ def _print_mpz(self, expr):\n \n     def _print_Rational(self, expr):\n         if expr.q == 1:\n-            return str(expr.p)\n+            return self._print_Integer(expr.p)\n         else:\n-            if self._settings.get(\"sympy_integers\", False):\n-                return \"S(%s)/%s\" % (expr.p, expr.q)\n-            return \"%s/%s\" % (expr.p, expr.q)\n+            return \"%s/%s\" % (self._print_Integer(expr.p), self._print_Integer(expr.q))\n \n     def _print_PythonRational(self, expr):\n         if expr.q == 1:\n"
}