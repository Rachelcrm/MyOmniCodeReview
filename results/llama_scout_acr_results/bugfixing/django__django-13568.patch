{
  "patch": "diff --git a/django/contrib/auth/checks.py b/django/contrib/auth/checks.py\nindex 65fc266f7e..2cf3418ffa 100644\n--- a/django/contrib/auth/checks.py\n+++ b/django/contrib/auth/checks.py\n@@ -52,9 +52,15 @@ def check_user_model(app_configs=None, **kwargs):\n         )\n \n     # Check that the username field is unique\n-    if not cls._meta.get_field(cls.USERNAME_FIELD).unique:\n+    username_field = cls._meta.get_field(cls.USERNAME_FIELD)\n+    if not username_field.unique:\n+        has_unique_constraint = False\n+        for constraint in cls._meta.constraints:\n+            if isinstance(constraint, UniqueConstraint) and cls.USERNAME_FIELD in constraint.fields:\n+                has_unique_constraint = True\n+                break\n         if (settings.AUTHENTICATION_BACKENDS ==\n-                ['django.contrib.auth.backends.ModelBackend']):\n+                ['django.contrib.auth.backends.ModelBackend']) and not has_unique_constraint:\n             errors.append(\n                 checks.Error(\n                     \"'%s.%s' must be unique because it is named as the 'USERNAME_FIELD'.\" % (\n@@ -64,7 +70,7 @@ def check_user_model(app_configs=None, **kwargs):\n                     id='auth.E003',\n                 )\n             )\n-        else:\n+        elif not has_unique_constraint:\n             errors.append(\n                 checks.Warning(\n                     \"'%s.%s' is named as the 'USERNAME_FIELD', but it is not unique.\" % (\n"
}