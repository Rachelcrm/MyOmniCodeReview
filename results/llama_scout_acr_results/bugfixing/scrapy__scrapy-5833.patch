{
  "patch": "diff --git a/scrapy/extensions/feedexport.py b/scrapy/extensions/feedexport.py\nindex cd26b5778..43a4e6682 100644\n--- a/scrapy/extensions/feedexport.py\n+++ b/scrapy/extensions/feedexport.py\n@@ -206,9 +206,34 @@ class S3FeedStorage(BlockingFeedStorage):\n     def _store_in_thread(self, file):\n         file.seek(0)\n         kwargs = {\"ACL\": self.acl} if self.acl else {}\n-        self.s3_client.put_object(\n-            Bucket=self.bucketname, Key=self.keyname, Body=file, **kwargs\n-        )\n+        if file.tell() < 1024 * 1024 * 5:  # 5GB\n+            self.s3_client.put_object(\n+                Bucket=self.bucketname, Key=self.keyname, Body=file, **kwargs\n+            )\n+        else:\n+            mp_upload = self.s3_client.create_multipart_upload(\n+                Bucket=self.bucketname, Key=self.keyname, **kwargs\n+            )\n+            parts = []\n+            part_number = 1\n+            while True:\n+                part = self.s3_client.upload_part(\n+                    Bucket=self.bucketname,\n+                    Key=self.keyname,\n+                    PartNumber=part_number,\n+                    UploadId=mp_upload[\"UploadId\"],\n+                    Body=file.read(1024 * 1024 * 5),  # 5MB per part\n+                )\n+                parts.append({\"PartNumber\": part_number, \"ETag\": part[\"ETag\"]})\n+                part_number += 1\n+                if not file.read(1):\n+                    break\n+            self.s3_client.complete_multipart_upload(\n+                Bucket=self.bucketname,\n+                Key=self.keyname,\n+                UploadId=mp_upload[\"UploadId\"],\n+                MultipartUpload={\"Parts\": parts},\n+            )\n         file.close()\n \n \n"
}