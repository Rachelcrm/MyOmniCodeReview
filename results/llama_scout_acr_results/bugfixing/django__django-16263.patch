{
  "patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex de49e1c58c..d739d3a5c3 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -615,14 +615,16 @@ class QuerySet(AltersData):\n         \"\"\"\n         Perform a SELECT COUNT() and return the number of records as an\n         integer.\n-\n+    \n         If the QuerySet is already fully cached, return the length of the\n         cached results set to avoid multiple SELECT COUNT(*) calls.\n         \"\"\"\n         if self._result_cache is not None:\n             return len(self._result_cache)\n-\n-        return self.query.get_count(using=self.db)\n+    \n+        # Clear the annotations dictionary\n+        self.query.annotations = {}\n+        return self.query.get_count(using=self.db, distinct=False)\n \n     async def acount(self):\n         return await sync_to_async(self.count)()\n"
}