{
  "patch": "diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py\nindex cd3aab43ad..dbe083bccc 100644\n--- a/django/db/migrations/operations/fields.py\n+++ b/django/db/migrations/operations/fields.py\n@@ -232,7 +232,21 @@ class AlterField(FieldOperation):\n             to_field = to_model._meta.get_field(self.name)\n             if not self.preserve_default:\n                 to_field.default = self.field.default\n-            schema_editor.alter_field(from_model, from_field, to_field)\n+            if schema_editor.connection.vendor == 'sqlite':\n+                if from_field.get_internal_type() == to_field.get_internal_type():\n+                    # If the field type remains the same, \n+                    # and only choices are changed, do nothing.\n+                    # This prevents unnecessary table recreation on SQLite.\n+                    pass\n+                else:\n+                    if (from_field.get_internal_type() == to_field.get_internal_type() and \n+                        schema_editor.connection.vendor == 'sqlite'):\n+                        # No alteration needed for SQLite when the internal type doesn't change\n+                        pass\n+                    else:\n+                        schema_editor.alter_field(from_model, from_field, to_field)\n+            else:\n+                schema_editor.alter_field(from_model, from_field, to_field)\n             if not self.preserve_default:\n                 to_field.default = NOT_PROVIDED\n \n"
}