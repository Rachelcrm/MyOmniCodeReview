{
  "instance_id": "django__django-14007",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_fields.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom django.db import models\nfrom django.db.models import BigAutoField\n\nclass MyAutoField(BigAutoField):\n    def from_db_value(self, value, expression, connection):\n        if value is None:\n            return None\n        return MyIntWrapper(value)\n\n    def get_prep_value(self, value):\n        if value is None:\n            return None\n        return int(value)\n\nclass MyIntWrapper:\n    def __init__(self, value):\n        self.value = value\n\n    def __int(self):\n        return self.value\n\nclass AutoModel(models.Model):\n    id = MyAutoField(primary_key=True)\n\ndef test_my_auto_field():\n    am = AutoModel.objects.create()\n    assert isinstance(am.id, MyIntWrapper)\n\ndef test_bulk_create():\n    ams = [AutoModel()]\n    AutoModel.objects.bulk_create(ams)\n    assert isinstance(ams[0].id, MyIntWrapper)\n\ndef test_queryset_create():\n    am = AutoModel.objects.create()\n    assert isinstance(am.id, MyIntWrapper)\n\ndef test_queryset_bulk_create():\n    ams = [AutoModel()]\n    AutoModel.objects.bulk_create(ams)\n    assert isinstance(ams[0].id, MyIntWrapper)\n</patched>\n```\n\n<file>tests/test_query.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom django.db import models\nfrom django.db.models import QuerySet\n\nclass TestQuerySet:\n    def test_create(self):\n        qs = QuerySet()\n        # Test create method\n        pass\n\n    def test_bulk_create(self):\n        qs = QuerySet()\n        # Test bulk_create method\n        pass\n</patched>\n```",
  "patch": "--- a/tests/test_query.py\n+++ b/tests/test_query.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from django.db import models\n+from django.db.models import QuerySet\n+\n+class TestQuerySet:\n+    def test_create(self):\n+        qs = QuerySet()\n+        # Test create method\n+        pass\n+\n+    def test_bulk_create(self):\n+        qs = QuerySet()\n+        # Test bulk_create method\n+        pass\n"
}