{
  "instance_id": "sympy__sympy-17655",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "```\n<file>tests/test_geometry.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom sympy import geometry as ge\nimport sympy\n\ndef test_point_addition_order():\n    \"\"\"Test that addition of points and scalars works regardless of order.\"\"\"\n    point1 = ge.Point(0,0)\n    point2 = ge.Point(1,1)\n    \n    # Test with scalar on the left\n    result1 = point1 + point2 * sympy.sympify(2.0)\n    expected1 = ge.Point(2, 2)\n    assert result1 == expected1\n    \n    # Test with scalar on the right\n    result2 = point1 + sympy.sympify(2.0) * point2\n    expected2 = ge.Point(2, 2)\n    assert result2 == expected2\n\ndef test_point_scalar_multiplication():\n    \"\"\"Test that multiplying a point by a scalar works.\"\"\"\n    point = ge.Point(1, 1)\n    scalar = sympy.sympify(2.0)\n    result = point * scalar\n    expected = ge.Point(2, 2)\n    assert result == expected\n\ndef test_point_rmul():\n    \"\"\"Test that right multiplication of a point by a scalar works.\"\"\"\n    point = ge.Point(1, 1)\n    scalar = sympy.sympify(2.0)\n    result = scalar * point\n    expected = ge.Point(2, 2)\n    assert result == expected\n</patched>\n```",
  "patch": "--- a/tests/test_geometry.py\n+++ b/tests/test_geometry.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from sympy import geometry as ge\n+import sympy\n+\n+def test_point_addition_order():\n+    \"\"\"Test that addition of points and scalars works regardless of order.\"\"\"\n+    point1 = ge.Point(0,0)\n+    point2 = ge.Point(1,1)\n+    \n+    # Test with scalar on the left\n+    result1 = point1 + point2 * sympy.sympify(2.0)\n+    expected1 = ge.Point(2, 2)\n+    assert result1 == expected1\n+    \n+    # Test with scalar on the right\n+    result2 = point1 + sympy.sympify(2.0) * point2\n+    expected2 = ge.Point(2, 2)\n+    assert result2 == expected2\n+\n+def test_point_scalar_multiplication():\n+    \"\"\"Test that multiplying a point by a scalar works.\"\"\"\n+    point = ge.Point(1, 1)\n+    scalar = sympy.sympify(2.0)\n+    result = point * scalar\n+    expected = ge.Point(2, 2)\n+    assert result == expected\n+\n+def test_point_rmul():\n+    \"\"\"Test that right multiplication of a point by a scalar works.\"\"\"\n+    point = ge.Point(1, 1)\n+    scalar = sympy.sympify(2.0)\n+    result = scalar * point\n+    expected = ge.Point(2, 2)\n+    assert result == expected\n"
}