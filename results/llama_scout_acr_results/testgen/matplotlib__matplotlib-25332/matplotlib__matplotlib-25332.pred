{
  "instance_id": "matplotlib__matplotlib-25332",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_figure.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nimport matplotlib.pyplot as plt\nimport pickle\n\ndef test_align_labels_pickling():\n    \"\"\"Test that pickling a figure with aligned labels works.\"\"\"\n    fig = plt.figure()\n    ax1 = fig.add_subplot(211)\n    ax2 = fig.add_subplot(212)\n    time = [0, 1, 2, 3, 4]\n    speed = [40000, 4300, 4500, 4700, 4800]\n    acc = [10, 11, 12, 13, 14]\n    ax1.plot(time, speed)\n    ax1.set_ylabel('speed')\n    ax2.plot(time, acc)\n    ax2.set_ylabel('acc')\n\n    fig.align_labels()\n\n    # Test that pickling works\n    try:\n        pickle.dumps(fig)\n    except Exception as e:\n        pytest.fail(f\"Pickling failed: {e}\")\n\ndef test_add_axobserver_pickling():\n    \"\"\"Test that pickling a figure with an ax observer works.\"\"\"\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n\n    def observer(arg):\n        pass\n\n    fig.add_axobserver(observer)\n\n    # Test that pickling works\n    try:\n        pickle.dumps(fig)\n    except Exception as e:\n        pytest.fail(f\"Pickling failed: {e}\")\n</patched>\n```",
  "patch": "--- a/tests/test_figure.py\n+++ b/tests/test_figure.py\n-# Original code here (if modifying existing file)\n+import pytest\n+import matplotlib.pyplot as plt\n+import pickle\n+\n+def test_align_labels_pickling():\n+    \"\"\"Test that pickling a figure with aligned labels works.\"\"\"\n+    fig = plt.figure()\n+    ax1 = fig.add_subplot(211)\n+    ax2 = fig.add_subplot(212)\n+    time = [0, 1, 2, 3, 4]\n+    speed = [40000, 4300, 4500, 4700, 4800]\n+    acc = [10, 11, 12, 13, 14]\n+    ax1.plot(time, speed)\n+    ax1.set_ylabel('speed')\n+    ax2.plot(time, acc)\n+    ax2.set_ylabel('acc')\n+\n+    fig.align_labels()\n+\n+    # Test that pickling works\n+    try:\n+        pickle.dumps(fig)\n+    except Exception as e:\n+        pytest.fail(f\"Pickling failed: {e}\")\n+\n+def test_add_axobserver_pickling():\n+    \"\"\"Test that pickling a figure with an ax observer works.\"\"\"\n+    fig = plt.figure()\n+    ax = fig.add_subplot(111)\n+\n+    def observer(arg):\n+        pass\n+\n+    fig.add_axobserver(observer)\n+\n+    # Test that pickling works\n+    try:\n+        pickle.dumps(fig)\n+    except Exception as e:\n+        pytest.fail(f\"Pickling failed: {e}\")\n"
}