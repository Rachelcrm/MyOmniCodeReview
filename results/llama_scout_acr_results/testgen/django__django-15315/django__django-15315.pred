{
  "instance_id": "django__django-15315",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "```\n<file>tests/test_modeling.py</file>\n<original>\n</original>\n<patched>\nimport pytest\nfrom django.db import models\n\ndef test_field_hash_immutable():\n    f = models.CharField(max_length=200)\n    d = {f: 1}\n    class Book(models.Model):\n        title = f\n    assert f in d\n\ndef test_field_hash_consistency():\n    f1 = models.CharField(max_length=200)\n    f2 = models.CharField(max_length=200)\n    assert hash(f1) == hash(f2)\n\ndef test_field_in_dict_before_assignment():\n    f = models.CharField(max_length=200)\n    d = {f: 1}\n    class Book(models.Model):\n        title = f\n    assert f in d\n\ndef test_field_hash_after_assignment():\n    f = models.CharField(max_length=200)\n    class Book(models.Model):\n        title = f\n    assert hash(f) == hash(f)\n\ndef test_multiple_fields_same_hash():\n    f1 = models.CharField(max_length=200)\n    f2 = models.CharField(max_length=200)\n    assert hash(f1) == hash(f2)\n    class Book(models.Model):\n        title1 = f1\n        title2 = f2\n    assert hash(f1) == hash(f1)\n</patched>\n```",
  "patch": "--- a/tests/test_modeling.py\n+++ b/tests/test_modeling.py\n+import pytest\n+from django.db import models\n+\n+def test_field_hash_immutable():\n+    f = models.CharField(max_length=200)\n+    d = {f: 1}\n+    class Book(models.Model):\n+        title = f\n+    assert f in d\n+\n+def test_field_hash_consistency():\n+    f1 = models.CharField(max_length=200)\n+    f2 = models.CharField(max_length=200)\n+    assert hash(f1) == hash(f2)\n+\n+def test_field_in_dict_before_assignment():\n+    f = models.CharField(max_length=200)\n+    d = {f: 1}\n+    class Book(models.Model):\n+        title = f\n+    assert f in d\n+\n+def test_field_hash_after_assignment():\n+    f = models.CharField(max_length=200)\n+    class Book(models.Model):\n+        title = f\n+    assert hash(f) == hash(f)\n+\n+def test_multiple_fields_same_hash():\n+    f1 = models.CharField(max_length=200)\n+    f2 = models.CharField(max_length=200)\n+    assert hash(f1) == hash(f2)\n+    class Book(models.Model):\n+        title1 = f1\n+        title2 = f2\n+    assert hash(f1) == hash(f1)\n"
}