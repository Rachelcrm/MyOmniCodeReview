{
  "instance_id": "django__django-14580",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_migrations.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom django.db import migrations\nfrom django.db.migrations.writer import MigrationWriter\nfrom django.db.models import Model, TextField\n\nclass TestMigrationWriter:\n    def test_write_imports(self):\n        # Test that the writer includes the necessary imports\n        class MyModel(Model):\n            field = TextField(primary_key=True)\n\n        migration = migrations.CreateModel(\n            name='MyModel',\n            fields=[('field', TextField(primary_key=True))],\n        )\n\n        writer = MigrationWriter(migration)\n        output = writer.as_string()\n\n        assert 'from django.db import models' in output\n\n    def test_bases_import(self):\n        # Test that the writer includes the necessary imports for bases\n        class MyBaseModel(Model):\n            pass\n\n        class MyModel(MyBaseModel):\n            field = TextField(primary_key=True)\n\n        migration = migrations.CreateModel(\n            name='MyModel',\n            fields=[('field', TextField(primary_key=True))],\n            bases=(MyBaseModel, Model),\n        )\n\n        writer = MigrationWriter(migration)\n        output = writer.as_string()\n\n        assert 'from django.db import models' in output\n\n    def test_mixin_import(self):\n        # Test that the writer includes the necessary imports for mixins\n        class MyMixin:\n            pass\n\n        class MyModel(MyMixin):\n            field = TextField(primary_key=True)\n\n        migration = migrations.CreateModel(\n            name='MyModel',\n            fields=[('field', TextField(primary_key=True))],\n            bases=(MyMixin, Model),\n        )\n\n        writer = MigrationWriter(migration)\n        output = writer.as_string()\n\n        assert 'import app.models' not in output\n        assert 'from django.db import models' in output\n</patched>\n```",
  "patch": "--- a/tests/test_migrations.py\n+++ b/tests/test_migrations.py\n-# Empty if creating new file\n+import pytest\n+from django.db import migrations\n+from django.db.migrations.writer import MigrationWriter\n+from django.db.models import Model, TextField\n+\n+class TestMigrationWriter:\n+    def test_write_imports(self):\n+        # Test that the writer includes the necessary imports\n+        class MyModel(Model):\n+            field = TextField(primary_key=True)\n+\n+        migration = migrations.CreateModel(\n+            name='MyModel',\n+            fields=[('field', TextField(primary_key=True))],\n+        )\n+\n+        writer = MigrationWriter(migration)\n+        output = writer.as_string()\n+\n+        assert 'from django.db import models' in output\n+\n+    def test_bases_import(self):\n+        # Test that the writer includes the necessary imports for bases\n+        class MyBaseModel(Model):\n+            pass\n+\n+        class MyModel(MyBaseModel):\n+            field = TextField(primary_key=True)\n+\n+        migration = migrations.CreateModel(\n+            name='MyModel',\n+            fields=[('field', TextField(primary_key=True))],\n+            bases=(MyBaseModel, Model),\n+        )\n+\n+        writer = MigrationWriter(migration)\n+        output = writer.as_string()\n+\n+        assert 'from django.db import models' in output\n+\n+    def test_mixin_import(self):\n+        # Test that the writer includes the necessary imports for mixins\n+        class MyMixin:\n+            pass\n+\n+        class MyModel(MyMixin):\n+            field = TextField(primary_key=True)\n+\n+        migration = migrations.CreateModel(\n+            name='MyModel',\n+            fields=[('field', TextField(primary_key=True))],\n+            bases=(MyMixin, Model),\n+        )\n+\n+        writer = MigrationWriter(migration)\n+        output = writer.as_string()\n+\n+        assert 'import app.models' not in output\n+        assert 'from django.db import models' in output\n"
}