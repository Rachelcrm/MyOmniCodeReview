{
  "instance_id": "sympy__sympy-17139",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "```\n<file>tests/test_simplify.py</file>\n<original>\n# Original code here\n</original>\n<patched>\nimport pytest\nfrom sympy import symbols, I, cos, simplify\n\ndef test_simplify_cos_x_to_I():\n    x = symbols('x')\n    assert simplify(cos(x)**I) == cos(x)**I\n\ndef test_simplify_cos_x_to_complex_I():\n    x = symbols('x')\n    assert simplify(cos(x)**(I*2)) == (cos(x)**2)**I\n\ndef test_simplify_trigsimp_cos_x_to_I():\n    x = symbols('x')\n    assert simplify(cos(x)**I) == cos(x)**I\n\ndef test_invalid_comparison_complex_I():\n    x = symbols('x')\n    try:\n        simplify(cos(x)**I)\n        assert False, \"Expected TypeError for complex comparison\"\n    except TypeError as e:\n        assert \"Invalid comparison of complex\" in str(e)\n</patched>\n```",
  "patch": "--- a/tests/test_simplify.py\n+++ b/tests/test_simplify.py\n-# Original code here\n+import pytest\n+from sympy import symbols, I, cos, simplify\n+\n+def test_simplify_cos_x_to_I():\n+    x = symbols('x')\n+    assert simplify(cos(x)**I) == cos(x)**I\n+\n+def test_simplify_cos_x_to_complex_I():\n+    x = symbols('x')\n+    assert simplify(cos(x)**(I*2)) == (cos(x)**2)**I\n+\n+def test_simplify_trigsimp_cos_x_to_I():\n+    x = symbols('x')\n+    assert simplify(cos(x)**I) == cos(x)**I\n+\n+def test_invalid_comparison_complex_I():\n+    x = symbols('x')\n+    try:\n+        simplify(cos(x)**I)\n+        assert False, \"Expected TypeError for complex comparison\"\n+    except TypeError as e:\n+        assert \"Invalid comparison of complex\" in str(e)\n"
}