{
  "instance_id": "django__django-12325",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_models.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom django.db import models\nfrom django.core.exceptions import ImproperlyConfigured\n\nclass Document(models.Model):\n    pass\n\nclass Picking(Document):\n    document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n    origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n\ndef test_parent_link_order():\n    # Test that order of OneToOneField definitions does not affect parent_link\n    class Picking(Document):\n        origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n        document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n\ndef test_parent_link_implicit():\n    # Test that implicit parent_link raises ImproperlyConfigured\n    with pytest.raises(ImproperlyConfigured):\n        class Picking(Document):\n            origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n\ndef test_parent_link_explicit():\n    # Test that explicit parent_link works\n    class Picking(Document):\n        document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n        origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n</patched>\n```",
  "patch": "--- a/tests/test_models.py\n+++ b/tests/test_models.py\n-# Empty if creating new file\n+import pytest\n+from django.db import models\n+from django.core.exceptions import ImproperlyConfigured\n+\n+class Document(models.Model):\n+    pass\n+\n+class Picking(Document):\n+    document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n+    origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n+\n+def test_parent_link_order():\n+    # Test that order of OneToOneField definitions does not affect parent_link\n+    class Picking(Document):\n+        origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n+        document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n+\n+def test_parent_link_implicit():\n+    # Test that implicit parent_link raises ImproperlyConfigured\n+    with pytest.raises(ImproperlyConfigured):\n+        class Picking(Document):\n+            origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n+\n+def test_parent_link_explicit():\n+    # Test that explicit parent_link works\n+    class Picking(Document):\n+        document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')\n+        origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)\n"
}