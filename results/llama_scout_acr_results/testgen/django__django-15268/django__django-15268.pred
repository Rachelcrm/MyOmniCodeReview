{
  "instance_id": "django__django-15268",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_migrations/test_optimize.py</file>\n<original>\n# No original code here\n</original>\n<patched>\nimport pytest\nfrom django.db import migrations\n\ndef test_optimize_consecutive_operations():\n    # Test that consecutive operations are optimized\n    class Migration(migrations.Migration):\n\n        dependencies = [\n            (\"testapp\", \"0001_initial\"),\n        ]\n\n        operations = [\n            migrations.AlterUniqueTogether(\n                name='mymodel',\n                unique_together=set(),\n            ),\n            migrations.AlterUniqueTogether(\n                name='mymodel',\n                unique_together={(\"col\",)},\n            ),\n        ]\n\n        def test_optimize(self):\n            # Test that the operations are optimized\n            pass\n</patched>\n\n<file>tests/test_migrations/test_optimize.py</file>\n<original>\n# No original code here\n</original>\n<patched>\nimport pytest\nfrom django.db import migrations\n\ndef test_optimize_consecutive_operations():\n    operations = [\n        migrations.AlterUniqueTogether(\n            name='mymodel',\n            unique_together=set(),\n        ),\n        migrations.AlterUniqueTogether(\n            name='mymodel',\n            unique_together={(\"col\",)},\n        )\n    ]\n\n    optimized_operations = [\n        migrations.AlterUniqueTogether(\n            name='mymodel',\n            unique_together={(\"col\",)},\n        )\n    ]\n\n    assert operations == optimized_operations\n</patched>\n\n<file>tests/test_migrations/test_optimize.py</file>\n<original>\n# No original code here\n</original>\n<patched>\nimport pytest\nfrom django.db import migrations\n\ndef test_optimize_consecutive_operations():\n    operations = [\n        migrations.AlterUniqueTogether(\n            name='mymodel',\n            unique_together=set(),\n        ),\n        migrations.AlterIndexTogether(\n            name='mymodel',\n            index_together=set(),\n        ),\n        migrations.AlterUniqueTogether(\n            name='mymodel',\n            unique_together={(\"col\",)},\n        ),\n        migrations.AlterIndexTogether(\n            name='mymodel',\n            index_together={(\"col\",)},\n        )\n    ]\n\n    optimized_operations = [\n        migrations.AlterUniqueTogether(\n            name='mymodel',\n            unique_together={(\"col\",)},\n        ),\n        migrations.AlterIndexTogether(\n            name='mymodel',\n            index_together={(\"col\",)},\n        )\n    ]\n\n    assert operations == optimized_operations\n</patched>\n```",
  "patch": "--- a/tests/test_migrations/test_optimize.py\n+++ b/tests/test_migrations/test_optimize.py\n-# No original code here\n+import pytest\n+from django.db import migrations\n+\n+def test_optimize_consecutive_operations():\n+    # Test that consecutive operations are optimized\n+    class Migration(migrations.Migration):\n+\n+        dependencies = [\n+            (\"testapp\", \"0001_initial\"),\n+        ]\n+\n+        operations = [\n+            migrations.AlterUniqueTogether(\n+                name='mymodel',\n+                unique_together=set(),\n+            ),\n+            migrations.AlterUniqueTogether(\n+                name='mymodel',\n+                unique_together={(\"col\",)},\n+            ),\n+        ]\n+\n+        def test_optimize(self):\n+            # Test that the operations are optimized\n+            pass\n\n--- a/tests/test_migrations/test_optimize.py\n+++ b/tests/test_migrations/test_optimize.py\n-# No original code here\n+import pytest\n+from django.db import migrations\n+\n+def test_optimize_consecutive_operations():\n+    operations = [\n+        migrations.AlterUniqueTogether(\n+            name='mymodel',\n+            unique_together=set(),\n+        ),\n+        migrations.AlterUniqueTogether(\n+            name='mymodel',\n+            unique_together={(\"col\",)},\n+        )\n+    ]\n+\n+    optimized_operations = [\n+        migrations.AlterUniqueTogether(\n+            name='mymodel',\n+            unique_together={(\"col\",)},\n+        )\n+    ]\n+\n+    assert operations == optimized_operations\n\n--- a/tests/test_migrations/test_optimize.py\n+++ b/tests/test_migrations/test_optimize.py\n-# No original code here\n+import pytest\n+from django.db import migrations\n+\n+def test_optimize_consecutive_operations():\n+    operations = [\n+        migrations.AlterUniqueTogether(\n+            name='mymodel',\n+            unique_together=set(),\n+        ),\n+        migrations.AlterIndexTogether(\n+            name='mymodel',\n+            index_together=set(),\n+        ),\n+        migrations.AlterUniqueTogether(\n+            name='mymodel',\n+            unique_together={(\"col\",)},\n+        ),\n+        migrations.AlterIndexTogether(\n+            name='mymodel',\n+            index_together={(\"col\",)},\n+        )\n+    ]\n+\n+    optimized_operations = [\n+        migrations.AlterUniqueTogether(\n+            name='mymodel',\n+            unique_together={(\"col\",)},\n+        ),\n+        migrations.AlterIndexTogether(\n+            name='mymodel',\n+            index_together={(\"col\",)},\n+        )\n+    ]\n+\n+    assert operations == optimized_operations\n"
}