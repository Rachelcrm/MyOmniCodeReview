{
  "instance_id": "ytdl-org__youtube-dl-28801",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_ytdl.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom youtube_dl import YoutubeDL\n\ndef test_authentication():\n    ydl = YoutubeDL({'username': 'peel', 'password': 'group'})\n    url = 'http://mooo.peelwiki.com/dl/BillfromNorthWales/01%20John%20Peel/1978-12-26%20John%20Peel%20BBC%20Radio%201.mp3'\n    try:\n        ydl.download([url])\n        assert True\n    except Exception as e:\n        assert False, f\"Download failed: {e}\"\n\ndef test_authentication_invalid_credentials():\n    ydl = YoutubeDL({'username': 'wrong', 'password': 'credentials'})\n    url = 'http://mooo.peelwiki.com/dl/BillfromNorthWales/01%20John%20Peel/1978-12-26%20John%20Peel%20BBC%20Radio%201.mp3'\n    with pytest.raises(Exception):\n        ydl.download([url])\n\ndef test_no_authentication():\n    ydl = YoutubeDL()\n    url = 'http://mooo.peelwiki.com/dl/BillfromNorthWales/01%20John%20Peel/1978-12-26%20John%20Peel%20BBC%20Radio%201.mp3'\n    with pytest.raises(Exception):\n        ydl.download([url])\n</patched>\n</file>\n\n<file>tests/test_options.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom youtube_dl.options import parseOpts\n\ndef test_parse_opts_username_password():\n    opts = parseOpts(['--username', 'peel', '--password', 'group'])\n    assert opts['username'] == 'peel'\n    assert opts['password'] == 'group'\n</patched>\n</file>\n\n<file>youtube_dl/options.py</file>\n<original>\ndef parseOpts(overrideArguments=None):\n    # ...\n</original>\n<patched>\ndef parseOpts(overrideArguments=None):\n    # ...\n    opts = {}\n    # ...\n    if '--username' in overrideArguments:\n        opts['username'] = overrideArguments[overrideArguments.index('--username') + 1]\n    if '--password' in overrideArguments:\n        opts['password'] = overrideArguments[overrideArguments.index('--password') + 1]\n    # ...\n    return opts\n</patched>\n</file>\n\n<file>youtube_dl/YoutubeDL.py</file>\n<original>\ndef _setup_opener(self):\n    # ...\n</original>\n<patched>\ndef _setup_opener(self):\n    # ...\n    if 'username' in self.params and 'password' in self.params:\n        self._opener.addheaders = [('Authorization', f'Basic {self.params[\"username\"]}:{self.params[\"password\"]}')]\n    # ...\n</patched>\n</file>",
  "patch": "--- a/tests/test_ytdl.py\n+++ b/tests/test_ytdl.py\n-# Empty if creating new file\n+import pytest\n+from youtube_dl import YoutubeDL\n+\n+def test_authentication():\n+    ydl = YoutubeDL({'username': 'peel', 'password': 'group'})\n+    url = 'http://mooo.peelwiki.com/dl/BillfromNorthWales/01%20John%20Peel/1978-12-26%20John%20Peel%20BBC%20Radio%201.mp3'\n+    try:\n+        ydl.download([url])\n+        assert True\n+    except Exception as e:\n+        assert False, f\"Download failed: {e}\"\n+\n+def test_authentication_invalid_credentials():\n+    ydl = YoutubeDL({'username': 'wrong', 'password': 'credentials'})\n+    url = 'http://mooo.peelwiki.com/dl/BillfromNorthWales/01%20John%20Peel/1978-12-26%20John%20Peel%20BBC%20Radio%201.mp3'\n+    with pytest.raises(Exception):\n+        ydl.download([url])\n+\n+def test_no_authentication():\n+    ydl = YoutubeDL()\n+    url = 'http://mooo.peelwiki.com/dl/BillfromNorthWales/01%20John%20Peel/1978-12-26%20John%20Peel%20BBC%20Radio%201.mp3'\n+    with pytest.raises(Exception):\n+        ydl.download([url])\n\n--- a/tests/test_options.py\n+++ b/tests/test_options.py\n-# Empty if creating new file\n+import pytest\n+from youtube_dl.options import parseOpts\n+\n+def test_parse_opts_username_password():\n+    opts = parseOpts(['--username', 'peel', '--password', 'group'])\n+    assert opts['username'] == 'peel'\n+    assert opts['password'] == 'group'\n\n--- a/youtube_dl/options.py\n+++ b/youtube_dl/options.py\n-def parseOpts(overrideArguments=None):\n-    # ...\n+def parseOpts(overrideArguments=None):\n+    # ...\n+    opts = {}\n+    # ...\n+    if '--username' in overrideArguments:\n+        opts['username'] = overrideArguments[overrideArguments.index('--username') + 1]\n+    if '--password' in overrideArguments:\n+        opts['password'] = overrideArguments[overrideArguments.index('--password') + 1]\n+    # ...\n+    return opts\n\n--- a/youtube_dl/YoutubeDL.py\n+++ b/youtube_dl/YoutubeDL.py\n-def _setup_opener(self):\n-    # ...\n+def _setup_opener(self):\n+    # ...\n+    if 'username' in self.params and 'password' in self.params:\n+        self._opener.addheaders = [('Authorization', f'Basic {self.params[\"username\"]}:{self.params[\"password\"]}')]\n+    # ...\n"
}