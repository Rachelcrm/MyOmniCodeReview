{
  "instance_id": "django__django-15098",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_middleware_locale.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom django.test import RequestFactory\nfrom django.urls import path, i18n_patterns\nfrom django.http import HttpResponse\nfrom django.middleware.locale import LocaleMiddleware\nfrom django.conf import settings\n\n@pytest.fixture\ndef request_factory():\n    return RequestFactory()\n\ndef test_process_request_language_code_with_script_and_region():\n    # Arrange\n    settings.LANGUAGES = [\n        ('en-us', \"English\"),\n        ('en-latn-us', \"Latin English\"),\n        ('en-Latn-US', \"BCP 47 case format\"),\n    ]\n    settings.MIDDLEWARE = ['django.middleware.locale.LocaleMiddleware']\n    request = RequestFactory().get('/en-latn-us/')\n\n    # Act\n    middleware = LocaleMiddleware()\n    middleware.process_request(request)\n\n    # Assert\n    assert request.LANGUAGE_CODE == 'en-latn-us'\n\ndef test_process_response_language_code_with_script_and_region():\n    # Arrange\n    settings.LANGUAGES = [\n        ('en-us', \"English\"),\n        ('en-latn-us', \"Latin English\"),\n        ('en-Latn-US', \"BCP 47 case format\"),\n    ]\n    settings.MIDDLEWARE = ['django.middleware.locale.LocaleMiddleware']\n\n    def bangiah(request):\n        return HttpResponse('U!')\n\n    urlpatterns = i18n_patterns(\n        path('', bangiah),\n    )\n\n    request = RequestFactory().get('/en-latn-us/')\n    response = bangiah(request)\n\n    # Act\n    middleware = LocaleMiddleware()\n    result = middleware.process_response(request, response)\n\n    # Assert\n    assert result.status_code == 200\n\ndef test_i18n_patterns_language_code_with_script_and_region():\n    # Arrange\n    settings.LANGUAGES = [\n        ('en-us', \"English\"),\n        ('en-latn-us', \"Latin English\"),\n        ('en-Latn-US', \"BCP 47 case format\"),\n    ]\n\n    def bangiah(request):\n        return HttpResponse('U!')\n\n    urlpatterns = i18n_patterns(\n        path('', bangiah),\n    )\n\n    request = RequestFactory().get('/en-latn-us/')\n\n    # Act\n    response = bangiah(request)\n\n    # Assert\n    assert response.status_code == 200\n</patched>\n```",
  "patch": "--- a/tests/test_middleware_locale.py\n+++ b/tests/test_middleware_locale.py\n-# Empty if creating new file\n+import pytest\n+from django.test import RequestFactory\n+from django.urls import path, i18n_patterns\n+from django.http import HttpResponse\n+from django.middleware.locale import LocaleMiddleware\n+from django.conf import settings\n+\n+@pytest.fixture\n+def request_factory():\n+    return RequestFactory()\n+\n+def test_process_request_language_code_with_script_and_region():\n+    # Arrange\n+    settings.LANGUAGES = [\n+        ('en-us', \"English\"),\n+        ('en-latn-us', \"Latin English\"),\n+        ('en-Latn-US', \"BCP 47 case format\"),\n+    ]\n+    settings.MIDDLEWARE = ['django.middleware.locale.LocaleMiddleware']\n+    request = RequestFactory().get('/en-latn-us/')\n+\n+    # Act\n+    middleware = LocaleMiddleware()\n+    middleware.process_request(request)\n+\n+    # Assert\n+    assert request.LANGUAGE_CODE == 'en-latn-us'\n+\n+def test_process_response_language_code_with_script_and_region():\n+    # Arrange\n+    settings.LANGUAGES = [\n+        ('en-us', \"English\"),\n+        ('en-latn-us', \"Latin English\"),\n+        ('en-Latn-US', \"BCP 47 case format\"),\n+    ]\n+    settings.MIDDLEWARE = ['django.middleware.locale.LocaleMiddleware']\n+\n+    def bangiah(request):\n+        return HttpResponse('U!')\n+\n+    urlpatterns = i18n_patterns(\n+        path('', bangiah),\n+    )\n+\n+    request = RequestFactory().get('/en-latn-us/')\n+    response = bangiah(request)\n+\n+    # Act\n+    middleware = LocaleMiddleware()\n+    result = middleware.process_response(request, response)\n+\n+    # Assert\n+    assert result.status_code == 200\n+\n+def test_i18n_patterns_language_code_with_script_and_region():\n+    # Arrange\n+    settings.LANGUAGES = [\n+        ('en-us', \"English\"),\n+        ('en-latn-us', \"Latin English\"),\n+        ('en-Latn-US', \"BCP 47 case format\"),\n+    ]\n+\n+    def bangiah(request):\n+        return HttpResponse('U!')\n+\n+    urlpatterns = i18n_patterns(\n+        path('', bangiah),\n+    )\n+\n+    request = RequestFactory().get('/en-latn-us/')\n+\n+    # Act\n+    response = bangiah(request)\n+\n+    # Assert\n+    assert response.status_code == 200\n"
}