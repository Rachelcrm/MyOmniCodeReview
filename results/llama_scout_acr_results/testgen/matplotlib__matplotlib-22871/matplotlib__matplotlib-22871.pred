{
  "instance_id": "matplotlib__matplotlib-22871",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "To address the issue with the ConciseDateFormatter not showing the year when plotting less than 12 months, we need to create a comprehensive test suite that covers the described functionality.\n\nThe test suite should include tests that reproduce the bug, test the fix, and cover edge cases.\n\nHere is the test suite:\n\n```\n<file>tests/test_dates.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom datetime import datetime, timedelta\n\n@pytest.fixture\ndef date_range():\n    initial = datetime(2021, 2, 14, 0, 0, 0)\n    time_array = [initial + timedelta(days=x) for x in range(1, 200)]\n    return time_array\n\ndef test_concise_date_formatter(date_range):\n    fig, ax = plt.subplots()\n    ax.plot(date_range, [-x**2/20000 for x in range(1, 200)])\n    locator = mdates.AutoDateLocator()\n    formatter = mdates.ConciseDateFormatter(locator)\n    ax.grid(True)\n    ax.set_ylabel(\"Temperature ($\\degree$C)\")\n    ax.xaxis.set_major_locator(locator)\n    ax.xaxis.set_major_formatter(formatter)\n    fig.autofmt_xdate()\n    plt.draw()\n    assert '2021' in ax.get_xaxis().get_label().get_text()\n\ndef test_concise_date_formatter_no_year(date_range):\n    initial = datetime(2022, 1, 1, 0, 0, 0)\n    time_array = [initial + timedelta(days=x) for x in range(1, 30)]\n    fig, ax = plt.subplots()\n    ax.plot(time_array, [-x**2/20000 for x in range(1, 30)])\n    locator = mdates.AutoDateLocator()\n    formatter = mdates.ConciseDateFormatter(locator)\n    ax.grid(True)\n    ax.set_ylabel(\"Temperature ($\\degree$C)\")\n    ax.xaxis.set_major_locator(locator)\n    ax.xaxis.set_major_formatter(formatter)\n    fig.autofmt_xdate()\n    plt.draw()\n    assert '2022' in ax.get_xaxis().get_label().get_text()\n\ndef test_concise_date_formatter_edge_case():\n    initial = datetime(2021, 12, 31, 0, 0, 0)\n    time_array = [initial + timedelta(days=x) for x in range(1, 2)]\n    fig, ax = plt.subplots()\n    ax.plot(time_array, [-x**2/20000 for x in range(1, 2)])\n    locator = mdates.AutoDateLocator()\n    formatter = mdates.ConciseDateFormatter(locator)\n    ax.grid(True)\n    ax.set_ylabel(\"Temperature ($\\degree$C)\")\n    ax.xaxis.set_major_locator(locator)\n    ax.xaxis.set_major_formatter(formatter)\n    fig.autofmt_xdate()\n    plt.draw()\n    assert '2022' in ax.get_xaxis().get_label().get_text()\n</patched>\n```",
  "patch": "--- a/tests/test_dates.py\n+++ b/tests/test_dates.py\n-# Empty if creating new file\n+import pytest\n+import matplotlib.pyplot as plt\n+import matplotlib.dates as mdates\n+from datetime import datetime, timedelta\n+\n+@pytest.fixture\n+def date_range():\n+    initial = datetime(2021, 2, 14, 0, 0, 0)\n+    time_array = [initial + timedelta(days=x) for x in range(1, 200)]\n+    return time_array\n+\n+def test_concise_date_formatter(date_range):\n+    fig, ax = plt.subplots()\n+    ax.plot(date_range, [-x**2/20000 for x in range(1, 200)])\n+    locator = mdates.AutoDateLocator()\n+    formatter = mdates.ConciseDateFormatter(locator)\n+    ax.grid(True)\n+    ax.set_ylabel(\"Temperature ($\\degree$C)\")\n+    ax.xaxis.set_major_locator(locator)\n+    ax.xaxis.set_major_formatter(formatter)\n+    fig.autofmt_xdate()\n+    plt.draw()\n+    assert '2021' in ax.get_xaxis().get_label().get_text()\n+\n+def test_concise_date_formatter_no_year(date_range):\n+    initial = datetime(2022, 1, 1, 0, 0, 0)\n+    time_array = [initial + timedelta(days=x) for x in range(1, 30)]\n+    fig, ax = plt.subplots()\n+    ax.plot(time_array, [-x**2/20000 for x in range(1, 30)])\n+    locator = mdates.AutoDateLocator()\n+    formatter = mdates.ConciseDateFormatter(locator)\n+    ax.grid(True)\n+    ax.set_ylabel(\"Temperature ($\\degree$C)\")\n+    ax.xaxis.set_major_locator(locator)\n+    ax.xaxis.set_major_formatter(formatter)\n+    fig.autofmt_xdate()\n+    plt.draw()\n+    assert '2022' in ax.get_xaxis().get_label().get_text()\n+\n+def test_concise_date_formatter_edge_case():\n+    initial = datetime(2021, 12, 31, 0, 0, 0)\n+    time_array = [initial + timedelta(days=x) for x in range(1, 2)]\n+    fig, ax = plt.subplots()\n+    ax.plot(time_array, [-x**2/20000 for x in range(1, 2)])\n+    locator = mdates.AutoDateLocator()\n+    formatter = mdates.ConciseDateFormatter(locator)\n+    ax.grid(True)\n+    ax.set_ylabel(\"Temperature ($\\degree$C)\")\n+    ax.xaxis.set_major_locator(locator)\n+    ax.xaxis.set_major_formatter(formatter)\n+    fig.autofmt_xdate()\n+    plt.draw()\n+    assert '2022' in ax.get_xaxis().get_label().get_text()\n"
}