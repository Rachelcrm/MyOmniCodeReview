{
  "instance_id": "django__django-13410",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "```\n<file>tests/test_locks.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nimport fcntl\nfrom django.core.files.locks import lock, unlock\nfrom tempfile import TemporaryFile\n\ndef test_lock_unlock():\n f = TemporaryFile()\n assert lock(f, fcntl.LOCK_EX) is True\n assert unlock(f) is True\n\ndef test_lock_failure():\n f = TemporaryFile()\n fcntl.flock(f.fileno(), fcntl.LOCK_EX)\n assert lock(f, fcntl.LOCK_EX) is False\n unlock(f)\n assert lock(f, fcntl.LOCK_EX) is True\n\ndef test_unlock_failure():\n f = TemporaryFile()\n assert unlock(f) is False\n lock(f, fcntl.LOCK_EX)\n assert unlock(f) is True\n\ndef test_non_blocking_lock():\n f = TemporaryFile()\n assert lock(f, fcntl.LOCK_EX | fcntl.LOCK_NB) is True\n assert lock(f, fcntl.LOCK_EX | fcntl.LOCK_NB) is False\n unlock(f)\n assert lock(f, fcntl.LOCK_EX | fcntl.LOCK_NB) is True\n</patched>\n```",
  "patch": "--- a/tests/test_locks.py\n+++ b/tests/test_locks.py\n-# Empty if creating new file\n+import pytest\n+import fcntl\n+from django.core.files.locks import lock, unlock\n+from tempfile import TemporaryFile\n+\n+def test_lock_unlock():\n+ f = TemporaryFile()\n+ assert lock(f, fcntl.LOCK_EX) is True\n+ assert unlock(f) is True\n+\n+def test_lock_failure():\n+ f = TemporaryFile()\n+ fcntl.flock(f.fileno(), fcntl.LOCK_EX)\n+ assert lock(f, fcntl.LOCK_EX) is False\n+ unlock(f)\n+ assert lock(f, fcntl.LOCK_EX) is True\n+\n+def test_unlock_failure():\n+ f = TemporaryFile()\n+ assert unlock(f) is False\n+ lock(f, fcntl.LOCK_EX)\n+ assert unlock(f) is True\n+\n+def test_non_blocking_lock():\n+ f = TemporaryFile()\n+ assert lock(f, fcntl.LOCK_EX | fcntl.LOCK_NB) is True\n+ assert lock(f, fcntl.LOCK_EX | fcntl.LOCK_NB) is False\n+ unlock(f)\n+ assert lock(f, fcntl.LOCK_EX | fcntl.LOCK_NB) is True\n"
}