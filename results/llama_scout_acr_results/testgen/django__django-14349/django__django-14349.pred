{
  "instance_id": "django__django-14349",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/validators/tests.py</file>\n<original>\n# Original code here\n</original>\n<patched>\nimport pytest\nfrom django.core.validators import URLValidator\nfrom django.core.exceptions import ValidationError\n\ndef test_url_validator_forbidden_characters():\n    validator = URLValidator()\n    # Test with URL containing LF\n    with pytest.raises(ValidationError):\n        validator('http://www.djangoproject.com/\\n')\n    # Test with URL containing CR\n    with pytest.raises(ValidationError):\n        validator('http://www.djangoproject.com/\\r')\n    # Test with URL containing tab\n    with pytest.raises(ValidationError):\n        validator('http://www.djangoproject.com/\\t')\n\ndef test_url_validator_valid_urls():\n    validator = URLValidator()\n    # Test with valid HTTP URL\n    validator('http://www.djangoproject.com')\n    # Test with valid HTTPS URL\n    validator('https://www.djangoproject.com')\n    # Test with valid FTP URL\n    validator('ftp://www.djangoproject.com')\n\ndef test_url_validator_invalid_urls():\n    validator = URLValidator()\n    # Test with invalid URL (missing scheme)\n    with pytest.raises(ValidationError):\n        validator('www.djangoproject.com')\n    # Test with invalid URL (invalid scheme)\n    with pytest.raises(ValidationError):\n        validator('invalid://www.djangoproject.com')\n\n</patched>\n```",
  "patch": "--- a/tests/validators/tests.py\n+++ b/tests/validators/tests.py\n-# Original code here\n+import pytest\n+from django.core.validators import URLValidator\n+from django.core.exceptions import ValidationError\n+\n+def test_url_validator_forbidden_characters():\n+    validator = URLValidator()\n+    # Test with URL containing LF\n+    with pytest.raises(ValidationError):\n+        validator('http://www.djangoproject.com/\\n')\n+    # Test with URL containing CR\n+    with pytest.raises(ValidationError):\n+        validator('http://www.djangoproject.com/\\r')\n+    # Test with URL containing tab\n+    with pytest.raises(ValidationError):\n+        validator('http://www.djangoproject.com/\\t')\n+\n+def test_url_validator_valid_urls():\n+    validator = URLValidator()\n+    # Test with valid HTTP URL\n+    validator('http://www.djangoproject.com')\n+    # Test with valid HTTPS URL\n+    validator('https://www.djangoproject.com')\n+    # Test with valid FTP URL\n+    validator('ftp://www.djangoproject.com')\n+\n+def test_url_validator_invalid_urls():\n+    validator = URLValidator()\n+    # Test with invalid URL (missing scheme)\n+    with pytest.raises(ValidationError):\n+        validator('www.djangoproject.com')\n+    # Test with invalid URL (invalid scheme)\n+    with pytest.raises(ValidationError):\n+        validator('invalid://www.djangoproject.com')\n"
}