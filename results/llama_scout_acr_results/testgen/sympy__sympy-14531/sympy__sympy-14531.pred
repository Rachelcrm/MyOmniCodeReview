{
  "instance_id": "sympy__sympy-14531",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_printing.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom sympy import symbols, Eq, Limit, S\n\ndef test_strprinter_sympy_integers():\n    x = symbols('x')\n    assert sstr(x + S(1)/2, sympy_integers=True) == 'x + S(1)/2'\n    assert sstr(Eq(x, S(1)/2), sympy_integers=True) == 'Eq(x, S(1)/2)'\n    assert sstr(Limit(x, x, S(1)/2), sympy_integers=True) == 'Limit(x, x, S(1)/2)'\n\ndef test_strprinter_sympy_integers_false():\n    x = symbols('x')\n    assert sstr(x + S(1)/2, sympy_integers=False) == 'x + 1/2'\n    assert sstr(Eq(x, S(1)/2), sympy_integers=False) == 'Eq(x, 1/2)'\n    assert sstr(Limit(x, x, S(1)/2), sympy_integers=False) == 'Limit(x, x, 1/2)'\n</patched>\n</file>\n\n<file>tests/test_python.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom sympy import symbols, Eq, Limit, S\n\ndef test_python_sympy_integers():\n    x = symbols('x')\n    assert python(Eq(x, S(1)/2), sympy_integers=True) != 'e = Eq(x, 1/2)'\n    assert python(Limit(x, x, S(1)/2), sympy_integers=True) != 'e = Limit(x, x, 1/2)'\n</patched>\n</file>",
  "patch": "--- a/tests/test_printing.py\n+++ b/tests/test_printing.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from sympy import symbols, Eq, Limit, S\n+\n+def test_strprinter_sympy_integers():\n+    x = symbols('x')\n+    assert sstr(x + S(1)/2, sympy_integers=True) == 'x + S(1)/2'\n+    assert sstr(Eq(x, S(1)/2), sympy_integers=True) == 'Eq(x, S(1)/2)'\n+    assert sstr(Limit(x, x, S(1)/2), sympy_integers=True) == 'Limit(x, x, S(1)/2)'\n+\n+def test_strprinter_sympy_integers_false():\n+    x = symbols('x')\n+    assert sstr(x + S(1)/2, sympy_integers=False) == 'x + 1/2'\n+    assert sstr(Eq(x, S(1)/2), sympy_integers=False) == 'Eq(x, 1/2)'\n+    assert sstr(Limit(x, x, S(1)/2), sympy_integers=False) == 'Limit(x, x, 1/2)'\n\n--- a/tests/test_python.py\n+++ b/tests/test_python.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from sympy import symbols, Eq, Limit, S\n+\n+def test_python_sympy_integers():\n+    x = symbols('x')\n+    assert python(Eq(x, S(1)/2), sympy_integers=True) != 'e = Eq(x, 1/2)'\n+    assert python(Limit(x, x, S(1)/2), sympy_integers=True) != 'e = Limit(x, x, 1/2)'\n"
}