{
  "instance_id": "django__django-14792",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_database_functions.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom django.db.models.functions import Trunc, Extract\nfrom django.db.models import DateTimeField, Model\nfrom django.db import connections\n\n@pytest.mark.test_utils\nclass TestDatabaseFunctions:\n    def test_trunc_time_zone(self):\n        # Test that Trunc handles time zones correctly\n        class Event(Model):\n            start_at = DateTimeField()\n\n        event = Event.objects.create(start_at='2022-01-01 12:00:00+10:00')\n\n        trunc_result = Trunc('day', 'start_at', tzinfo='Etc/GMT-10').resolve_expression(query=Event.objects.query)\n\n        assert trunc_result == \"DATE_TRUNC('day', \\\"start_at\\\" AT TIME ZONE 'Etc/GMT-10')\"\n\n    def test_extract_time_zone(self):\n        # Test that Extract handles time zones correctly\n        class Event(Model):\n            start_at = DateTimeField()\n\n        event = Event.objects.create(start_at='2022-01-01 12:00:00+10:00')\n\n        extract_result = Extract('day', 'start_at', tzinfo='Etc/GMT-10').resolve_expression(query=Event.objects.query)\n\n        assert extract_result == \"EXTRACT('day' FROM \\\"start_at\\\" AT TIME ZONE 'Etc/GMT-10')\"\n</patched>\n```",
  "patch": "--- a/tests/test_database_functions.py\n+++ b/tests/test_database_functions.py\n-# Empty if creating new file\n+import pytest\n+from django.db.models.functions import Trunc, Extract\n+from django.db.models import DateTimeField, Model\n+from django.db import connections\n+\n+@pytest.mark.test_utils\n+class TestDatabaseFunctions:\n+    def test_trunc_time_zone(self):\n+        # Test that Trunc handles time zones correctly\n+        class Event(Model):\n+            start_at = DateTimeField()\n+\n+        event = Event.objects.create(start_at='2022-01-01 12:00:00+10:00')\n+\n+        trunc_result = Trunc('day', 'start_at', tzinfo='Etc/GMT-10').resolve_expression(query=Event.objects.query)\n+\n+        assert trunc_result == \"DATE_TRUNC('day', \\\"start_at\\\" AT TIME ZONE 'Etc/GMT-10')\"\n+\n+    def test_extract_time_zone(self):\n+        # Test that Extract handles time zones correctly\n+        class Event(Model):\n+            start_at = DateTimeField()\n+\n+        event = Event.objects.create(start_at='2022-01-01 12:00:00+10:00')\n+\n+        extract_result = Extract('day', 'start_at', tzinfo='Etc/GMT-10').resolve_expression(query=Event.objects.query)\n+\n+        assert extract_result == \"EXTRACT('day' FROM \\\"start_at\\\" AT TIME ZONE 'Etc/GMT-10')\"\n"
}