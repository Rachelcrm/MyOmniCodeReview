{
  "instance_id": "matplotlib__matplotlib-24870",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "```\n<file>tests/test_contour.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef test_contour_boolean_array():\n    \"\"\"Test contour with boolean array.\"\"\"\n    boolean_array = np.array([[True, False], [False, True]])\n    contours = plt.contour(boolean_array)\n    assert np.all(contours.levels == [0.5])\n\ndef test_contourf_boolean_array():\n    \"\"\"Test contourf with boolean array.\"\"\"\n    boolean_array = np.array([[True, False], [False, True]])\n    contours = plt.contourf(boolean_array)\n    assert np.all(contours.levels == [0.5])\n\ndef test_tricontour_boolean_array():\n    \"\"\"Test tricontour with boolean array.\"\"\"\n    # Create a simple triangulation\n    triangulation = plt.triangulation(np.array([0, 0, 1]), np.array([0, 1, 0]), np.array([[0, 1, 1], [0, 0, 1]]))\n    boolean_array = np.array([True, False, True])\n    contours = plt.tricontour(triangulation, boolean_array)\n    assert np.all(contours.levels == [0.5])\n\ndef test_tricontourf_boolean_array():\n    \"\"\"Test tricontourf with boolean array.\"\"\"\n    # Create a simple triangulation\n    triangulation = plt.triangulation(np.array([0, 0, 1]), np.array([0, 1, 0]), np.array([[0, 1, 1], [0, 0, 1]]))\n    boolean_array = np.array([True, False, True])\n    contours = plt.tricontourf(triangulation, boolean_array)\n    assert np.all(contours.levels == [0.5])\n\ndef test_contour_levels_not_specified():\n    \"\"\"Test contour with boolean array and levels not specified.\"\"\"\n    boolean_array = np.array([[True, False], [False, True]])\n    contours = plt.contour(boolean_array)\n    assert np.all(contours.levels == [0.5])\n\ndef test_contour_levels_specified():\n    \"\"\"Test contour with boolean array and levels specified.\"\"\"\n    boolean_array = np.array([[True, False], [False, True]])\n    contours = plt.contour(boolean_array, levels=[0.2, 0.8])\n    assert np.all(contours.levels == [0.2, 0.8])\n\ndef test_contour_non_boolean_array():\n    \"\"\"Test contour with non-boolean array.\"\"\"\n    non_boolean_array = np.array([[0.1, 0.9], [0.9, 0.1]])\n    contours = plt.contour(non_boolean_array)\n    # The default levels for non-boolean arrays are [0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05]\n    assert len(contours.levels) == 8\n\n</patched>\n```",
  "patch": "--- a/tests/test_contour.py\n+++ b/tests/test_contour.py\n-# Original code here (if modifying existing file)\n+import pytest\n+import numpy as np\n+import matplotlib.pyplot as plt\n+\n+def test_contour_boolean_array():\n+    \"\"\"Test contour with boolean array.\"\"\"\n+    boolean_array = np.array([[True, False], [False, True]])\n+    contours = plt.contour(boolean_array)\n+    assert np.all(contours.levels == [0.5])\n+\n+def test_contourf_boolean_array():\n+    \"\"\"Test contourf with boolean array.\"\"\"\n+    boolean_array = np.array([[True, False], [False, True]])\n+    contours = plt.contourf(boolean_array)\n+    assert np.all(contours.levels == [0.5])\n+\n+def test_tricontour_boolean_array():\n+    \"\"\"Test tricontour with boolean array.\"\"\"\n+    # Create a simple triangulation\n+    triangulation = plt.triangulation(np.array([0, 0, 1]), np.array([0, 1, 0]), np.array([[0, 1, 1], [0, 0, 1]]))\n+    boolean_array = np.array([True, False, True])\n+    contours = plt.tricontour(triangulation, boolean_array)\n+    assert np.all(contours.levels == [0.5])\n+\n+def test_tricontourf_boolean_array():\n+    \"\"\"Test tricontourf with boolean array.\"\"\"\n+    # Create a simple triangulation\n+    triangulation = plt.triangulation(np.array([0, 0, 1]), np.array([0, 1, 0]), np.array([[0, 1, 1], [0, 0, 1]]))\n+    boolean_array = np.array([True, False, True])\n+    contours = plt.tricontourf(triangulation, boolean_array)\n+    assert np.all(contours.levels == [0.5])\n+\n+def test_contour_levels_not_specified():\n+    \"\"\"Test contour with boolean array and levels not specified.\"\"\"\n+    boolean_array = np.array([[True, False], [False, True]])\n+    contours = plt.contour(boolean_array)\n+    assert np.all(contours.levels == [0.5])\n+\n+def test_contour_levels_specified():\n+    \"\"\"Test contour with boolean array and levels specified.\"\"\"\n+    boolean_array = np.array([[True, False], [False, True]])\n+    contours = plt.contour(boolean_array, levels=[0.2, 0.8])\n+    assert np.all(contours.levels == [0.2, 0.8])\n+\n+def test_contour_non_boolean_array():\n+    \"\"\"Test contour with non-boolean array.\"\"\"\n+    non_boolean_array = np.array([[0.1, 0.9], [0.9, 0.1]])\n+    contours = plt.contour(non_boolean_array)\n+    # The default levels for non-boolean arrays are [0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05]\n+    assert len(contours.levels) == 8\n"
}