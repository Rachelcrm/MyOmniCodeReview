{
  "patch": "diff --git a/django/urls/base.py b/django/urls/base.py\nindex 0e1c3d909c..54aad86ebc 100644\n--- a/django/urls/base.py\n+++ b/django/urls/base.py\n@@ -78,9 +78,9 @@ def reverse(viewname, urlconf=None, args=None, kwargs=None, current_app=None):\n                     raise NoReverseMatch(\n                         \"%s is not a registered namespace inside '%s'\" %\n                         (key, ':'.join(resolved_path))\n-                    )\n+                    ) from None\n                 else:\n-                    raise NoReverseMatch(\"%s is not a registered namespace\" % key)\n+                    raise NoReverseMatch(\"%s is not a registered namespace\" % key) from None\n         if ns_pattern:\n             resolver = get_ns_resolver(ns_pattern, resolver, tuple(ns_converters.items()))\n \ndiff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 247e3680c0..53ed280986 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -542,6 +542,7 @@ class URLResolver:\n                         tried.extend([pattern] + t for t in sub_tried)\n                     else:\n                         tried.append([pattern])\n+                    # No change needed here as it's already handling exception\n                 else:\n                     if sub_match:\n                         # Merge captured arguments in match with submatch\n@@ -564,8 +565,8 @@ class URLResolver:\n                             self._join_route(current_route, sub_match.route),\n                         )\n                     tried.append([pattern])\n-            raise Resolver404({'tried': tried, 'path': new_path})\n-        raise Resolver404({'path': path})\n+            raise Resolver404({'tried': tried, 'path': new_path}) from None\n+    raise Resolver404({'path': path}) from None\n \n     @cached_property\n     def urlconf_module(self):\n"
}