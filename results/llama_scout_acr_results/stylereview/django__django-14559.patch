{
  "patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 387deca527..56159c8f72 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -205,7 +205,7 @@ class QuerySet:\n             self._iterable_class = ValuesIterable\n         self._query = value\n \n-    def as_manager(cls):\n+    def as_manager(cls) -> 'Manager':\n         # Address the circular dependency between `Queryset` and `Manager`.\n         from django.db.models.manager import Manager\n         manager = Manager.from_queryset(cls)()\n@@ -317,7 +317,7 @@ class QuerySet:\n         qs._fetch_all()\n         return qs._result_cache[0]\n \n-    def __class_getitem__(cls, *args, **kwargs):\n+    def __class_getitem__(cls, *args: object, **kwargs: object) -> 'QuerySet':\n         return cls\n \n     def __and__(self, other):\n@@ -621,7 +621,7 @@ class QuerySet:\n         defaults = defaults or {}\n         params = {k: v for k, v in kwargs.items() if LOOKUP_SEP not in k}\n         params.update(defaults)\n-        property_names = self.model._meta._property_names\n+        property_names = self.model._meta.properties\n         invalid_params = []\n         for param in params:\n             try:\n"
}