{
  "patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex d17232e4ec..3b8600dd9f 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -1,4 +1,5 @@\n from django.db import models\n+from abc import ABCMeta, abstractmethod\n from django.db.migrations.operations.base import Operation\n from django.db.migrations.state import ModelState\n from django.db.migrations.utils import field_references, resolve_relation\n@@ -18,10 +19,22 @@ def _check_for_duplicates(arg_name, objs):\n         used_vals.add(val)\n \n \n-class ModelOperation(Operation):\n+class ModelOperation(Operation, metaclass=ABCMeta):\n     def __init__(self, name):\n         self.name = name\n \n+    @abstractmethod\n+    def state_forwards(self, app_label, state):\n+        pass\n+\n+    @abstractmethod\n+    def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        pass\n+\n+    @abstractmethod\n+    def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        pass\n+\n     @cached_property\n     def name_lower(self):\n         return self.name.lower()\n@@ -350,11 +363,11 @@ class RenameModel(ModelOperation):\n         super().__init__(old_name)\n \n     @cached_property\n-    def old_name_lower(self):\n+    def old_name_lower_cached(self):\n         return self.old_name.lower()\n \n     @cached_property\n-    def new_name_lower(self):\n+    def new_name_lower_cached(self):\n         return self.new_name.lower()\n \n     def deconstruct(self):\n@@ -454,7 +467,7 @@ class RenameModel(ModelOperation):\n     def reduce(self, operation, app_label):\n         if (\n             isinstance(operation, RenameModel)\n-            and self.new_name_lower == operation.old_name_lower\n+            and self.new_name_lower_cached == operation.old_name_lower_cached\n         ):\n             return [\n                 RenameModel(\n@@ -464,7 +477,7 @@ class RenameModel(ModelOperation):\n             ]\n         # Skip `ModelOperation.reduce` as we want to run `references_model`\n         # against self.new_name.\n-        return super(ModelOperation, self).reduce(\n+        return super().reduce(\n             operation, app_label\n         ) or not operation.references_model(self.new_name, app_label)\n \n"
}