{
  "patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex 6fe220bea7..778c489ddb 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -109,7 +109,7 @@ class Media:\n     def __getitem__(self, name):\n         \"\"\"Return a Media object that only contains media of the given type.\"\"\"\n         if name in MEDIA_TYPES:\n-            return Media(**{str(name): getattr(self, '_' + name)})\n+            return Media({str(name): getattr(self, '_' + name)})\n         raise KeyError('Unknown media type \"%s\"' % name)\n \n     @staticmethod\n@@ -224,6 +224,10 @@ class Widget(metaclass=MediaDefiningClass):\n             return formats.localize_input(value)\n         return str(value)\n \n+    def __init__(self, attrs=None):\n+        self.attrs = {} if attrs is None else attrs.copy()\n+        self.template_name = 'django/forms/widgets/widget.html'\n+        \n     def get_context(self, name, value, attrs):\n         context = {}\n         context['widget'] = {\n@@ -232,7 +236,7 @@ class Widget(metaclass=MediaDefiningClass):\n             'required': self.is_required,\n             'value': self.format_value(value),\n             'attrs': self.build_attrs(self.attrs, attrs),\n-            'template_name': self.template_name,\n+            'template_name': getattr(self, 'template_name', 'django/forms/widgets/widget.html'),\n         }\n         return context\n \n@@ -476,9 +480,9 @@ class DateTimeBaseInput(TextInput):\n     format_key = ''\n     supports_microseconds = False\n \n-    def __init__(self, attrs=None, format=None):\n+    def __init__(self, attrs=None, date_format=None):\n         super().__init__(attrs)\n-        self.format = format or None\n+        self.format = date_format\n \n     def format_value(self, value):\n         return formats.localize_input(value, self.format or formats.get_format(self.format_key)[0])\n@@ -938,6 +942,7 @@ class SelectDateWidget(Widget):\n     date_re = _lazy_re_compile(r'(\\d{4}|0)-(\\d\\d?)-(\\d\\d?)$')\n \n     def __init__(self, attrs=None, years=None, months=None, empty_label=None):\n+        super().__init__(attrs)\n         self.attrs = attrs or {}\n \n         # Optional list or tuple of years to use in the \"year\" select box.\n"
}