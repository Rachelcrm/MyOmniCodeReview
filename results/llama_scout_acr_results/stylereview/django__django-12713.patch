{
  "patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 69a5fbf389..5dd16ebec2 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -119,13 +119,14 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n     def check(self, **kwargs):\n         return self.checks_class().check(self, **kwargs)\n \n-    def __init__(self):\n+    def __init__(self, admin_site):\n         # Merge FORMFIELD_FOR_DBFIELD_DEFAULTS with the formfield_overrides\n         # rather than simply overwriting.\n         overrides = copy.deepcopy(FORMFIELD_FOR_DBFIELD_DEFAULTS)\n         for k, v in self.formfield_overrides.items():\n             overrides.setdefault(k, {}).update(v)\n         self.formfield_overrides = overrides\n+        self.admin_site = admin_site\n \n     def formfield_for_dbfield(self, db_field, request, **kwargs):\n         \"\"\"\n@@ -284,14 +285,14 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n         if obj is None or not self.view_on_site:\n             return None\n \n-        if callable(self.view_on_site):\n-            return self.view_on_site(obj)\n-        elif self.view_on_site and hasattr(obj, 'get_absolute_url'):\n+        if isinstance(self.view_on_site, bool) and hasattr(obj, 'get_absolute_url'):\n             # use the ContentType lookup if view_on_site is True\n             return reverse('admin:view_on_site', kwargs={\n                 'content_type_id': get_content_type_for_model(obj).pk,\n                 'object_id': obj.pk\n             })\n+        elif callable(self.view_on_site):\n+            return self.view_on_site(obj)\n \n     def get_empty_value_display(self):\n         \"\"\"\n"
}