{
  "patch": "diff --git a/sphinx/application.py b/sphinx/application.py\nindex 385b74d8a..c5ba3f8e3 100644\n--- a/sphinx/application.py\n+++ b/sphinx/application.py\n@@ -46,7 +46,7 @@ from sphinx.util import docutils\n from sphinx.util import logging\n from sphinx.util import progress_message\n from sphinx.util.build_phase import BuildPhase\n-from sphinx.util.console import bold  # type: ignore\n+# No import statement needed for bold\n from sphinx.util.i18n import CatalogRepository\n from sphinx.util.logging import prefixed_warnings\n from sphinx.util.osutil import abspath, ensuredir, relpath\n@@ -733,8 +733,10 @@ class Sphinx:\n \n     def add_object_type(self, directivename: str, rolename: str, indextemplate: str = '',\n                         parse_node: Callable = None, ref_nodeclass: \"Type[TextElement]\" = None,\n-                        objname: str = '', doc_field_types: List = [], override: bool = False\n+                        objname: str = '', doc_field_types: List = None, override: bool = False\n                         ) -> None:\n+        if doc_field_types is None:\n+            doc_field_types = []\n         \"\"\"Register a new object type.\n \n         This method is a very convenient way to add a new :term:`object` type\ndiff --git a/sphinx/locale/__init__.py b/sphinx/locale/__init__.py\nindex 385ca3566..cd078dc08 100644\n--- a/sphinx/locale/__init__.py\n+++ b/sphinx/locale/__init__.py\n@@ -39,6 +39,7 @@ class _TranslationProxy(UserString):\n         return (self._func,) + self._args  # type: ignore\n \n     def __init__(self, func: Callable, *args: str) -> None:\n+        super().__init__()\n         self._func = func\n         self._args = args\n \n"
}