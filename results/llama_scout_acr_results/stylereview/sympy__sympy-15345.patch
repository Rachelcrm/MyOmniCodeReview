{
  "patch": "diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py\nindex ea7e3a2d94..4049b342c5 100644\n--- a/sympy/printing/mathematica.py\n+++ b/sympy/printing/mathematica.py\n@@ -53,8 +53,28 @@ class MCodePrinter(CodePrinter):\n     _number_symbols = set()\n     _not_supported = set()\n \n-    def __init__(self, settings={}):\n+    def _declare_number_const(self, name, value):\n+        return f\"{name} = {value}\"\n+\n+    def _format_code(self, lines):\n+        return \"\\n\".join(lines)\n+\n+    def _get_comment(self, text):\n+        return f\"(* {text} *)\"\n+\n+    def _get_loop_opening_ending(self, init, condition, increment, body):\n+        return f\"Do[{{\\n{body}\\n}}, {{{init}; {condition}; {increment}}}]\"\n+\n+    def _get_statement(self, expr):\n+        return expr\n+\n+    def _rate_index_position(rat):\n+        return 1\n+\n+    def __init__(self, settings=None):\n         \"\"\"Register function mappings supplied by user\"\"\"\n+        if settings is None:\n+            settings = {}\n         CodePrinter.__init__(self, settings)\n         self.known_functions = dict(known_functions)\n         userfuncs = settings.get('user_functions', {})\n@@ -65,10 +85,10 @@ def __init__(self, settings={}):\n \n     doprint = StrPrinter.doprint\n \n-    def _print_Pow(self, expr):\n+    def _print_Pow(self, expr, *args):\n         PREC = precedence(expr)\n         return '%s^%s' % (self.parenthesize(expr.base, PREC),\n-                          self.parenthesize(expr.exp, PREC))\n+                           self.parenthesize(expr.exp, PREC))\n \n     def _print_Mul(self, expr):\n         PREC = precedence(expr)\n"
}