{
  "patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7effb202e3..2202f765ed 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -288,9 +288,7 @@ class BaseModelForm(BaseForm):\n                  initial=None, error_class=ErrorList, label_suffix=None,\n                  empty_permitted=False, instance=None, use_required_attribute=None,\n                  renderer=None):\n-        opts = self._meta\n-        if opts.model is None:\n-            raise ValueError('ModelForm has no model class specified.')\n+        self._meta = type(self).Meta\n         if instance is None:\n             # if we didn't get an instance, instantiate a new one\n             self.instance = opts.model()\n@@ -298,6 +296,7 @@ class BaseModelForm(BaseForm):\n         else:\n             self.instance = instance\n             object_data = model_to_dict(instance, opts.fields, opts.exclude)\n+        opts = self.instance._meta\n         # if initial was provided, it should override the values from instance\n         if initial is not None:\n             object_data.update(initial)\n@@ -434,7 +433,8 @@ class BaseModelForm(BaseForm):\n         cleaned_data = self.cleaned_data\n         exclude = self._meta.exclude\n         fields = self._meta.fields\n-        opts = self.instance._meta\n+        instance = self.instance\n+        opts = instance._meta\n         # Note that for historical reasons we want to include also\n         # private_fields here. (GenericRelation was previously a fake\n         # m2m field).\n@@ -446,7 +446,7 @@ class BaseModelForm(BaseForm):\n             if exclude and f.name in exclude:\n                 continue\n             if f.name in cleaned_data:\n-                f.save_form_data(self.instance, cleaned_data[f.name])\n+                f.save_form_data(instance, cleaned_data[f.name])\n \n     def save(self, commit=True):\n         \"\"\"\n"
}