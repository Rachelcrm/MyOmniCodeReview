{
  "patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex a3f0310735..a933920912 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -150,18 +150,18 @@ def _expand_fold_binary_op(self, op, args):\n                 self._print(args[-1]),\n             )\n \n-    def _expand_reduce_binary_op(self, op, args):\n+    def _expand_reduce_binary_op(self, op, *args):\n         \"\"\"\n-        This method expands a reductin on binary operations.\n-\n+        This method expands a reduction on binary operations.\n+        \n         Notice: this is NOT the same as ``functools.reduce``.\n-\n+        \n         For example, the expression\n-\n+        \n         `A + B + C + D`\n-\n+        \n         is reduced into:\n-\n+        \n         `(A + B) + (C + D)`\n         \"\"\"\n         if len(args) == 1:\n@@ -171,8 +171,8 @@ def _expand_reduce_binary_op(self, op, args):\n             Nhalf = N // 2\n             return \"%s(%s, %s)\" % (\n                 self._module_format(op),\n-                self._expand_reduce_binary_op(args[:Nhalf]),\n-                self._expand_reduce_binary_op(args[Nhalf:]),\n+                self._expand_reduce_binary_op(*args[:Nhalf]),\n+                self._expand_reduce_binary_op(*args[Nhalf:]),\n             )\n \n     def _get_einsum_string(self, subranks, contraction_indices):\n"
}