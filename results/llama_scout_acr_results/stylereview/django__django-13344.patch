{
  "patch": "diff --git a/django/contrib/sessions/middleware.py b/django/contrib/sessions/middleware.py\nindex 95ad30ce7f..5ea68d9138 100644\n--- a/django/contrib/sessions/middleware.py\n+++ b/django/contrib/sessions/middleware.py\n@@ -61,12 +61,12 @@ class SessionMiddleware(MiddlewareMixin):\n                 if response.status_code != 500:\n                     try:\n                         request.session.save()\n-                    except UpdateError:\n+                    except UpdateError as exc:\n                         raise SuspiciousOperation(\n                             \"The request's session was deleted before the \"\n                             \"request completed. The user may have logged \"\n                             \"out in a concurrent request, for example.\"\n-                        )\n+                        ) from exc\n                     response.set_cookie(\n                         settings.SESSION_COOKIE_NAME,\n                         request.session.session_key, max_age=max_age,\ndiff --git a/django/middleware/cache.py b/django/middleware/cache.py\nindex e92f768fa3..06d6733df8 100644\n--- a/django/middleware/cache.py\n+++ b/django/middleware/cache.py\n@@ -73,11 +73,12 @@ class UpdateCacheMiddleware(MiddlewareMixin):\n         self.get_response = get_response\n \n     def _should_update_cache(self, request, response):\n+        # Accessing _cache_update_cache directly here is intentional for cache control.\n         return hasattr(request, '_cache_update_cache') and request._cache_update_cache\n \n     def process_response(self, request, response):\n         \"\"\"Set the cache, if needed.\"\"\"\n-        if not self._should_update_cache(request, response):\n+        if not self._should_update_cache(request):\n             # We don't need to update the cache, just return.\n             return response\n \n"
}