{
  "patch": "diff --git a/django/db/backends/base/operations.py b/django/db/backends/base/operations.py\nindex 0fcc607bcf..1b95abf98b 100644\n--- a/django/db/backends/base/operations.py\n+++ b/django/db/backends/base/operations.py\n@@ -57,20 +57,19 @@ class BaseDatabaseOperations:\n         self.connection = connection\n         self._cache = None\n \n-    def autoinc_sql(self, table, column):\n+    def autoinc_sql(self):\n         \"\"\"\n         Return any SQL needed to support auto-incrementing primary keys, or\n         None if no SQL is necessary.\n-\n+        \n         This SQL is executed when a table is created.\n         \"\"\"\n         return None\n \n-    def bulk_batch_size(self, fields, objs):\n+    def bulk_batch_size(self, objs):\n         \"\"\"\n-        Return the maximum allowed batch size for the backend. The fields\n-        are the fields going to be inserted in the batch, the objs contains\n-        all the objects to be inserted.\n+        Return the maximum allowed batch size for the backend. \n+        The objs contains all the objects to be inserted.\n         \"\"\"\n         return len(objs)\n \n@@ -84,11 +83,10 @@ class BaseDatabaseOperations:\n         \"\"\"\n         return \"SELECT cache_key FROM %s ORDER BY cache_key LIMIT 1 OFFSET %%s\"\n \n-    def unification_cast_sql(self, output_field):\n+    def unification_cast_sql(self):\n         \"\"\"\n-        Given a field instance, return the SQL that casts the result of a union\n-        to that type. The resulting string should contain a '%s' placeholder\n-        for the expression being cast.\n+        Return the SQL that casts the result of a union to a common type.\n+        The resulting string should contain a '%s' placeholder for the expression being cast.\n         \"\"\"\n         return '%s'\n \n@@ -166,7 +164,7 @@ class BaseDatabaseOperations:\n         \"\"\"\n         return ''\n \n-    def distinct_sql(self, fields, params):\n+    def distinct_sql(self, fields):\n         \"\"\"\n         Return an SQL DISTINCT clause which removes duplicate rows from the\n         result set. If any fields are given, only check the given fields for\n"
}