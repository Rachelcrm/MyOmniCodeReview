{
  "patch": "diff --git a/lib/matplotlib/cbook.py b/lib/matplotlib/cbook.py\nindex c9699b2e21..2d06ec40d9 100644\n--- a/lib/matplotlib/cbook.py\n+++ b/lib/matplotlib/cbook.py\n@@ -275,7 +275,7 @@ class CallbackRegistry:\n     def process(self, s, *args, **kwargs):\n         \"\"\"\n         Process signal *s*.\n-\n+ \n         All of the functions registered to receive callbacks on *s* will be\n         called with ``*args`` and ``**kwargs``.\n         \"\"\"\n@@ -288,7 +288,12 @@ class CallbackRegistry:\n                     func(*args, **kwargs)\n                 # this does not capture KeyboardInterrupt, SystemExit,\n                 # and GeneratorExit\n-                except Exception as exc:\n+                except RuntimeError as exc:\n+                    if self.exception_handler is not None:\n+                        self.exception_handler(exc)\n+                    else:\n+                        raise\n+                except TypeError as exc:\n                     if self.exception_handler is not None:\n                         self.exception_handler(exc)\n                     else:\n@@ -341,8 +346,8 @@ class silent_list(list):\n     the list (if any).\n     \"\"\"\n \n-    def __init__(self, type, seq=None):\n-        self.type = type\n+    def __init__(self, type_name, seq=None):\n+        self.type = type_name\n         if seq is not None:\n             self.extend(seq)\n \n@@ -570,7 +575,8 @@ class Stack:\n     \"\"\"\n \n     def __init__(self, default=None):\n-        self.clear()\n+        self._elements = []\n+        self._pos = -1\n         self._default = default\n \n     def __call__(self):\n@@ -1983,20 +1989,19 @@ def _setattr_cm(obj, **kwargs):\n class _OrderedSet(collections.abc.MutableSet):\n     def __init__(self):\n         self._od = collections.OrderedDict()\n-\n+ \n     def __contains__(self, key):\n         return key in self._od\n-\n+ \n     def __iter__(self):\n         return iter(self._od)\n-\n+ \n     def __len__(self):\n         return len(self._od)\n-\n+ \n     def add(self, key):\n-        self._od.pop(key, None)\n         self._od[key] = None\n-\n+ \n     def discard(self, key):\n         self._od.pop(key, None)\n \n"
}