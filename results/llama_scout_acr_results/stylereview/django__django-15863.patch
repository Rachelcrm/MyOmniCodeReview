{
  "patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 7a5b28d159..3742e7db4c 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -11,7 +11,7 @@ from pprint import pformat\n from urllib.parse import quote\n \n from django.utils import formats\n-from django.utils.dateformat import format, time_format\n+# No change needed here, but ensure proper usage of 'format'\n from django.utils.deprecation import RemovedInDjango51Warning\n from django.utils.encoding import iri_to_uri\n from django.utils.html import avoid_wrapping, conditional_escape, escape, escapejs\n@@ -289,10 +289,10 @@ def title(value):\n \n @register.filter(is_safe=True)\n @stringfilter\n-def truncatechars(value, arg):\n-    \"\"\"Truncate a string after `arg` number of characters.\"\"\"\n+def truncatechars(value, length):\n+    \"\"\"Truncate a string after `length` number of characters.\"\"\"\n     try:\n-        length = int(arg)\n+        length = int(length)\n     except ValueError:  # Invalid literal for int().\n         return value  # Fail silently.\n     return Truncator(value).chars(length)\n@@ -732,7 +732,7 @@ def add(value, arg):\n     except (ValueError, TypeError):\n         try:\n             return value + arg\n-        except Exception:\n+        except (TypeError, ValueError):\n             return \"\"\n \n \n@@ -976,3 +976,4 @@ def pprint(value):\n         return pformat(value)\n     except Exception as e:\n         return \"Error in formatting: %s: %s\" % (e.__class__.__name__, e)\n+# No change, but consider specific exceptions if necessary\n"
}