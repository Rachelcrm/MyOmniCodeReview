{
  "patch": "diff --git a/django/db/backends/base/operations.py b/django/db/backends/base/operations.py\nindex 2e283a3193..8a9d035d33 100644\n--- a/django/db/backends/base/operations.py\n+++ b/django/db/backends/base/operations.py\n@@ -61,9 +61,10 @@ class BaseDatabaseOperations:\n         \"\"\"\n         Return any SQL needed to support auto-incrementing primary keys, or\n         None if no SQL is necessary.\n-\n+        \n         This SQL is executed when a table is created.\n         \"\"\"\n+        # For now, return None. This method should be implemented by subclasses.\n         return None\n \n     def bulk_batch_size(self, fields, objs):\n@@ -72,6 +73,7 @@ class BaseDatabaseOperations:\n         are the fields going to be inserted in the batch, the objs contains\n         all the objects to be inserted.\n         \"\"\"\n+        # For now, return the length of objs. This method should be implemented by subclasses.\n         return len(objs)\n \n     def cache_key_culling_sql(self):\n@@ -90,6 +92,7 @@ class BaseDatabaseOperations:\n         to that type. The resulting string should contain a '%s' placeholder\n         for the expression being cast.\n         \"\"\"\n+        # For now, return '%s'. This method should be implemented by subclasses.\n         return '%s'\n \n     def date_extract_sql(self, lookup_type, field_name):\n"
}