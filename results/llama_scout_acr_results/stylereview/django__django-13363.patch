{
  "patch": "diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py\nindex b6594b043b..db79d3afda 100644\n--- a/django/db/models/functions/datetime.py\n+++ b/django/db/models/functions/datetime.py\n@@ -24,7 +24,7 @@ class TimezoneMixin:\n             if self.tzinfo is None:\n                 tzname = timezone.get_current_timezone_name()\n             else:\n-                tzname = timezone._get_timezone_name(self.tzinfo)\n+                tzname = timezone.get_tzname(self.tzinfo)\n         return tzname\n \n \n@@ -86,19 +86,35 @@ class Extract(TimezoneMixin, Transform):\n \n class ExtractYear(Extract):\n     lookup_name = 'year'\n+    def __rand__(self, other):\n+        return self.bitand(other)\n+    def __ror__(self, other):\n+        return self.bitor(other)\n \n \n class ExtractIsoYear(Extract):\n     \"\"\"Return the ISO-8601 week-numbering year.\"\"\"\n     lookup_name = 'iso_year'\n+    def __rand__(self, other):\n+        return self.bitand(other)\n+    def __ror__(self, other):\n+        return self.bitor(other)\n \n \n class ExtractMonth(Extract):\n     lookup_name = 'month'\n+    def __rand__(self, other):\n+        return self.bitand(other)\n+    def __ror__(self, other):\n+        return self.bitor(other)\n \n \n class ExtractDay(Extract):\n     lookup_name = 'day'\n+    def __rand__(self, other):\n+        return self.bitand(other)\n+    def __ror__(self, other):\n+        return self.bitor(other)\n \n \n class ExtractWeek(Extract):\n@@ -107,6 +123,10 @@ class ExtractWeek(Extract):\n     week.\n     \"\"\"\n     lookup_name = 'week'\n+    def __rand__(self, other):\n+        return self.bitand(other)\n+    def __ror__(self, other):\n+        return self.bitor(other)\n \n \n class ExtractWeekDay(Extract):\n@@ -116,6 +136,10 @@ class ExtractWeekDay(Extract):\n     To replicate this in Python: (mydatetime.isoweekday() % 7) + 1\n     \"\"\"\n     lookup_name = 'week_day'\n+    def __rand__(self, other):\n+        return self.bitand(other)\n+    def __ror__(self, other):\n+        return self.bitor(other)\n \n \n class ExtractIsoWeekDay(Extract):\n"
}