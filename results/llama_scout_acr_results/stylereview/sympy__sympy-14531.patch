{
  "patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex cc1d19fcce..60e202afa4 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -42,7 +42,7 @@ def emptyPrinter(self, expr):\n             if hasattr(expr, \"args\"):\n                 return repr(expr)\n             else:\n-                raise\n+                raise TypeError(f\"cannot determine string representation of {expr}\")\n         else:\n             return str(expr)\n \n@@ -71,6 +71,7 @@ def _print_Add(self, expr, order=None):\n         return sign + ' '.join(l)\n \n     def _print_BooleanTrue(self, expr):\n+        del expr\n         return \"True\"\n \n     def _print_BooleanFalse(self, expr):\n@@ -214,11 +215,11 @@ def _print_LatticeOp(self, expr):\n         return expr.func.__name__ + \"(%s)\" % \", \".join(self._print(arg) for arg in args)\n \n     def _print_Limit(self, expr):\n-        e, z, z0, dir = expr.args\n-        if str(dir) == \"+\":\n+        e, z, z0, direction = expr.args\n+        if str(direction) == \"+\":\n             return \"Limit(%s, %s, %s)\" % (e, z, z0)\n         else:\n-            return \"Limit(%s, %s, %s, dir='%s')\" % (e, z, z0, dir)\n+            return \"Limit(%s, %s, %s, dir='%s')\" % (e, z, z0, direction)\n \n     def _print_list(self, expr):\n         return \"[%s]\" % self.stringify(expr, \", \")\n@@ -384,7 +385,7 @@ def _print_Permutation(self, expr):\n             return 'Permutation(%s)' % use\n \n     def _print_TensorIndex(self, expr):\n-        return expr._print()\n+        return expr.print()\n \n     def _print_TensorHead(self, expr):\n         return expr._print()\n"
}