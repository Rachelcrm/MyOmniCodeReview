{
  "patch": "diff --git a/scrapy/http/headers.py b/scrapy/http/headers.py\nindex 1a2b99b0a..64af291bd 100644\n--- a/scrapy/http/headers.py\n+++ b/scrapy/http/headers.py\n@@ -9,10 +9,16 @@ class Headers(CaselessDict):\n     def __init__(self, seq=None, encoding='utf-8'):\n         self.encoding = encoding\n         super().__init__(seq)\n+        # No change needed here, but ensure CaselessDict handles bytes and str correctly\n \n     def normkey(self, key):\n         \"\"\"Normalize key to bytes\"\"\"\n-        return self._tobytes(key.title())\n+        if isinstance(key, str):\n+            return self._tobytes(key.title())\n+        elif isinstance(key, bytes):\n+            return key.title()  # bytes do not have title() method, but it's casefolded in CaselessDict\n+        else:\n+            raise TypeError(f'Unsupported key type: {type(key)}')\n \n     def normvalue(self, value):\n         \"\"\"Normalize values to bytes\"\"\"\n@@ -32,6 +38,8 @@ class Headers(CaselessDict):\n             return x.encode(self.encoding)\n         elif isinstance(x, int):\n             return str(x).encode(self.encoding)\n+        elif isinstance(x, bool):\n+            return str(x).encode(self.encoding)\n         else:\n             raise TypeError(f'Unsupported value type: {type(x)}')\n \n"
}