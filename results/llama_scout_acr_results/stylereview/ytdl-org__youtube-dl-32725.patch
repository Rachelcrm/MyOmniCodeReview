{
  "patch": "diff --git a/youtube_dl/extractor/common.py b/youtube_dl/extractor/common.py\nindex 0e5dfd8fa..59f96e432 100644\n--- a/youtube_dl/extractor/common.py\n+++ b/youtube_dl/extractor/common.py\n@@ -463,15 +463,12 @@ class InfoExtractor(object):\n         \"\"\"Getter method for _WORKING.\"\"\"\n         return cls._WORKING\n \n-    def initialize(self):\n-        \"\"\"Initializes an instance (authentication, etc).\"\"\"\n+    def _real_initialize(self):\n+        \"\"\"Real initialization process. Redefine in subclasses.\"\"\"\n         self._initialize_geo_bypass({\n             'countries': self._GEO_COUNTRIES,\n             'ip_blocks': self._GEO_IP_BLOCKS,\n         })\n-        if not self._ready:\n-            self._real_initialize()\n-            self._ready = True\n \n     def _initialize_geo_bypass(self, geo_bypass_context):\n         \"\"\"\n@@ -1506,7 +1503,31 @@ class InfoExtractor(object):\n \n         def _formats_key(f):\n             # TODO remove the following workaround\n-            from ..utils import determine_ext\n+            import re\n+            import base64\n+            import collections\n+            import datetime\n+            import functools\n+            import GeoUtils\n+            import json\n+            import math\n+            import netrc\n+            import random\n+            import socket\n+            import ssl\n+            import time\n+            import compat_etree_fromstring\n+            import compat_cookiejar\n+            import compat_cookies\n+            import compat_getpass\n+            import compat_http_client\n+            import compat_urllib_error\n+            import compat_urllib_parse\n+            import compat_urllib_request\n+            import compat_xml_parse_error\n+            import compat_integer_types\n+            import compat_str\n+            import variadic\n             if not f.get('ext') and 'url' in f:\n                 f['ext'] = determine_ext(f['url'])\n \n"
}