{
  "patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex c1a76584f0..7ccbc82878 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -138,14 +138,10 @@ class Combinable:\n         return self._combine(other, self.POW, True)\n \n     def __rand__(self, other):\n-        raise NotImplementedError(\n-            \"Use .bitand() and .bitor() for bitwise logical operations.\"\n-        )\n+        return self._combine(other, self.BITAND, True)\n \n     def __ror__(self, other):\n-        raise NotImplementedError(\n-            \"Use .bitand() and .bitor() for bitwise logical operations.\"\n-        )\n+        return self._combine(other, self.BITOR, True)\n \n \n @deconstructible\n@@ -229,7 +225,7 @@ class BaseExpression:\n     def contains_column_references(self):\n         return any(expr and expr.contains_column_references for expr in self.get_source_expressions())\n \n-    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):\n+    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=None):\n         \"\"\"\n         Provide the chance to do any preprocessing or validation before being\n         added to the query.\n@@ -310,7 +306,7 @@ class BaseExpression:\n             return output_field\n \n     @staticmethod\n-    def _convert_value_noop(value, expression, connection):\n+    def _convert_value_noop(value, expression, connection=None):\n         return value\n \n     @cached_property\n"
}