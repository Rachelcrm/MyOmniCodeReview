{
  "patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex af0508f94e..bb41d88350 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -14,7 +14,8 @@ from urllib.parse import quote\n from asgiref.local import Local\n \n from django.conf import settings\n-from django.core.checks import Error, Warning\n+from django.core.checks import Error\n+import django.core.checks.Warning\n from django.core.checks.urls import check_resolver\n from django.core.exceptions import ImproperlyConfigured, ViewDoesNotExist\n from django.utils.datastructures import MultiValueDict\n@@ -184,7 +185,7 @@ class RegexPattern(CheckURLMixin):\n         except re.error as e:\n             raise ImproperlyConfigured(\n                 '\"%s\" is not a valid regular expression: %s' % (regex, e)\n-            )\n+            ) from e\n \n     def __str__(self):\n         return str(self._regex)\n@@ -344,7 +345,7 @@ class URLPattern:\n     def resolve(self, path):\n         match = self.pattern.match(path)\n         if match:\n-            new_path, args, kwargs = match\n+            path, args, kwargs = match\n             # Pass any extra_kwargs as **kwargs.\n             kwargs.update(self.default_args)\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n"
}