{
  "patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 2428218696..093895896d 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -330,6 +330,8 @@ class ModelBase(type):\n     def _prepare(cls):\n         \"\"\"Create some methods once self._meta has been populated.\"\"\"\n         opts = cls._meta\n+        if opts.abstract:\n+            return\n         opts._prepare(cls)\n \n         if opts.order_with_respect_to:\n@@ -406,11 +408,12 @@ class Model(metaclass=ModelBase):\n     def __init__(self, *args, **kwargs):\n         # Alias some things as locals to avoid repeat global lookups\n         cls = self.__class__\n-        opts = self._meta\n+        opts = cls._meta\n         _setattr = setattr\n         _DEFERRED = DEFERRED\n         if opts.abstract:\n             raise TypeError('Abstract models cannot be instantiated.')\n+        self._meta = opts\n \n         pre_init.send(sender=cls, args=args, kwargs=kwargs)\n \n@@ -510,7 +513,7 @@ class Model(metaclass=ModelBase):\n             values_iter = iter(values)\n             values = [\n                 next(values_iter) if f.attname in field_names else DEFERRED\n-                for f in cls._meta.concrete_fields\n+                for f in cls._meta.get_fields()\n             ]\n         new = cls(*values)\n         new._state.adding = False\n"
}