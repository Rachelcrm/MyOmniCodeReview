{
  "patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 844c01e95e..6f9867c51b 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -329,8 +329,9 @@ class ModelBase(type):\n \n     def _prepare(cls):\n         \"\"\"Create some methods once self._meta has been populated.\"\"\"\n-        opts = cls._meta\n-        opts._prepare(cls)\n+        if cls._meta is None:\n+            opts = cls._meta\n+            opts._prepare(cls)\n \n         if opts.order_with_respect_to:\n             cls.get_next_in_order = partialmethod(cls._get_next_or_previous_in_order, is_next=True)\n@@ -375,10 +376,14 @@ class ModelBase(type):\n \n     @property\n     def _base_manager(cls):\n+        if cls._meta is None:\n+            return None\n         return cls._meta.base_manager\n \n     @property\n     def _default_manager(cls):\n+        if cls._meta is None:\n+            return None\n         return cls._meta.default_manager\n \n \n@@ -577,6 +582,8 @@ class Model(metaclass=ModelBase):\n         \"\"\"\n         Return a set containing names of deferred fields for this instance.\n         \"\"\"\n+        if self._meta is None:\n+            return set()\n         return {\n             f.attname for f in self._meta.concrete_fields\n             if f.attname not in self.__dict__\n"
}