{
  "instance_id": "django__django-11790",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_forms.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom django import forms\nfrom django.contrib.auth.forms import AuthenticationForm, UsernameField\n\ndef test_authentication_form_username_maxlength():\n    # Test that the username field in AuthenticationForm has a maxlength attribute\n    form = AuthenticationForm()\n    assert 'maxlength' in form.fields['username'].widget.attrs\n\ndef test_username_field_maxlength():\n    # Test that the UsernameField has a maxlength attribute\n    field = UsernameField(max_length=100)\n    assert 'maxlength' in field.widget.attrs\n\ndef test_authentication_form_username_maxlength_value():\n    # Test that the maxlength attribute value is correct\n    form = AuthenticationForm()\n    max_length = form.fields['username'].max_length\n    assert form.fields['username'].widget.attrs['maxlength'] == str(max_length)\n\ndef test_username_field_maxlength_value():\n    # Test that the maxlength attribute value is correct for UsernameField\n    field = UsernameField(max_length=100)\n    assert field.widget.attrs['maxlength'] == '100'\n</patched>\n</file>\n\n<file>tests/test_widgets.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom django.forms.widgets import TextInput\n\ndef test_textinput_maxlength():\n    # Test that the TextInput widget handles maxlength attribute\n    widget = TextInput(attrs={'maxlength': 100})\n    assert widget.attrs['maxlength'] == '100'\n</patched>\n</file>",
  "patch": "--- a/tests/test_forms.py\n+++ b/tests/test_forms.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from django import forms\n+from django.contrib.auth.forms import AuthenticationForm, UsernameField\n+\n+def test_authentication_form_username_maxlength():\n+    # Test that the username field in AuthenticationForm has a maxlength attribute\n+    form = AuthenticationForm()\n+    assert 'maxlength' in form.fields['username'].widget.attrs\n+\n+def test_username_field_maxlength():\n+    # Test that the UsernameField has a maxlength attribute\n+    field = UsernameField(max_length=100)\n+    assert 'maxlength' in field.widget.attrs\n+\n+def test_authentication_form_username_maxlength_value():\n+    # Test that the maxlength attribute value is correct\n+    form = AuthenticationForm()\n+    max_length = form.fields['username'].max_length\n+    assert form.fields['username'].widget.attrs['maxlength'] == str(max_length)\n+\n+def test_username_field_maxlength_value():\n+    # Test that the maxlength attribute value is correct for UsernameField\n+    field = UsernameField(max_length=100)\n+    assert field.widget.attrs['maxlength'] == '100'\n\n--- a/tests/test_widgets.py\n+++ b/tests/test_widgets.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from django.forms.widgets import TextInput\n+\n+def test_textinput_maxlength():\n+    # Test that the TextInput widget handles maxlength attribute\n+    widget = TextInput(attrs={'maxlength': 100})\n+    assert widget.attrs['maxlength'] == '100'\n"
}