{
  "instance_id": "django__django-13023",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "```\n<file>tests/test_fields.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom django.core.exceptions import ValidationError\nfrom django.db.models.fields import DecimalField\n\ndef test_decimalfield_to_python_valid():\n    field = DecimalField()\n    assert field.to_python(10) == decimal.Decimal('10')\n    assert field.to_python('10') == decimal.Decimal('10')\n    assert field.to_python(decimal.Decimal('10')) == decimal.Decimal('10')\n\ndef test_decimalfield_to_python_invalid():\n    field = DecimalField()\n    with pytest.raises(ValidationError):\n        field.to_python('invalid')\n    with pytest.raises(ValidationError):\n        field.to_python([1, 2, 3])\n    with pytest.raises(ValidationError):\n        field.to_python({'a': 1})\n\ndef test_decimalfield_to_python_dict():\n    field = DecimalField()\n    with pytest.raises(ValidationError) as e:\n        field.to_python({'a': 1})\n    assert 'value must be a decimal number' in str(e.value)\n\ndef test_decimalfield_to_python_none():\n    field = DecimalField()\n    assert field.to_python(None) is None\n</patched>\n```",
  "patch": "--- a/tests/test_fields.py\n+++ b/tests/test_fields.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from django.core.exceptions import ValidationError\n+from django.db.models.fields import DecimalField\n+\n+def test_decimalfield_to_python_valid():\n+    field = DecimalField()\n+    assert field.to_python(10) == decimal.Decimal('10')\n+    assert field.to_python('10') == decimal.Decimal('10')\n+    assert field.to_python(decimal.Decimal('10')) == decimal.Decimal('10')\n+\n+def test_decimalfield_to_python_invalid():\n+    field = DecimalField()\n+    with pytest.raises(ValidationError):\n+        field.to_python('invalid')\n+    with pytest.raises(ValidationError):\n+        field.to_python([1, 2, 3])\n+    with pytest.raises(ValidationError):\n+        field.to_python({'a': 1})\n+\n+def test_decimalfield_to_python_dict():\n+    field = DecimalField()\n+    with pytest.raises(ValidationError) as e:\n+        field.to_python({'a': 1})\n+    assert 'value must be a decimal number' in str(e.value)\n+\n+def test_decimalfield_to_python_none():\n+    field = DecimalField()\n+    assert field.to_python(None) is None\n"
}