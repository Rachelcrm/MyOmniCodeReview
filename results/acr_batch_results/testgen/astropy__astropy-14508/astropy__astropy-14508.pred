{
  "instance_id": "astropy__astropy-14508",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_io_fits_card.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom astropy.io import fits\nfrom astropy.io.fits.card import Card\n\ndef test_float_format():\n \"\"\"Test formatting of float values.\"\"\"\n value = 0.009125\n card = Card(\"TEST\", value)\n assert str(card) == \"TEST            =0.009125       /      \"\n\ndef test_float_format_compact():\n \"\"\"Test compact formatting of float values.\"\"\"\n value = 1.23456789\n card = Card(\"TEST\", value)\n assert len(str(card)) <= 80\n\ndef test_comment_truncation():\n \"\"\"Test that comment truncation occurs correctly.\"\"\"\n value = 0.009125\n comment = \"This is a very long comment that will be truncated.\"\n card = Card(\"TEST\", value, comment)\n assert len(str(card)) <= 80\n\ndef test_rvkc_format():\n \"\"\"Test formatting of record-valued keyword cards.\"\"\"\n rvkc = Card(\"DP1.AXIS.1\", \"AXIS.1:2\")\n assert str(rvkc) == \"DP1.AXIS.1     =AXIS.1:2       /      \"\n</patched>\n</file>\n\n<file>tests/test_io_fits_header.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom astropy.io import fits\n\ndef test_header_creation():\n \"\"\"Test creation of a FITS header.\"\"\"\n hdr = fits.Header()\n assert isinstance(hdr, fits.Header)\n\ndef test_header_add_card():\n \"\"\"Test adding a card to a header.\"\"\"\n hdr = fits.Header()\n hdr[\"TEST\"] = 1.0\n assert \"TEST\" in hdr\n</patched>\n</file>",
  "patch": "--- a/tests/test_io_fits_card.py\n+++ b/tests/test_io_fits_card.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from astropy.io import fits\n+from astropy.io.fits.card import Card\n+\n+def test_float_format():\n+ \"\"\"Test formatting of float values.\"\"\"\n+ value = 0.009125\n+ card = Card(\"TEST\", value)\n+ assert str(card) == \"TEST            =0.009125       /      \"\n+\n+def test_float_format_compact():\n+ \"\"\"Test compact formatting of float values.\"\"\"\n+ value = 1.23456789\n+ card = Card(\"TEST\", value)\n+ assert len(str(card)) <= 80\n+\n+def test_comment_truncation():\n+ \"\"\"Test that comment truncation occurs correctly.\"\"\"\n+ value = 0.009125\n+ comment = \"This is a very long comment that will be truncated.\"\n+ card = Card(\"TEST\", value, comment)\n+ assert len(str(card)) <= 80\n+\n+def test_rvkc_format():\n+ \"\"\"Test formatting of record-valued keyword cards.\"\"\"\n+ rvkc = Card(\"DP1.AXIS.1\", \"AXIS.1:2\")\n+ assert str(rvkc) == \"DP1.AXIS.1     =AXIS.1:2       /      \"\n\n--- a/tests/test_io_fits_header.py\n+++ b/tests/test_io_fits_header.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from astropy.io import fits\n+\n+def test_header_creation():\n+ \"\"\"Test creation of a FITS header.\"\"\"\n+ hdr = fits.Header()\n+ assert isinstance(hdr, fits.Header)\n+\n+def test_header_add_card():\n+ \"\"\"Test adding a card to a header.\"\"\"\n+ hdr = fits.Header()\n+ hdr[\"TEST\"] = 1.0\n+ assert \"TEST\" in hdr\n"
}