{
  "instance_id": "scrapy__scrapy-5526",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_headers.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom scrapy.http import Headers, Response\n\ndef test_headers_getlist():\n    # Test that getlist returns all values for a given header\n    headers = Headers([(\"a\", \"b\"), (\"a\", \"c\")])\n    assert headers.getlist(\"a\") == [b\"b\", b\"c\"]\n\ndef test_headers_getlist_default_value():\n    # Test that getlist returns default value if header is not found\n    headers = Headers()\n    assert headers.getlist(\"a\", def_val=\"default\") == \"default\"\n\ndef test_headers_getlist_empty_list():\n    # Test that getlist returns empty list if header is not found\n    headers = Headers()\n    assert headers.getlist(\"a\") == []\n\ndef test_response_headers_getlist():\n    # Test that Response.headers.getlist returns all values for a given header\n    response = Response(\"https://example.com\", headers=[(\"a\", \"b\"), (\"a\", \"c\")])\n    assert response.headers.getlist(\"a\") == [b\"b\", b\"c\"]\n\ndef test_response_headers_getlist_default_value():\n    # Test that Response.headers.getlist returns default value if header is not found\n    response = Response(\"https://example.com\")\n    assert response.headers.getlist(\"a\", def_val=\"default\") == \"default\"\n\ndef test_response_headers_getlist_empty_list():\n    # Test that Response.headers.getlist returns empty list if header is not found\n    response = Response(\"https://example.com\")\n    assert response.headers.getlist(\"a\") == []\n</patched>\n</file>\n\n<file>tests/test_response.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom scrapy.http import Response\n\ndef test_response_headers():\n    # Test that Response.headers handles multiple values for the same header\n    response = Response(\"https://example.com\", headers=[(\"a\", \"b\"), (\"a\", \"c\")])\n    assert response.headers[\"a\"] == b\"c\"  # Test that last value is stored\n    assert response.headers.getlist(\"a\") == [b\"b\", b\"c\"]  # Test that getlist returns all values\n</patched>\n</file>\n```",
  "patch": "--- a/tests/test_headers.py\n+++ b/tests/test_headers.py\n-# Empty if creating new file\n+import pytest\n+from scrapy.http import Headers, Response\n+\n+def test_headers_getlist():\n+    # Test that getlist returns all values for a given header\n+    headers = Headers([(\"a\", \"b\"), (\"a\", \"c\")])\n+    assert headers.getlist(\"a\") == [b\"b\", b\"c\"]\n+\n+def test_headers_getlist_default_value():\n+    # Test that getlist returns default value if header is not found\n+    headers = Headers()\n+    assert headers.getlist(\"a\", def_val=\"default\") == \"default\"\n+\n+def test_headers_getlist_empty_list():\n+    # Test that getlist returns empty list if header is not found\n+    headers = Headers()\n+    assert headers.getlist(\"a\") == []\n+\n+def test_response_headers_getlist():\n+    # Test that Response.headers.getlist returns all values for a given header\n+    response = Response(\"https://example.com\", headers=[(\"a\", \"b\"), (\"a\", \"c\")])\n+    assert response.headers.getlist(\"a\") == [b\"b\", b\"c\"]\n+\n+def test_response_headers_getlist_default_value():\n+    # Test that Response.headers.getlist returns default value if header is not found\n+    response = Response(\"https://example.com\")\n+    assert response.headers.getlist(\"a\", def_val=\"default\") == \"default\"\n+\n+def test_response_headers_getlist_empty_list():\n+    # Test that Response.headers.getlist returns empty list if header is not found\n+    response = Response(\"https://example.com\")\n+    assert response.headers.getlist(\"a\") == []\n\n--- a/tests/test_response.py\n+++ b/tests/test_response.py\n-# Empty if creating new file\n+import pytest\n+from scrapy.http import Response\n+\n+def test_response_headers():\n+    # Test that Response.headers handles multiple values for the same header\n+    response = Response(\"https://example.com\", headers=[(\"a\", \"b\"), (\"a\", \"c\")])\n+    assert response.headers[\"a\"] == b\"c\"  # Test that last value is stored\n+    assert response.headers.getlist(\"a\") == [b\"b\", b\"c\"]  # Test that getlist returns all values\n"
}