{
  "instance_id": "matplotlib__matplotlib-24637",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_offsetbox.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nimport matplotlib.pyplot as plt\nfrom matplotlib.offsetbox import OffsetImage, AnnotationBbox\n\ndef test_annotationbbox_gid():\n    fig, ax = plt.subplots()\n    arr_img = plt.imread(\"undraw_flowers_vx06.png\")\n    xy = [0.3, 0.55]\n    imagebox = OffsetImage(arr_img, zoom=0.1)\n    imagebox.image.axes = ax\n    ab = AnnotationBbox(imagebox, xy,\n                        xybox=(120., -80.),\n                        xycoords='data',\n                        boxcoords=\"offset points\",\n                        pad=0.5,\n                        arrowprops=dict(\n                            arrowstyle=\"->\",\n                            connectionstyle=\"angle,angleA=0,angleB=90,rad=3\")\n                        )\n    ab.set_gid('My_label')\n    ax.add_artist(ab)\n    fig.savefig(\"test_annotationbbox_gid.svg\", format=\"svg\")\n    # Check if the gid is present in the SVG file\n    with open(\"test_annotationbbox_gid.svg\", \"r\") as f:\n        svg_content = f.read()\n    assert 'gid=\"My_label\"' in svg_content\n\n</patched>\n</file>\n\n<file>tests/test_offsetimage.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nimport matplotlib.pyplot as plt\nfrom matplotlib.offsetbox import OffsetImage\n\ndef test_offsetimage_gid():\n    fig, ax = plt.subplots()\n    arr_img = plt.imread(\"undraw_flowers_vx06.png\")\n    imagebox = OffsetImage(arr_img, zoom=0.1)\n    imagebox.set_gid('My_label')\n    # Check if the gid is set correctly\n    assert imagebox.get_gid() == 'My_label'\n    # Render the image and check if the gid is present in the SVG file\n    imagebox.draw(None)  # This should not raise any errors\n</patched>\n</file>\n```",
  "patch": "--- a/tests/test_offsetbox.py\n+++ b/tests/test_offsetbox.py\n-# Original code here (if modifying existing file)\n+import pytest\n+import matplotlib.pyplot as plt\n+from matplotlib.offsetbox import OffsetImage, AnnotationBbox\n+\n+def test_annotationbbox_gid():\n+    fig, ax = plt.subplots()\n+    arr_img = plt.imread(\"undraw_flowers_vx06.png\")\n+    xy = [0.3, 0.55]\n+    imagebox = OffsetImage(arr_img, zoom=0.1)\n+    imagebox.image.axes = ax\n+    ab = AnnotationBbox(imagebox, xy,\n+                        xybox=(120., -80.),\n+                        xycoords='data',\n+                        boxcoords=\"offset points\",\n+                        pad=0.5,\n+                        arrowprops=dict(\n+                            arrowstyle=\"->\",\n+                            connectionstyle=\"angle,angleA=0,angleB=90,rad=3\")\n+                        )\n+    ab.set_gid('My_label')\n+    ax.add_artist(ab)\n+    fig.savefig(\"test_annotationbbox_gid.svg\", format=\"svg\")\n+    # Check if the gid is present in the SVG file\n+    with open(\"test_annotationbbox_gid.svg\", \"r\") as f:\n+        svg_content = f.read()\n+    assert 'gid=\"My_label\"' in svg_content\n\n--- a/tests/test_offsetimage.py\n+++ b/tests/test_offsetimage.py\n-# Original code here (if modifying existing file)\n+import pytest\n+import matplotlib.pyplot as plt\n+from matplotlib.offsetbox import OffsetImage\n+\n+def test_offsetimage_gid():\n+    fig, ax = plt.subplots()\n+    arr_img = plt.imread(\"undraw_flowers_vx06.png\")\n+    imagebox = OffsetImage(arr_img, zoom=0.1)\n+    imagebox.set_gid('My_label')\n+    # Check if the gid is set correctly\n+    assert imagebox.get_gid() == 'My_label'\n+    # Render the image and check if the gid is present in the SVG file\n+    imagebox.draw(None)  # This should not raise any errors\n"
}