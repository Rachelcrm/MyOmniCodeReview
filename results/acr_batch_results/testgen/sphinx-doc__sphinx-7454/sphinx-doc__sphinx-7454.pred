{
  "instance_id": "sphinx-doc__sphinx-7454",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_autodoc_typehints.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom sphinx import __version__ as sphinx_version\nfrom sphinx.testing import TestApp\nfrom sphinx.ext.autodoc import AutodocReporter\n\n@pytest.fixture\ndef app():\n    return TestApp.builder('html', freshenv=True)\n\ndef test_autodoc_typehints_signature(app):\n    # Test that 'None' in a type hint links to the documentation for the None singleton\n    # when autodoc_typehints='signature'\n    app.config.autodoc_typehints = 'signature'\n    app.add_source_file('type_hint_test.py', 'type_hint_test.py')\n    app.add_source_file('index.rst', 'index.rst')\n    app.build()\n    with open(app.outdir / 'index.html', 'r') as f:\n        html = f.read()\n    assert '\u2192 <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>' in html\n\ndef test_autodoc_typehints_description(app):\n    # Test that 'None' in a type hint links to the documentation for the None singleton\n    # when autodoc_typehints='description'\n    app.config.autodoc_typehints = 'description'\n    app.add_source_file('type_hint_test.py', 'type_hint_test.py')\n    app.add_source_file('index.rst', 'index.rst')\n    app.build()\n    with open(app.outdir / 'index.html', 'r') as f:\n        html = f.read()\n    assert '\u2192 <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>' in html\n\ndef test_autodoc_typehints_none_link(app):\n    # Test that 'None' in a type hint links to the documentation for the None singleton\n    # regardless of autodoc_typehints mode\n    app.config.autodoc_typehints = 'signature'\n    app.add_source_file('type_hint_test.py', 'type_hint_test.py')\n    app.add_source_file('index.rst', 'index.rst')\n    app.build()\n    with open(app.outdir / 'index.html', 'r') as f:\n        html = f.read()\n    assert '\u2192 <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>' in html\n\n    app.config.autodoc_typehints = 'description'\n    app.build()\n    with open(app.outdir / 'index.html', 'r') as f:\n        html = f.read()\n    assert '\u2192 <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>' in html\n</patched>\n</file>\n\n<file>tests/test_type_hint_test.py</file>\n<original>\n# type_hint_test.py\n\ndef f1() -> None:\n    return None\n\ndef f2() -> int:\n    return 42\n</original>\n<patched>\n# type_hint_test.py\n\ndef f1() -> None:\n    return None\n\ndef f2() -> int:\n    return 42\n</patched>\n</file>\n\n<file>tests/index.rst</file>\n<original>\n.. automodule:: type_hint_test\n.. autofunction:: f1\n.. autofunction:: f2\n</original>\n<patched>\n.. automodule:: type_hint_test\n.. autofunction:: f1\n.. autofunction:: f2\n</patched>\n</file>",
  "patch": "--- a/tests/test_autodoc_typehints.py\n+++ b/tests/test_autodoc_typehints.py\n-# Empty if creating new file\n+import pytest\n+from sphinx import __version__ as sphinx_version\n+from sphinx.testing import TestApp\n+from sphinx.ext.autodoc import AutodocReporter\n+\n+@pytest.fixture\n+def app():\n+    return TestApp.builder('html', freshenv=True)\n+\n+def test_autodoc_typehints_signature(app):\n+    # Test that 'None' in a type hint links to the documentation for the None singleton\n+    # when autodoc_typehints='signature'\n+    app.config.autodoc_typehints = 'signature'\n+    app.add_source_file('type_hint_test.py', 'type_hint_test.py')\n+    app.add_source_file('index.rst', 'index.rst')\n+    app.build()\n+    with open(app.outdir / 'index.html', 'r') as f:\n+        html = f.read()\n+    assert '\u2192 <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>' in html\n+\n+def test_autodoc_typehints_description(app):\n+    # Test that 'None' in a type hint links to the documentation for the None singleton\n+    # when autodoc_typehints='description'\n+    app.config.autodoc_typehints = 'description'\n+    app.add_source_file('type_hint_test.py', 'type_hint_test.py')\n+    app.add_source_file('index.rst', 'index.rst')\n+    app.build()\n+    with open(app.outdir / 'index.html', 'r') as f:\n+        html = f.read()\n+    assert '\u2192 <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>' in html\n+\n+def test_autodoc_typehints_none_link(app):\n+    # Test that 'None' in a type hint links to the documentation for the None singleton\n+    # regardless of autodoc_typehints mode\n+    app.config.autodoc_typehints = 'signature'\n+    app.add_source_file('type_hint_test.py', 'type_hint_test.py')\n+    app.add_source_file('index.rst', 'index.rst')\n+    app.build()\n+    with open(app.outdir / 'index.html', 'r') as f:\n+        html = f.read()\n+    assert '\u2192 <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>' in html\n+\n+    app.config.autodoc_typehints = 'description'\n+    app.build()\n+    with open(app.outdir / 'index.html', 'r') as f:\n+        html = f.read()\n+    assert '\u2192 <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>' in html\n\n--- a/tests/test_type_hint_test.py\n+++ b/tests/test_type_hint_test.py\n-# type_hint_test.py\n-\n-def f1() -> None:\n-    return None\n-\n-def f2() -> int:\n-    return 42\n+# type_hint_test.py\n+\n+def f1() -> None:\n+    return None\n+\n+def f2() -> int:\n+    return 42\n\n--- a/tests/index.rst\n+++ b/tests/index.rst\n-.. automodule:: type_hint_test\n-.. autofunction:: f1\n-.. autofunction:: f2\n+.. automodule:: type_hint_test\n+.. autofunction:: f1\n+.. autofunction:: f2\n"
}