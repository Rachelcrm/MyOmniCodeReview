{
  "instance_id": "psf__requests-1921",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_sessions.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nimport requests\n\ndef test_session_header_removal():\n    session = requests.Session()\n    session.headers['Accept-Encoding'] = 'gzip, deflate'\n    assert 'Accept-Encoding' in session.headers\n\n    session.headers['Accept-Encoding'] = None\n    assert 'Accept-Encoding' not in session.headers\n\ndef test_session_header_override_with_none():\n    session = requests.Session()\n    session.headers['Accept-Encoding'] = 'gzip, deflate'\n\n    # Simulate sending a request with headers set to None\n    # This should not send the 'Accept-Encoding' header\n    response = session.get('http://httpbin.org/get', headers={'Accept-Encoding': None})\n    assert 'Accept-Encoding' not in response.request.headers\n\ndef test_default_header_removal():\n    session = requests.Session()\n    session.headers['Accept-Encoding'] = None\n    assert 'Accept-Encoding' not in session.headers\n\ndef test_header_setting_to_none():\n    session = requests.Session()\n    session.headers['Test-Header'] = 'test-value'\n    assert 'Test-Header' in session.headers\n\n    session.headers['Test-Header'] = None\n    assert 'Test-Header' not in session.headers\n</patched>\n</file>\n\n<file>tests/conftest.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\n# No changes needed here\n</patched>\n```",
  "patch": "--- a/tests/test_sessions.py\n+++ b/tests/test_sessions.py\n-# Original code here (if modifying existing file)\n+import pytest\n+import requests\n+\n+def test_session_header_removal():\n+    session = requests.Session()\n+    session.headers['Accept-Encoding'] = 'gzip, deflate'\n+    assert 'Accept-Encoding' in session.headers\n+\n+    session.headers['Accept-Encoding'] = None\n+    assert 'Accept-Encoding' not in session.headers\n+\n+def test_session_header_override_with_none():\n+    session = requests.Session()\n+    session.headers['Accept-Encoding'] = 'gzip, deflate'\n+\n+    # Simulate sending a request with headers set to None\n+    # This should not send the 'Accept-Encoding' header\n+    response = session.get('http://httpbin.org/get', headers={'Accept-Encoding': None})\n+    assert 'Accept-Encoding' not in response.request.headers\n+\n+def test_default_header_removal():\n+    session = requests.Session()\n+    session.headers['Accept-Encoding'] = None\n+    assert 'Accept-Encoding' not in session.headers\n+\n+def test_header_setting_to_none():\n+    session = requests.Session()\n+    session.headers['Test-Header'] = 'test-value'\n+    assert 'Test-Header' in session.headers\n+\n+    session.headers['Test-Header'] = None\n+    assert 'Test-Header' not in session.headers\n\n--- a/tests/conftest.py\n+++ b/tests/conftest.py\n-# Original code here (if modifying existing file)\n+# No changes needed here\n"
}