{
  "instance_id": "django__django-11815",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_migrations.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom django.db import migrations\nfrom django.db.models import CharField, Enum\n\nclass Status(Enum):\n    GOOD = 'good'\n    BAD = 'bad'\n\nclass Item(models.Model):\n    status = CharField(max_length=10, default=Status.GOOD)\n\ndef test_enum_default_in_migration():\n    \"\"\"\n    Test that Enum default values are handled correctly in migrations.\n    \"\"\"\n    # Create a migration\n    migration = migrations.Migration()\n    field = migrations.Field(\n        'status',\n        CharField,\n        default=Status.GOOD,\n    )\n    migration.operations.append(migrations.AddField(\n        model_name='item',\n        name='status',\n        field=field,\n    ))\n\n    # Apply the migration\n    migration.apply(ProjectState(), 'item')\n\n    # Check that the default value is correct\n    item = Item.objects.get(id=1)\n    assert item.status == 'good'\n\ndef test_enum_default_in_migration_serialization():\n    \"\"\"\n    Test that Enum default values are serialized correctly in migrations.\n    \"\"\"\n    # Create a migration\n    migration = migrations.Migration()\n    field = migrations.Field(\n        'status',\n        CharField,\n        default=Status.GOOD,\n    )\n    migration.operations.append(migrations.AddField(\n        model_name='item',\n        name='status',\n        field=field,\n    ))\n\n    # Serialize the migration\n    serializer = MigrationSerializer(migration)\n    serialized_migration = serializer.serialize()\n\n    # Check that the default value is correct\n    assert 'default=Status.GOOD' in serialized_migration\n</patched>\n```",
  "patch": "--- a/tests/test_migrations.py\n+++ b/tests/test_migrations.py\n-# Empty if creating new file\n+import pytest\n+from django.db import migrations\n+from django.db.models import CharField, Enum\n+\n+class Status(Enum):\n+    GOOD = 'good'\n+    BAD = 'bad'\n+\n+class Item(models.Model):\n+    status = CharField(max_length=10, default=Status.GOOD)\n+\n+def test_enum_default_in_migration():\n+    \"\"\"\n+    Test that Enum default values are handled correctly in migrations.\n+    \"\"\"\n+    # Create a migration\n+    migration = migrations.Migration()\n+    field = migrations.Field(\n+        'status',\n+        CharField,\n+        default=Status.GOOD,\n+    )\n+    migration.operations.append(migrations.AddField(\n+        model_name='item',\n+        name='status',\n+        field=field,\n+    ))\n+\n+    # Apply the migration\n+    migration.apply(ProjectState(), 'item')\n+\n+    # Check that the default value is correct\n+    item = Item.objects.get(id=1)\n+    assert item.status == 'good'\n+\n+def test_enum_default_in_migration_serialization():\n+    \"\"\"\n+    Test that Enum default values are serialized correctly in migrations.\n+    \"\"\"\n+    # Create a migration\n+    migration = migrations.Migration()\n+    field = migrations.Field(\n+        'status',\n+        CharField,\n+        default=Status.GOOD,\n+    )\n+    migration.operations.append(migrations.AddField(\n+        model_name='item',\n+        name='status',\n+        field=field,\n+    ))\n+\n+    # Serialize the migration\n+    serializer = MigrationSerializer(migration)\n+    serialized_migration = serializer.serialize()\n+\n+    # Check that the default value is correct\n+    assert 'default=Status.GOOD' in serialized_migration\n"
}