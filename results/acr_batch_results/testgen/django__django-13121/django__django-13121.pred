{
  "instance_id": "django__django-13121",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "```\n<file>tests/test_expressions.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nfrom django.db.models import F\nfrom django.db.models.fields import DurationField\nfrom django.test import TestCase\n\nclass TestDurationExpressions(TestCase):\n    @classmethod\n    def setUpTestData(cls):\n        class Experiment(models.Model):\n            estimated_time = DurationField()\n        cls.Experiment = Experiment\n\n    def test_duration_expressions(self):\n        experiment = self.Experiment.objects.create(estimated_time='00:01:00')\n        result = self.Experiment.objects.annotate(\n            duration=F('estimated_time') + timedelta(days=1)\n        ).get()\n        assert result.duration == timedelta(days=1, seconds=3600)\n\n    def test_duration_expressions_fails(self):\n        with pytest.raises(Exception):\n            self.Experiment.objects.annotate(\n                duration=F('estimated_time') + timedelta(days=1)\n            ).get()\n\n    def test_duration_expressions_with_database(self):\n        # Test with SQLite\n        with self.settings(DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3'}}):\n            experiment = self.Experiment.objects.create(estimated_time='00:01:00')\n            result = self.Experiment.objects.annotate(\n                duration=F('estimated_time') + timedelta(days=1)\n            ).get()\n            assert result.duration == timedelta(days=1, seconds=3600)\n\n        # Test with MySQL\n        with self.settings(DATABASES={'default': {'ENGINE': 'django.db.backends.mysql'}}):\n            experiment = self.Experiment.objects.create(estimated_time='00:01:00')\n            result = self.Experiment.objects.annotate(\n                duration=F('estimated_time') + timedelta(days=1)\n            ).get()\n            assert result.duration == timedelta(days=1, seconds=3600)\n</patched>\n```",
  "patch": "--- a/tests/test_expressions.py\n+++ b/tests/test_expressions.py\n-# Original code here (if modifying existing file)\n+import pytest\n+from django.db.models import F\n+from django.db.models.fields import DurationField\n+from django.test import TestCase\n+\n+class TestDurationExpressions(TestCase):\n+    @classmethod\n+    def setUpTestData(cls):\n+        class Experiment(models.Model):\n+            estimated_time = DurationField()\n+        cls.Experiment = Experiment\n+\n+    def test_duration_expressions(self):\n+        experiment = self.Experiment.objects.create(estimated_time='00:01:00')\n+        result = self.Experiment.objects.annotate(\n+            duration=F('estimated_time') + timedelta(days=1)\n+        ).get()\n+        assert result.duration == timedelta(days=1, seconds=3600)\n+\n+    def test_duration_expressions_fails(self):\n+        with pytest.raises(Exception):\n+            self.Experiment.objects.annotate(\n+                duration=F('estimated_time') + timedelta(days=1)\n+            ).get()\n+\n+    def test_duration_expressions_with_database(self):\n+        # Test with SQLite\n+        with self.settings(DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3'}}):\n+            experiment = self.Experiment.objects.create(estimated_time='00:01:00')\n+            result = self.Experiment.objects.annotate(\n+                duration=F('estimated_time') + timedelta(days=1)\n+            ).get()\n+            assert result.duration == timedelta(days=1, seconds=3600)\n+\n+        # Test with MySQL\n+        with self.settings(DATABASES={'default': {'ENGINE': 'django.db.backends.mysql'}}):\n+            experiment = self.Experiment.objects.create(estimated_time='00:01:00')\n+            result = self.Experiment.objects.annotate(\n+                duration=F('estimated_time') + timedelta(days=1)\n+            ).get()\n+            assert result.duration == timedelta(days=1, seconds=3600)\n"
}