{
  "instance_id": "scrapy__scrapy-5320",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_utils_response.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nfrom scrapy.utils.response import open_in_browser\nfrom scrapy.http import HtmlResponse\nimport webbrowser\nfrom unittest.mock import patch\n\n@pytest.fixture\ndef mock_open():\n    with patch('webbrowser.open') as mock_open:\n        yield mock_open\n\ndef test_open_in_browser_html_response(mock_open):\n    # Create a simple HTML response\n    body = '<html><head></head><body>Test</body></html>'\n    response = HtmlResponse(url='http://example.com', body=body.encode())\n\n    # Open the response in the browser\n    open_in_browser(response)\n\n    # Check that the browser was opened with the correct file\n    mock_open.assert_called_once()\n\ndef test_open_in_browser_with_base_tag(mock_open):\n    # Create an HTML response with a <base> tag\n    body = '<html><head><base href=\"https://example.com\"></head><body>Test</body></html>'\n    response = HtmlResponse(url='http://example.com', body=body.encode())\n\n    # Open the response in the browser\n    open_in_browser(response)\n\n    # Check that the browser was opened with the correct file\n    mock_open.assert_called_once()\n\ndef test_open_in_browser_with_head_attributes(mock_open):\n    # Create an HTML response with a <head> tag that has attributes\n    body = '<html><head id=\"test\"></head><body>Test</body></html>'\n    response = HtmlResponse(url='http://example.com', body=body.encode())\n\n    # Open the response in the browser\n    open_in_browser(response)\n\n    # Check that the browser was opened with the correct file\n    mock_open.assert_called_once()\n\ndef test_open_in_browser_with_external_resources(mock_open):\n    # Create an HTML response with external resources\n    body = '<html><head></head><body><img src=\"image.jpg\"></body></html>'\n    response = HtmlResponse(url='http://example.com', body=body.encode())\n\n    # Open the response in the browser\n    open_in_browser(response)\n\n    # Check that the browser was opened with the correct file\n    mock_open.assert_called_once()\n</patched>\n```",
  "patch": "--- a/tests/test_utils_response.py\n+++ b/tests/test_utils_response.py\n-# Empty if creating new file\n+import pytest\n+from scrapy.utils.response import open_in_browser\n+from scrapy.http import HtmlResponse\n+import webbrowser\n+from unittest.mock import patch\n+\n+@pytest.fixture\n+def mock_open():\n+    with patch('webbrowser.open') as mock_open:\n+        yield mock_open\n+\n+def test_open_in_browser_html_response(mock_open):\n+    # Create a simple HTML response\n+    body = '<html><head></head><body>Test</body></html>'\n+    response = HtmlResponse(url='http://example.com', body=body.encode())\n+\n+    # Open the response in the browser\n+    open_in_browser(response)\n+\n+    # Check that the browser was opened with the correct file\n+    mock_open.assert_called_once()\n+\n+def test_open_in_browser_with_base_tag(mock_open):\n+    # Create an HTML response with a <base> tag\n+    body = '<html><head><base href=\"https://example.com\"></head><body>Test</body></html>'\n+    response = HtmlResponse(url='http://example.com', body=body.encode())\n+\n+    # Open the response in the browser\n+    open_in_browser(response)\n+\n+    # Check that the browser was opened with the correct file\n+    mock_open.assert_called_once()\n+\n+def test_open_in_browser_with_head_attributes(mock_open):\n+    # Create an HTML response with a <head> tag that has attributes\n+    body = '<html><head id=\"test\"></head><body>Test</body></html>'\n+    response = HtmlResponse(url='http://example.com', body=body.encode())\n+\n+    # Open the response in the browser\n+    open_in_browser(response)\n+\n+    # Check that the browser was opened with the correct file\n+    mock_open.assert_called_once()\n+\n+def test_open_in_browser_with_external_resources(mock_open):\n+    # Create an HTML response with external resources\n+    body = '<html><head></head><body><img src=\"image.jpg\"></body></html>'\n+    response = HtmlResponse(url='http://example.com', body=body.encode())\n+\n+    # Open the response in the browser\n+    open_in_browser(response)\n+\n+    # Check that the browser was opened with the correct file\n+    mock_open.assert_called_once()\n"
}