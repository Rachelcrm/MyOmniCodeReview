{
  "instance_id": "matplotlib__matplotlib-13989",
  "model": "openrouter/meta-llama/llama-4-scout",
  "response": "<file>tests/test_axes.py</file>\n<original>\n# Original code here (if modifying existing file)\n</original>\n<patched>\nimport pytest\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef test_hist_range_density():\n    # Test that hist() respects range=... when density=True\n    _, bins, _ = plt.hist(np.random.rand(10), \"auto\", range=(0, 1), density=True)\n    assert np.diff(bins)[0] == (1 - 0) / len(bins) - 1\n\ndef test_hist_range_not_density():\n    # Test that hist() respects range=... when density=False\n    _, bins, _ = plt.hist(np.random.rand(10), \"auto\", range=(0, 1), density=False)\n    assert np.diff(bins)[0] == (1 - 0) / len(bins) \n\ndef test_hist_density():\n    # Test hist() with density=True\n    n, bins, patches = plt.hist([1, 2, 2, 3, 3, 3], density=True)\n    assert np.sum(n * np.diff(bins)) == 1.0\n\ndef test_hist_range():\n    # Test hist() with range\n    n, bins, patches = plt.hist([1, 2, 2, 3, 3, 3], range=(1, 3))\n    assert bins[0] == 1\n    assert bins[-1] == 3\n\n</patched>\n</file>\n\n<file>tests/test_hist.py</file>\n<original>\n# Empty if creating new file\n</original>\n<patched>\nimport pytest\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef test_hist():\n    # Test hist() function\n    n, bins, patches = plt.hist([1, 2, 2, 3, 3, 3])\n    assert len(n) > 0\n    assert len(bins) > 0\n    assert len(patches) > 0\n\n</patched>\n</file>",
  "patch": "--- a/tests/test_axes.py\n+++ b/tests/test_axes.py\n-# Original code here (if modifying existing file)\n+import pytest\n+import numpy as np\n+import matplotlib.pyplot as plt\n+\n+def test_hist_range_density():\n+    # Test that hist() respects range=... when density=True\n+    _, bins, _ = plt.hist(np.random.rand(10), \"auto\", range=(0, 1), density=True)\n+    assert np.diff(bins)[0] == (1 - 0) / len(bins) - 1\n+\n+def test_hist_range_not_density():\n+    # Test that hist() respects range=... when density=False\n+    _, bins, _ = plt.hist(np.random.rand(10), \"auto\", range=(0, 1), density=False)\n+    assert np.diff(bins)[0] == (1 - 0) / len(bins) \n+\n+def test_hist_density():\n+    # Test hist() with density=True\n+    n, bins, patches = plt.hist([1, 2, 2, 3, 3, 3], density=True)\n+    assert np.sum(n * np.diff(bins)) == 1.0\n+\n+def test_hist_range():\n+    # Test hist() with range\n+    n, bins, patches = plt.hist([1, 2, 2, 3, 3, 3], range=(1, 3))\n+    assert bins[0] == 1\n+    assert bins[-1] == 3\n\n--- a/tests/test_hist.py\n+++ b/tests/test_hist.py\n-# Empty if creating new file\n+import pytest\n+import numpy as np\n+import matplotlib.pyplot as plt\n+\n+def test_hist():\n+    # Test hist() function\n+    n, bins, patches = plt.hist([1, 2, 2, 3, 3, 3])\n+    assert len(n) > 0\n+    assert len(bins) > 0\n+    assert len(patches) > 0\n"
}