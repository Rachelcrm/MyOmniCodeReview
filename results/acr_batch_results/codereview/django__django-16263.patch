{
  "patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9735ce10c8..ef0c5af59e 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -545,11 +545,33 @@ class Query(BaseExpression):\n \n         return dict(zip(outer_query.annotation_select, result))\n \n+    def resolve_used_annotations(self):\n+        \"\"\"\n+        Return the set of annotation aliases that are used in the query.\n+        \"\"\"\n+        used_annotations = set()\n+        # Add annotations that are used in the where clause.\n+        used_annotations.update(\n+            col.alias for col in self._gen_cols(self.where.children, include_external=True)\n+        )\n+        # Add annotations that are used in other annotations.\n+        for annotation in self.annotations.values():\n+            used_annotations.update(\n+                col.alias for col in self._gen_cols([annotation], include_external=True)\n+            )\n+        # Add annotations that are used in the order_by clause.\n+        used_annotations.update(\n+            col.alias for col in self._gen_cols(self.order_by, include_external=True)\n+        )\n+        return used_annotations\n+\n     def get_count(self, using):\n         \"\"\"\n         Perform a COUNT() query using the current filter constraints.\n         \"\"\"\n         obj = self.clone()\n+        used_annotations = self.resolve_used_annotations()\n+        obj.set_annotation_mask(used_annotations)\n         obj.add_annotation(Count(\"*\"), alias=\"__count\", is_summary=True)\n         return obj.get_aggregation(using, [\"__count\"])[\"__count\"]\n \n"
}