{
  "patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex fdca700c9d..10d81e3a11 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -324,11 +324,19 @@ class KeyTransform(Transform):\n     def as_mysql(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n+        if isinstance(self.key_name, int):\n+            json_path = f\"{json_path[1:-1]}, {self.key_name}\"\n+        else:\n+            json_path = f\"{json_path[1:-1]}, '{self.key_name}'\"\n         return \"JSON_EXTRACT(%s, %%s)\" % lhs, tuple(params) + (json_path,)\n \n     def as_oracle(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n+        if isinstance(self.key_name, int):\n+            json_path = f\"{json_path[1:-1]}, {self.key_name}\"\n+        else:\n+            json_path = f\"{json_path[1:-1]}, '{self.key_name}'\"\n         return (\n             \"COALESCE(JSON_QUERY(%s, '%s'), JSON_VALUE(%s, '%s'))\"\n             % ((lhs, json_path) * 2)\n@@ -348,13 +356,11 @@ class KeyTransform(Transform):\n     def as_sqlite(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n-        datatype_values = \",\".join(\n-            [repr(datatype) for datatype in connection.ops.jsonfield_datatype_values]\n-        )\n-        return (\n-            \"(CASE WHEN JSON_TYPE(%s, %%s) IN (%s) \"\n-            \"THEN JSON_TYPE(%s, %%s) ELSE JSON_EXTRACT(%s, %%s) END)\"\n-        ) % (lhs, datatype_values, lhs, lhs), (tuple(params) + (json_path,)) * 3\n+        if isinstance(self.key_name, int):\n+            json_path = f\"{json_path[1:-1]}, '{self.key_name}'\"\n+        else:\n+            json_path = f\"{json_path[1:-1]}, \\\"{self.key_name}\\\"\"\n+        return \"JSON_EXTRACT(%s, %%s)\" % lhs, tuple(params) + (json_path,)\n \n \n class KeyTextTransform(KeyTransform):\n"
}