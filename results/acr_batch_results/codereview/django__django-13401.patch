{
  "patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 28374272f4..9d27f9b950 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -514,19 +514,17 @@ class Field(RegisterLookupMixin):\n         return self.__class__(*args, **kwargs)\n \n     def __eq__(self, other):\n-        # Needed for @total_ordering\n         if isinstance(other, Field):\n-            return self.creation_counter == other.creation_counter\n+            return (self.model, self.creation_counter) == (other.model, other.creation_counter)\n         return NotImplemented\n \n     def __lt__(self, other):\n-        # This is needed because bisect does not take a comparison function.\n         if isinstance(other, Field):\n-            return self.creation_counter < other.creation_counter\n+            return (self.model, self.creation_counter) < (other.model, other.creation_counter)\n         return NotImplemented\n \n     def __hash__(self):\n-        return hash(self.creation_counter)\n+        return hash((self.model, self.creation_counter))\n \n     def __deepcopy__(self, memodict):\n         # We don't have to deepcopy very much here, since most things are not\n"
}