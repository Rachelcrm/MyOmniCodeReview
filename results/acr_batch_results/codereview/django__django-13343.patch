{
  "patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex e10a5bb6d9..ec915f58ca 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -228,13 +228,6 @@ class FileField(Field):\n         self._primary_key_set_explicitly = 'primary_key' in kwargs\n \n         self.storage = storage or default_storage\n-        if callable(self.storage):\n-            self.storage = self.storage()\n-            if not isinstance(self.storage, Storage):\n-                raise TypeError(\n-                    \"%s.storage must be a subclass/instance of %s.%s\"\n-                    % (self.__class__.__qualname__, Storage.__module__, Storage.__qualname__)\n-                )\n         self.upload_to = upload_to\n \n         kwargs.setdefault('max_length', 100)\n@@ -279,7 +272,10 @@ class FileField(Field):\n             del kwargs[\"max_length\"]\n         kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n-            kwargs['storage'] = self.storage\n+            if callable(self.storage):\n+                kwargs['storage'] = self.storage\n+            else:\n+                kwargs['storage'] = self.storage\n         return name, path, args, kwargs\n \n     def get_internal_type(self):\n"
}