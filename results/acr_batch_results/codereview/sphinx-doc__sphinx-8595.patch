{
  "patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d85d79617..ba822086a 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1049,8 +1049,14 @@ class ModuleDocumenter(Documenter):\n             attr_docs = self.analyzer.attr_docs\n         else:\n             attr_docs = {}\n-\n+ \n         members = {}  # type: Dict[str, ObjectMember]\n+\n+        # Check if __all__ is set to an empty list\n+        all_members = safe_getattr(self.object, '__all__', None)\n+        if all_members is not None and len(all_members) == 0:\n+            return members\n+\n         for name in dir(self.object):\n             try:\n                 value = safe_getattr(self.object, name, None)\n@@ -1058,7 +1064,7 @@ class ModuleDocumenter(Documenter):\n                 members[name] = ObjectMember(name, value, docstring=\"\\n\".join(docstring))\n             except AttributeError:\n                 continue\n-\n+ \n         # annotation only member (ex. attr: int)\n         try:\n             for name in inspect.getannotations(self.object):\n@@ -1068,7 +1074,7 @@ class ModuleDocumenter(Documenter):\n                                                  docstring=\"\\n\".join(docstring))\n         except AttributeError:\n             pass\n-\n+ \n         return members\n \n     def get_object_members(self, want_all: bool) -> Tuple[bool, ObjectMembers]:\n"
}