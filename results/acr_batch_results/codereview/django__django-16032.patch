{
  "patch": "diff --git a/django/db/backends/mysql/compiler.py b/django/db/backends/mysql/compiler.py\nindex bd2715fb43..04e9435879 100644\n--- a/django/db/backends/mysql/compiler.py\n+++ b/django/db/backends/mysql/compiler.py\n@@ -7,15 +7,9 @@ class SQLCompiler(compiler.SQLCompiler):\n     def as_subquery_condition(self, alias, columns, compiler):\n         qn = compiler.quote_name_unless_alias\n         qn2 = self.connection.ops.quote_name\n+        col_exprs = [\"%s.%s\" % (qn(alias), qn2(column)) for column in columns]\n         sql, params = self.as_sql()\n-        return (\n-            \"(%s) IN (%s)\"\n-            % (\n-                \", \".join(\"%s.%s\" % (qn(alias), qn2(column)) for column in columns),\n-                sql,\n-            ),\n-            params,\n-        )\n+        return \"(%s) IN (%s)\" % (\", \".join(col_exprs), sql), params\n \n \n class SQLInsertCompiler(compiler.SQLInsertCompiler, SQLCompiler):\ndiff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 27310e5d9f..b684f3897a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1513,13 +1513,14 @@ class SQLCompiler:\n         qn = compiler.quote_name_unless_alias\n         qn2 = self.connection.ops.quote_name\n \n+        col_exprs = []\n         for index, select_col in enumerate(self.query.select):\n             lhs_sql, lhs_params = self.compile(select_col)\n             rhs = \"%s.%s\" % (qn(alias), qn2(columns[index]))\n             self.query.where.add(RawSQL(\"%s = %s\" % (lhs_sql, rhs), lhs_params), AND)\n-\n+            col_exprs.append(\"%s.%s\" % (qn(alias), qn2(columns[index])))\n         sql, params = self.as_sql()\n-        return \"EXISTS (%s)\" % sql, params\n+        return \"(%s) IN (%s)\" % (\", \".join(col_exprs), sql), params\n \n     def explain_query(self):\n         result = list(self.execute_sql())\n"
}