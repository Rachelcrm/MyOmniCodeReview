{
  "patch": "diff --git a/sphinx/builders/html/transforms.py b/sphinx/builders/html/transforms.py\nindex c91da57e9..3782bd4a7 100644\n--- a/sphinx/builders/html/transforms.py\n+++ b/sphinx/builders/html/transforms.py\n@@ -37,26 +37,29 @@ class KeyboardTransform(SphinxPostTransform):\n     \"\"\"\n     default_priority = 400\n     builders = ('html',)\n-    pattern = re.compile(r'(-|\\+|\\^|\\s+)')\n+    pattern = re.compile(r'(-|\\+|\\^|\\s+|(?<=[-+\\^])\\s+)')\n \n     def run(self, **kwargs: Any) -> None:\n         matcher = NodeMatcher(nodes.literal, classes=[\"kbd\"])\n         for node in self.document.traverse(matcher):  # type: nodes.literal\n-            parts = self.pattern.split(node[-1].astext())\n-            if len(parts) == 1:\n+            text = node[-1].astext()\n+            if '-' not in text and '+' not in text and '^' not in text:\n                 continue\n \n             node.pop()\n+            parts = text.split()\n             while parts:\n                 key = parts.pop(0)\n                 node += nodes.literal('', key, classes=[\"kbd\"])\n \n-                try:\n-                    # key separator (ex. -, +, ^)\n+                if parts:\n                     sep = parts.pop(0)\n-                    node += nodes.Text(sep)\n-                except IndexError:\n-                    pass\n+                    if sep in ['-', '+', '^']:\n+                        node += nodes.Text(sep)\n+                    else:\n+                        # Handle the case where the separator is not -, +, or ^\n+                        # This might not be necessary given the problem description\n+                        node += nodes.Text(sep)\n \n \n def setup(app: Sphinx) -> Dict[str, Any]:\n"
}