{
  "patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex fafc1beee8..56a9e8d216 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -46,7 +46,7 @@ class JSONField(CheckFieldDefaultMixin, Field):\n                 continue\n             connection = connections[db]\n             if not (\n-                'supports_json_field' in self.model._meta.required_db_features or\n+                'supports_json_field' in self.model.get_meta().required_db_features or\n                 connection.features.supports_json_field\n             ):\n                 errors.append(\n@@ -67,7 +67,7 @@ class JSONField(CheckFieldDefaultMixin, Field):\n             kwargs['decoder'] = self.decoder\n         return name, path, args, kwargs\n \n-    def from_db_value(self, value, expression, connection):\n+    def from_db_value(self, value, connection):\n         if value is None:\n             return value\n         if connection.features.has_native_json_field and self.decoder is None:\n@@ -103,23 +103,23 @@ class JSONField(CheckFieldDefaultMixin, Field):\n         super().validate(value, model_instance)\n         try:\n             json.dumps(value, cls=self.encoder)\n-        except TypeError:\n+        except TypeError as e:\n             raise exceptions.ValidationError(\n                 self.error_messages['invalid'],\n                 code='invalid',\n                 params={'value': value},\n-            )\n+            ) from e\n \n     def value_to_string(self, obj):\n         return self.value_from_object(obj)\n \n     def formfield(self, **kwargs):\n-        return super().formfield(**{\n-            'form_class': forms.JSONField,\n-            'encoder': self.encoder,\n-            'decoder': self.decoder,\n+        return super().formfield(\n+            form_class=forms.JSONField,\n+            encoder=self.encoder,\n+            decoder=self.decoder,\n             **kwargs,\n-        })\n+        )\n \n \n def compile_json_path(key_transforms, include_root=True):\n"
}