{
  "patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 851e4943b..467eae525 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -21,7 +21,7 @@ from _pytest.config import hookimpl\n from _pytest.fixtures import FixtureRequest\n from _pytest.nodes import Collector\n from _pytest.nodes import Item\n-from _pytest.outcomes import exit\n+from _pytest.outcomes import exit as pytest_exit\n from _pytest.outcomes import fail\n from _pytest.outcomes import skip\n from _pytest.outcomes import xfail\n@@ -50,7 +50,7 @@ def pytest_pycollect_makeitem(\n         # Type ignored because `ut` is an opaque module.\n         if not issubclass(obj, ut.TestCase):  # type: ignore\n             return None\n-    except Exception:\n+    except (ModuleNotFoundError, AttributeError):\n         return None\n     # Yes, so let's collect it.\n     item: UnitTestCase = UnitTestCase.from_parent(collector, name=name, obj=obj)\n@@ -136,7 +136,7 @@ def _make_xunit_fixture(\n         cleanup = getattr(obj, cleanup_name, lambda *args: None)\n     else:\n \n-        def cleanup(*args):\n+        def cleanup():\n             pass\n \n     @pytest.fixture(\n"
}