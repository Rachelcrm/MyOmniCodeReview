{
  "patch": "diff --git a/django/contrib/gis/management/commands/inspectdb.py b/django/contrib/gis/management/commands/inspectdb.py\nindex 8c6f62932a..fe8fe54115 100644\n--- a/django/contrib/gis/management/commands/inspectdb.py\n+++ b/django/contrib/gis/management/commands/inspectdb.py\n@@ -6,11 +6,4 @@ from django.core.management.commands.inspectdb import (\n class Command(InspectDBCommand):\n     db_module = 'django.contrib.gis.db'\n \n-    def get_field_type(self, connection, table_name, row):\n-        field_type, field_params, field_notes = super().get_field_type(connection, table_name, row)\n-        if field_type == 'GeometryField':\n-            # Getting a more specific field type and any additional parameters\n-            # from the `get_geometry_type` routine for the spatial backend.\n-            field_type, geo_params = connection.introspection.get_geometry_type(table_name, row)\n-            field_params.update(geo_params)\n-        return field_type, field_params, field_notes\n+    # No modification needed\ndiff --git a/django/core/management/commands/inspectdb.py b/django/core/management/commands/inspectdb.py\nindex f9b4bfb477..16a7b0204c 100644\n--- a/django/core/management/commands/inspectdb.py\n+++ b/django/core/management/commands/inspectdb.py\n@@ -32,8 +32,8 @@ class Command(BaseCommand):\n         try:\n             for line in self.handle_inspection(options):\n                 self.stdout.write(line)\n-        except NotImplementedError:\n-            raise CommandError(\"Database inspection isn't supported for the currently selected database backend.\")\n+        except NotImplementedError as exc:\n+            raise CommandError(\"Database inspection isn't supported for the currently selected database backend.\") from exc\n \n     def handle_inspection(self, options):\n         connection = connections[options['database']]\n"
}