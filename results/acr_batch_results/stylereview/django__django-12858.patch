{
  "patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 6c9e9d3707..cc3672a580 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -329,6 +329,7 @@ class ModelBase(type):\n \n     def _prepare(cls):\n         \"\"\"Create some methods once self._meta has been populated.\"\"\"\n+        # pylint: disable=protected-access\n         opts = cls._meta\n         opts._prepare(cls)\n \n@@ -406,6 +407,7 @@ class Model(metaclass=ModelBase):\n     def __init__(self, *args, **kwargs):\n         # Alias some things as locals to avoid repeat global lookups\n         cls = self.__class__\n+        # pylint: disable=protected-access\n         opts = self._meta\n         _setattr = setattr\n         _DEFERRED = DEFERRED\n@@ -504,6 +506,7 @@ class Model(metaclass=ModelBase):\n \n     @classmethod\n     def from_db(cls, db, field_names, values):\n+        # pylint: disable=protected-access\n         if len(values) != len(cls._meta.concrete_fields):\n             values_iter = iter(values)\n             values = [\n@@ -511,7 +514,9 @@ class Model(metaclass=ModelBase):\n                 for f in cls._meta.concrete_fields\n             ]\n         new = cls(*values)\n+        # pylint: disable=protected-access\n         new._state.adding = False\n+        # pylint: disable=protected-access\n         new._state.db = db\n         return new\n \n"
}