{
  "patch": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex d73d1c8495..d9bcd17ab0 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -110,8 +110,8 @@ class UserCreationForm(forms.ModelForm):\n \n     def __init__(self, *args, **kwargs):\n         super().__init__(*args, **kwargs)\n-        if self._meta.model.USERNAME_FIELD in self.fields:\n-            self.fields[self._meta.model.USERNAME_FIELD].widget.attrs[\n+        if type(self).Meta.model.USERNAME_FIELD in self.fields:\n+            self.fields[type(self).Meta.model.USERNAME_FIELD].widget.attrs[\n                 \"autofocus\"\n             ] = True\n \n@@ -194,7 +194,7 @@ class AuthenticationForm(forms.Form):\n         \"inactive\": _(\"This account is inactive.\"),\n     }\n \n-    def __init__(self, request=None, *args, **kwargs):\n+    def __init__(self, *args, request=None, **kwargs):\n         \"\"\"\n         The 'request' parameter is set for custom auth use by subclasses.\n         The form data comes in via the standard 'data' kwarg.\n@@ -293,7 +293,7 @@ class PasswordResetForm(forms.Form):\n         resetting their password.\n         \"\"\"\n         email_field_name = UserModel.get_email_field_name()\n-        active_users = UserModel._default_manager.filter(\n+        active_users = UserModel.objects.filter(\n             **{\n                 \"%s__iexact\" % email_field_name: email,\n                 \"is_active\": True,\n@@ -481,7 +481,6 @@ class AdminPasswordChangeForm(forms.Form):\n     @property\n     def changed_data(self):\n         data = super().changed_data\n-        for name in self.fields:\n-            if name not in data:\n-                return []\n-        return [\"password\"]\n+        if not data:\n+            return []\n+        return [name for name in self.fields if name not in data or name == \"password\"]\n"
}