{
  "patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 137e6faa0f..e7d310c83c 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -120,13 +120,14 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n     def check(self, **kwargs):\n         return self.checks_class().check(self, **kwargs)\n \n-    def __init__(self):\n+    def __init__(self, admin_site):\n         # Merge FORMFIELD_FOR_DBFIELD_DEFAULTS with the formfield_overrides\n         # rather than simply overwriting.\n         overrides = copy.deepcopy(FORMFIELD_FOR_DBFIELD_DEFAULTS)\n         for k, v in self.formfield_overrides.items():\n             overrides.setdefault(k, {}).update(v)\n         self.formfield_overrides = overrides\n+        self.admin_site = admin_site\n \n     def formfield_for_dbfield(self, db_field, request, **kwargs):\n         \"\"\"\n@@ -160,7 +161,7 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # rendered output. formfield can be None if it came from a\n             # OneToOneField with parent_link=True or a M2M intermediary.\n             if formfield and db_field.name not in self.raw_id_fields:\n-                related_modeladmin = self.admin_site._registry.get(db_field.remote_field.model)\n+                related_modeladmin = self.admin_site._registry.get(db_field.remote_field.model) if self.admin_site else None\n                 wrapper_kwargs = {}\n                 if related_modeladmin:\n                     wrapper_kwargs.update(\n@@ -209,7 +210,7 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n         ordering.  Otherwise don't specify the queryset, let the field decide\n         (return None in that case).\n         \"\"\"\n-        related_admin = self.admin_site._registry.get(db_field.remote_field.model)\n+        related_admin = self.admin_site._registry.get(db_field.remote_field.model) if self.admin_site else None\n         if related_admin is not None:\n             ordering = related_admin.get_ordering(request)\n             if ordering is not None and ordering != ():\n"
}