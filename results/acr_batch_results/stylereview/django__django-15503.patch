{
  "patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex fdca700c9d..97c0f6bc56 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -75,7 +75,7 @@ class JSONField(CheckFieldDefaultMixin, Field):\n             kwargs[\"decoder\"] = self.decoder\n         return name, path, args, kwargs\n \n-    def from_db_value(self, value, expression, connection):\n+    def from_db_value(self, value, expression, connection, *, context=None):\n         if value is None:\n             return value\n         # Some backends (SQLite at least) extract non-string values in their\n@@ -105,12 +105,12 @@ class JSONField(CheckFieldDefaultMixin, Field):\n         super().validate(value, model_instance)\n         try:\n             json.dumps(value, cls=self.encoder)\n-        except TypeError:\n+        except TypeError as exc:\n             raise exceptions.ValidationError(\n                 self.error_messages[\"invalid\"],\n                 code=\"invalid\",\n                 params={\"value\": value},\n-            )\n+            ) from exc\n \n     def value_to_string(self, obj):\n         return self.value_from_object(obj)\n"
}