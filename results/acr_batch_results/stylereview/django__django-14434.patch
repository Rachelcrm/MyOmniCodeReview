{
  "patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex ad2f5a7da1..08e00648d6 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -96,12 +96,12 @@ class BaseDatabaseSchemaEditor:\n \n     sql_delete_procedure = 'DROP PROCEDURE %(procedure)s'\n \n-    def __init__(self, connection, collect_sql=False, atomic=True):\n+    def __init__(self, connection, collect_sql=False, atomic_migration=True):\n         self.connection = connection\n         self.collect_sql = collect_sql\n         if self.collect_sql:\n             self.collected_sql = []\n-        self.atomic_migration = self.connection.features.can_rollback_ddl and atomic\n+        self.atomic_migration = self.connection.features.can_rollback_ddl and atomic_migration\n \n     # State-managing methods\n \n@@ -259,14 +259,14 @@ class BaseDatabaseSchemaEditor:\n         # Return the sql\n         return sql, params\n \n-    def skip_default(self, field):\n+    def skip_default(self, field=None):\n         \"\"\"\n         Some backends don't accept default values for certain columns types\n         (i.e. MySQL longtext and longblob).\n         \"\"\"\n         return False\n \n-    def skip_default_on_alter(self, field):\n+    def skip_default_on_alter(self, field=None):\n         \"\"\"\n         Some backends don't accept default values for certain columns types\n         (i.e. MySQL longtext and longblob) in the ALTER COLUMN statement.\n@@ -282,7 +282,7 @@ class BaseDatabaseSchemaEditor:\n             'requires_literal_defaults must provide a prepare_default() method'\n         )\n \n-    def _column_default_sql(self, field):\n+    def _column_default_sql(self, field=None):\n         \"\"\"\n         Return the SQL to use in a DEFAULT clause. The resulting string should\n         contain a '%s' placeholder for a default value.\n"
}