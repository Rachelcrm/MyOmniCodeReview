{
  "patch": "diff --git a/sympy/stats/crv.py b/sympy/stats/crv.py\nindex 6efd5571e8..076843ae2c 100644\n--- a/sympy/stats/crv.py\n+++ b/sympy/stats/crv.py\n@@ -165,7 +165,7 @@ def __new__(cls, *args):\n         return Basic.__new__(cls, *args)\n \n     @staticmethod\n-    def check(*args):\n+    def check(self, *args):\n         pass\n \n     def sample(self):\ndiff --git a/sympy/stats/crv_types.py b/sympy/stats/crv_types.py\nindex fff7da80ae..a36db56391 100644\n--- a/sympy/stats/crv_types.py\n+++ b/sympy/stats/crv_types.py\n@@ -100,7 +100,7 @@\n \n \n \n-def ContinuousRV(symbol, density, set=Interval(-oo, oo)):\n+def ContinuousRV(symbol, density, interval=Interval(-oo, oo)):\n     \"\"\"\n     Create a Continuous Random Variable given the following:\n \n@@ -130,7 +130,7 @@ def ContinuousRV(symbol, density, set=Interval(-oo, oo)):\n     1/2\n     \"\"\"\n     pdf = Lambda(symbol, density)\n-    dist = ContinuousDistributionHandmade(pdf, set)\n+    dist = ContinuousDistributionHandmade(pdf, interval)\n     return SingleContinuousPSpace(symbol, dist).value\n \n def rv(symbol, cls, args):\n@@ -1785,6 +1785,7 @@ class NormalDistribution(SingleContinuousDistribution):\n     @staticmethod\n     def check(mean, std):\n         _value_check(std > 0, \"Standard deviation must be positive\")\n+        # Consider adding additional checks or using mean\n \n     def pdf(self, x):\n         return exp(-(x - self.mean)**2 / (2*self.std**2)) / (sqrt(2*pi)*self.std)\n"
}