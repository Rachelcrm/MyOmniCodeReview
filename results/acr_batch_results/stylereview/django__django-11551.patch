{
  "patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex f82c20c2f1..ef7403eda0 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -46,7 +46,7 @@ def _contains_subclass(class_path, candidate_paths):\n     return False\n \n \n-def check_admin_app(app_configs, **kwargs):\n+def check_admin_app(app_configs):\n     from django.contrib.admin.sites import all_sites\n     errors = []\n     for site in all_sites:\n@@ -54,7 +54,7 @@ def check_admin_app(app_configs, **kwargs):\n     return errors\n \n \n-def check_dependencies(**kwargs):\n+def check_dependencies():\n     \"\"\"\n     Check that the admin's dependencies are correctly installed.\n     \"\"\"\n@@ -128,7 +128,7 @@ def check_dependencies(**kwargs):\n \n class BaseModelAdminChecks:\n \n-    def check(self, admin_obj, **kwargs):\n+    def check(self, admin_obj):\n         return [\n             *self._check_autocomplete_fields(admin_obj),\n             *self._check_raw_id_fields(admin_obj),\n@@ -164,7 +164,7 @@ class BaseModelAdminChecks:\n         search_fields defined.\n         \"\"\"\n         try:\n-            field = obj.model._meta.get_field(field_name)\n+            field = obj.model.get_field(field_name)\n         except FieldDoesNotExist:\n             return refer_to_missing_field(field=field_name, option=label, obj=obj, id='admin.E037')\n         else:\n@@ -174,6 +174,7 @@ class BaseModelAdminChecks:\n                     option=label, obj=obj, id='admin.E038'\n                 )\n             related_admin = obj.admin_site._registry.get(field.remote_field.model)\n+            # No change needed, but we should ensure that _registry is accessed through the admin_site\n             if related_admin is None:\n                 return [\n                     checks.Error(\n@@ -218,7 +219,7 @@ class BaseModelAdminChecks:\n         ManyToManyField. \"\"\"\n \n         try:\n-            field = obj.model._meta.get_field(field_name)\n+            field = obj.model.get_field(field_name)\n         except FieldDoesNotExist:\n             return refer_to_missing_field(field=field_name, option=label, obj=obj, id='admin.E002')\n         else:\n@@ -523,7 +524,7 @@ class BaseModelAdminChecks:\n         `field_name` is \"title\". \"\"\"\n \n         try:\n-            obj.model._meta.get_field(field_name)\n+            obj.model.get_field(field_name)\n         except FieldDoesNotExist:\n             return refer_to_missing_field(field=field_name, option=label, obj=obj, id='admin.E030')\n         else:\n"
}