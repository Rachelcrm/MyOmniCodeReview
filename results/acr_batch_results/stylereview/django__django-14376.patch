{
  "patch": "diff --git a/django/db/backends/mysql/base.py b/django/db/backends/mysql/base.py\nindex 2c62182d31..d94e720a9f 100644\n--- a/django/db/backends/mysql/base.py\n+++ b/django/db/backends/mysql/base.py\n@@ -75,7 +75,7 @@ class CursorWrapper:\n             # Map some error codes to IntegrityError, since they seem to be\n             # misclassified and Django would prefer the more logical place.\n             if e.args[0] in self.codes_for_integrityerror:\n-                raise IntegrityError(*tuple(e.args))\n+                raise IntegrityError(*tuple(e.args)) from e\n             raise\n \n     def executemany(self, query, args):\n@@ -85,7 +85,7 @@ class CursorWrapper:\n             # Map some error codes to IntegrityError, since they seem to be\n             # misclassified and Django would prefer the more logical place.\n             if e.args[0] in self.codes_for_integrityerror:\n-                raise IntegrityError(*tuple(e.args))\n+                raise IntegrityError(*tuple(e.args)) from e\n             raise\n \n     def __getattr__(self, attr):\n@@ -392,7 +392,7 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n     def mysql_version(self):\n         match = server_version_re.match(self.mysql_server_info)\n         if not match:\n-            raise Exception('Unable to determine MySQL version from version string %r' % self.mysql_server_info)\n+            raise DatabaseError('Unable to determine MySQL version from version string %r' % self.mysql_server_info)\n         return tuple(int(x) for x in match.groups())\n \n     @cached_property\n"
}