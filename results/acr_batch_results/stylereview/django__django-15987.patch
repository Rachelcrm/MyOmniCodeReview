{
  "patch": "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py\nindex ac97f13161..257151d977 100644\n--- a/django/core/management/commands/loaddata.py\n+++ b/django/core/management/commands/loaddata.py\n@@ -197,7 +197,7 @@ class Command(BaseCommand):\n     def save_obj(self, obj):\n         \"\"\"Save an object if permitted.\"\"\"\n         if (\n-            obj.object._meta.app_config in self.excluded_apps\n+            obj.object.__class__._meta.app_config in self.excluded_apps\n             or type(obj.object) in self.excluded_models\n         ):\n             return False\n@@ -207,12 +207,12 @@ class Command(BaseCommand):\n             self.models.add(obj.object.__class__)\n             try:\n                 obj.save(using=self.using)\n-            # psycopg2 raises ValueError if data contains NUL chars.\n+                # psycopg2 raises ValueError if data contains NUL chars.\n             except (DatabaseError, IntegrityError, ValueError) as e:\n                 e.args = (\n                     \"Could not load %(object_label)s(pk=%(pk)s): %(error_msg)s\"\n                     % {\n-                        \"object_label\": obj.object._meta.label,\n+                        \"object_label\": obj.object.__class__._meta.label,\n                         \"pk\": obj.object.pk,\n                         \"error_msg\": e,\n                     },\n@@ -424,7 +424,7 @@ class SingleZipReader(zipfile.ZipFile):\n         if len(self.namelist()) != 1:\n             raise ValueError(\"Zip-compressed fixtures must contain one file.\")\n \n-    def read(self):\n+    def read(self, *args, **kwargs):\n         return zipfile.ZipFile.read(self, self.namelist()[0])\n \n \n"
}