{
  "patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..2752cd9aa0 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -84,11 +84,11 @@ class View:\n \n     def setup(self, request, *args, **kwargs):\n         \"\"\"Initialize attributes shared by all view methods.\"\"\"\n-        if hasattr(self, 'get') and not hasattr(self, 'head'):\n-            self.head = self.get\n         self.request = request\n         self.args = args\n         self.kwargs = kwargs\n+        if hasattr(self, 'get') and not hasattr(self, 'head'):\n+            self.head = self.get\n \n     def dispatch(self, request, *args, **kwargs):\n         # Try to dispatch to the right method; if a method doesn't exist,\n@@ -100,14 +100,14 @@ class View:\n             handler = self.http_method_not_allowed\n         return handler(request, *args, **kwargs)\n \n-    def http_method_not_allowed(self, request, *args, **kwargs):\n+    def http_method_not_allowed(self, request):\n         logger.warning(\n             'Method Not Allowed (%s): %s', request.method, request.path,\n             extra={'status_code': 405, 'request': request}\n         )\n         return HttpResponseNotAllowed(self._allowed_methods())\n \n-    def options(self, request, *args, **kwargs):\n+    def options(self, request):\n         \"\"\"Handle responding to requests for the OPTIONS HTTP verb.\"\"\"\n         response = HttpResponse()\n         response['Allow'] = ', '.join(self._allowed_methods())\n"
}