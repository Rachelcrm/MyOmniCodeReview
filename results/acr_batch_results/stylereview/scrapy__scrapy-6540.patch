{
  "patch": "diff --git a/scrapy/core/downloader/contextfactory.py b/scrapy/core/downloader/contextfactory.py\nindex f80f832a7..c367376ef 100644\n--- a/scrapy/core/downloader/contextfactory.py\n+++ b/scrapy/core/downloader/contextfactory.py\n@@ -50,17 +50,14 @@ class ScrapyClientContextFactory(BrowserLikePolicyForHTTPS):\n         method: int = SSL.SSLv23_METHOD,\n         tls_verbose_logging: bool = False,\n         tls_ciphers: str | None = None,\n-        *args: Any,\n-        **kwargs: Any,\n-    ):\n-        super().__init__(*args, **kwargs)\n+    ) -> None:\n         self._ssl_method: int = method\n         self.tls_verbose_logging: bool = tls_verbose_logging\n-        self.tls_ciphers: AcceptableCiphers\n-        if tls_ciphers:\n-            self.tls_ciphers = AcceptableCiphers.fromOpenSSLCipherString(tls_ciphers)\n-        else:\n-            self.tls_ciphers = DEFAULT_CIPHERS\n+        self.tls_ciphers: AcceptableCiphers = (\n+            AcceptableCiphers.fromOpenSSLCipherString(tls_ciphers)\n+            if tls_ciphers\n+            else DEFAULT_CIPHERS\n+        )\n \n     @classmethod\n     def from_settings(\ndiff --git a/scrapy/dupefilters.py b/scrapy/dupefilters.py\nindex d37d2741a..c45180f4e 100644\n--- a/scrapy/dupefilters.py\n+++ b/scrapy/dupefilters.py\n@@ -63,7 +63,7 @@ class RFPDupeFilter(BaseDupeFilter):\n         if path:\n             self.file = Path(path, \"requests.seen\").open(\"a+\", encoding=\"utf-8\")\n             self.file.seek(0)\n-            self.fingerprints.update(x.rstrip() for x in self.file)\n+            self.fingerprints.update(x.rstrip() for x in self.file.readlines())\n \n     @classmethod\n     def from_settings(\n"
}