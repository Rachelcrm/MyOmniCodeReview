{
  "patch": "diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py\nindex 7dcc77b46c..cd94846224 100644\n--- a/django/utils/translation/trans_real.py\n+++ b/django/utils/translation/trans_real.py\n@@ -92,12 +92,18 @@ class TranslationCatalog:\n     def update(self, trans):\n         # Merge if plural function is the same, else prepend.\n         for cat, plural in zip(self._catalogs, self._plurals):\n-            if trans.plural.__code__ == plural.__code__:\n-                cat.update(trans._catalog)\n+            if getattr(trans, 'plural', None) and trans.plural.__code__ == plural.__code__:\n+                if hasattr(trans, 'catalog'):\n+                    cat.update(trans.catalog)\n+                else:\n+                    cat.update(trans._catalog)\n                 break\n         else:\n-            self._catalogs.insert(0, trans._catalog.copy())\n-            self._plurals.insert(0, trans.plural)\n+            if hasattr(trans, 'catalog'):\n+                self._catalogs.insert(0, trans.catalog.copy())\n+            else:\n+                self._catalogs.insert(0, trans._catalog.copy())\n+            self._plurals.insert(0, getattr(trans, 'plural', lambda n: int(n != 1)))\n \n     def get(self, key, default=None):\n         missing = object()\n@@ -185,23 +191,24 @@ class DjangoTranslation(gettext_module.GNUTranslations):\n         \"\"\"Create a base catalog using global django translations.\"\"\"\n         settingsfile = sys.modules[settings.__module__].__file__\n         localedir = os.path.join(os.path.dirname(settingsfile), 'locale')\n-        translation = self._new_gnu_trans(localedir)\n-        self.merge(translation)\n+        django_translation = self._new_gnu_trans(localedir)\n+        self.merge(django_translation)\n \n     def _add_installed_apps_translations(self):\n         \"\"\"Merge translations from each installed app.\"\"\"\n         try:\n             app_configs = reversed(list(apps.get_app_configs()))\n-        except AppRegistryNotReady:\n+        except AppRegistryNotReady as exc:\n             raise AppRegistryNotReady(\n                 \"The translation infrastructure cannot be initialized before the \"\n                 \"apps registry is ready. Check that you don't make non-lazy \"\n-                \"gettext calls at import time.\")\n+                \"gettext calls at import time.\"\n+            ) from exc\n         for app_config in app_configs:\n             localedir = os.path.join(app_config.path, 'locale')\n             if os.path.exists(localedir):\n-                translation = self._new_gnu_trans(localedir)\n-                self.merge(translation)\n+                app_translation = self._new_gnu_trans(localedir)\n+                self.merge(app_translation)\n \n     def _add_local_translations(self):\n         \"\"\"Merge translations defined in LOCALE_PATHS.\"\"\"\n"
}