{
  "patch": "To address the issue of adding joblib to the dependencies listed in `show_versions` when the sklearn version is greater than 0.20, we need to modify the `_get_deps_info` function in `sklearn/utils/_show_versions.py`. This function is responsible for gathering version information about the main dependencies.\n\nThe current implementation of `_get_deps_info` includes a list of dependencies but does not conditionally add joblib based on the sklearn version. We need to import the necessary modules, specifically `sklearn` and `LooseVersion` from `distutils.version`, to compare the sklearn version.\n\nHere's how we can modify the code:\n\n```\n<file>sklearn/utils/_show_versions.py</file>\n<original>\n33 def _get_deps_info():\n34     \"\"\"Overview of the installed version of main dependencies\n35 \n36     Returns\n37     -------\n38     deps_info: dict\n39         version information on relevant Python libraries\n40 \n41     \"\"\"\n42     deps = [\n43         \"pip\",\n44         \"setuptools\",\n45         \"sklearn\",\n46         \"numpy\",\n47         \"scipy\",\n48         \"Cython\",\n49         \"pandas\",\n50         \"matplotlib\",\n51     ]\n52 \n53     def get_version(module):\n54         return module.__version__\n55 \n56     deps_info = {}\n57 \n58     for modname in deps:\n59         try:\n60             if modname in sys.modules:\n61                 mod = sys.modules[modname]\n62             else:\n63                 mod = importlib.import_module(modname)\n64             ver = get_version(mod)\n65             deps_info[modname] = ver\n66         except ImportError:\n67             deps_info[modname] = None\n68 \n69     return deps_info\n</original>\n<patched>\n33 def _get_deps_info():\n34     \"\"\"Overview of the installed version of main dependencies\n35 \n36     Returns\n37     -------\n38     deps_info: dict\n39         version information on relevant Python libraries\n40 \n41     \"\"\"\n42     import sklearn\n43     from distutils.version import LooseVersion\n44 \n45     deps = [\n46         \"pip\",\n47         \"setuptools\",\n48         \"sklearn\",\n49         \"numpy\",\n50         \"scipy\",\n51         \"Cython\",\n52         \"pandas\",\n53         \"matplotlib\",\n54     ]\n55 \n56     if LooseVersion(sklearn.__version__) > LooseVersion('0.20'):\n57         deps.append('joblib')\n58 \n59     def get_version(module):\n60         return module.__version__\n61 \n62     deps_info = {}\n63 \n64     for modname in deps:\n65         try:\n66             if modname in sys.modules:\n67                 mod = sys.modules[modname]\n68             else:\n69                 mod = importlib.import_module(modname)\n70             ver = get_version(mod)\n71             deps_info[modname] = ver\n72         except ImportError:\n73             deps_info[modname] = None\n74 \n75     return deps_info\n</patched>\n```\n\nThis modification checks if the sklearn version is greater than 0.20 and appends 'joblib' to the list of dependencies if the condition is met. This ensures that joblib is included in the dependencies listed in `show_versions` when the sklearn version exceeds 0.20. \n\nNo additional modifications are necessary for the `show_versions` function itself, as the updated `_get_deps_info` function will handle the inclusion of joblib based on the sklearn version."
}