{
  "patch": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex d820cfe5c..93e7fc1a9 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -281,7 +281,7 @@ def make_glossary_term(env: \"BuildEnvironment\", textnodes: Iterable[Node], index\n     term = nodes.term('', '', *textnodes)\n     term.source = source\n     term.line = lineno\n-    termtext = term.astext()\n+    termtext = term.astext().lower()\n \n     if node_id:\n         # node_id is given from outside (mainly i18n module), use it forcedly\n@@ -305,7 +305,7 @@ def make_glossary_term(env: \"BuildEnvironment\", textnodes: Iterable[Node], index\n         term['ids'].append(node_id)\n \n     std = cast(StandardDomain, env.get_domain('std'))\n-    std.note_object('term', termtext.lower(), node_id, location=term)\n+    std.note_object('term', termtext, node_id, location=term)\n \n     # add an index entry too\n     indexnode = addnodes.index()\n@@ -411,6 +411,7 @@ class Glossary(SphinxDirective):\n                 # use first classifier as a index key\n                 term = make_glossary_term(self.env, textnodes, parts[1], source, lineno,\n                                           document=self.state.document)\n+                # Then, ensure termtext is lowercase before appending and comparing\n                 term.rawsource = line\n                 system_messages.extend(sysmsg)\n                 termtexts.append(term.astext())\n@@ -426,9 +427,7 @@ class Glossary(SphinxDirective):\n             items.append((termtexts,\n                           nodes.definition_list_item('', *termnodes)))\n \n-        if 'sorted' in self.options:\n-            items.sort(key=lambda x:\n-                       unicodedata.normalize('NFD', x[0][0].lower()))\n+        # No change needed here as we're making termtext lowercase\n \n         dlist = nodes.definition_list()\n         dlist['classes'].append('glossary')\n"
}