{
  "patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex c5d87f647a..8c478a7b5c 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -791,6 +791,10 @@ def create_reverse_many_to_one_manager(superclass, rel):\n             db = router.db_for_write(self.model, instance=self.instance)\n             return super(RelatedManager, self.db_manager(db)).create(**kwargs)\n \n+        async def acreate(self, **kwargs):\n+            return await sync_to_async(self.create)(**kwargs)\n+        acreate.alters_data = True\n+\n         create.alters_data = True\n \n         def get_or_create(self, **kwargs):\n@@ -799,6 +803,10 @@ def create_reverse_many_to_one_manager(superclass, rel):\n             db = router.db_for_write(self.model, instance=self.instance)\n             return super(RelatedManager, self.db_manager(db)).get_or_create(**kwargs)\n \n+        async def aget_or_create(self, **kwargs):\n+            return await sync_to_async(self.get_or_create)(**kwargs)\n+        aget_or_create.alters_data = True\n+\n         get_or_create.alters_data = True\n \n         def update_or_create(self, **kwargs):\n@@ -807,6 +815,10 @@ def create_reverse_many_to_one_manager(superclass, rel):\n             db = router.db_for_write(self.model, instance=self.instance)\n             return super(RelatedManager, self.db_manager(db)).update_or_create(**kwargs)\n \n+        async def aupdate_or_create(self, **kwargs):\n+            return await sync_to_async(self.update_or_create)(**kwargs)\n+        aupdate_or_create.alters_data = True\n+\n         update_or_create.alters_data = True\n \n         # remove() and clear() are only provided if the ForeignKey can have a\n"
}