{
  "patch": "diff --git a/keras/src/ops/numpy.py b/keras/src/ops/numpy.py\nindex cfdcfa7fa..45e91caef 100644\n--- a/keras/src/ops/numpy.py\n+++ b/keras/src/ops/numpy.py\n@@ -2,6 +2,7 @@ import builtins\n import re\n \n import numpy as np\n+import re\n \n from keras.src import backend\n from keras.src.api_export import keras_export\n@@ -2230,6 +2231,46 @@ class Diff(Operation):\n \n     def call(self, a):\n         return backend.numpy.diff(a, n=self.n, axis=self.axis)\n+    \n+    \n+    class Rearrange(Operation):\n+        def __init__(self, pattern):\n+            super().__init__()\n+            self.pattern = pattern\n+    \n+        def call(self, x):\n+            return backend.numpy.rearrange(x, self.pattern)\n+    \n+        def compute_output_spec(self, x):\n+            output_shape = backend.numpy.compute_rearrange_output_shape(\n+                x.shape, self.pattern\n+            )\n+            return KerasTensor(output_shape, dtype=x.dtype)\n+    \n+    \n+    @keras_export([\"keras.ops.rearrange\", \"keras.ops.numpy.rearrange\"])\n+    def rearrange(x, pattern):\n+        \"\"\"Rearrange a tensor based on the given pattern.\n+    \n+        Args:\n+            x: Input tensor.\n+            pattern: A string specifying the rearrangement operation.\n+    \n+        Returns:\n+            The rearranged tensor.\n+    \n+        Example:\n+            >>> x = keras.ops.convert_to_tensor([[[1, 2], [3, 4]]])\n+            >>> keras.ops.rearrange(x, \"(a,b,c)->(b,a,c)\")\n+            array([[[1, 2],\n+                    [3, 4]],\n+    \n+                    [[1, 2],\n+                    [3, 4]]])\n+        \"\"\"\n+        if any_symbolic_tensors((x,)):\n+            return Rearrange(pattern).symbolic_call(x)\n+        return backend.numpy.rearrange(x, pattern)\n \n     def compute_output_spec(self, a):\n         shape = list(a.shape)\n"
}