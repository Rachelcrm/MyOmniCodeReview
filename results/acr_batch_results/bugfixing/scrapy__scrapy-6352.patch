{
  "patch": "diff --git a/scrapy/core/downloader/__init__.py b/scrapy/core/downloader/__init__.py\nindex 98e1af6fb..a854f659e 100644\n--- a/scrapy/core/downloader/__init__.py\n+++ b/scrapy/core/downloader/__init__.py\n@@ -125,7 +125,7 @@ class Downloader:\n         return len(self.active) >= self.total_concurrency\n \n     def _get_slot(self, request: Request, spider: Spider) -> Tuple[str, Slot]:\n-        key = self._get_slot_key(request, spider)\n+        key = self._get_slot_key(request)\n         if key not in self.slots:\n             slot_settings = self.per_slot_settings.get(key, {})\n             conc = (\n@@ -143,7 +143,13 @@ class Downloader:\n \n         return key, self.slots[key]\n \n-    def _get_slot_key(self, request: Request, spider: Optional[Spider]) -> str:\n+    def _get_slot_key(self, request: Request, spider: Optional[Spider] = None) -> str:\n+        if spider is not None:\n+            warnings.warn(\n+                \"The spider argument to _get_slot_key is deprecated\",\n+                DeprecationWarning,\n+                stacklevel=2,\n+            )\n         if self.DOWNLOAD_SLOT in request.meta:\n             return cast(str, request.meta[self.DOWNLOAD_SLOT])\n \n@@ -153,6 +159,9 @@ class Downloader:\n \n         return key\n \n+    def get_slot_key(self, request: Request) -> str:\n+        return self._get_slot_key(request)\n+\n     def _enqueue_request(self, request: Request, spider: Spider) -> Deferred:\n         key, slot = self._get_slot(request, spider)\n         request.meta[self.DOWNLOAD_SLOT] = key\n"
}