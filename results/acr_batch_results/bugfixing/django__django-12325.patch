{
  "patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex a375f6ba1d..c65cf1de97 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -246,18 +246,33 @@ class Options:\n                 # Look for a local field with the same name as the\n                 # first parent link. If a local field has already been\n                 # created, use it instead of promoting the parent\n-                already_created = [fld for fld in self.local_fields if fld.name == field.name]\n-                if already_created:\n-                    field = already_created[0]\n-                field.primary_key = True\n-                self.setup_pk(field)\n-                if not field.remote_field.parent_link:\n-                    raise ImproperlyConfigured(\n-                        'Add parent_link=True to %s.' % field,\n-                    )\n-            else:\n-                auto = AutoField(verbose_name='ID', primary_key=True, auto_created=True)\n-                model.add_to_class('id', auto)\n+                for parent_link in self.parents.values():\n+                    # Look for a local field with the same name as the\n+                    # first parent link. If a local field has already been\n+                    # created, use it instead of promoting the parent\n+                    already_created = [fld for fld in self.local_fields if fld.name == parent_link.name]\n+                    if already_created:\n+                        field = already_created[0]\n+                        if field.remote_field.parent_link:\n+                            field.primary_key = True\n+                            self.setup_pk(field)\n+                            break\n+                        else:\n+                            raise ImproperlyConfigured(\n+                                'Add parent_link=True to %s.' % field,\n+                            )\n+                    else:\n+                        field = parent_link\n+                        field.primary_key = True\n+                        self.setup_pk(field)\n+                        if not field.remote_field.parent_link:\n+                            raise ImproperlyConfigured(\n+                                'Add parent_link=True to %s.' % field,\n+                            )\n+                        break\n+                else:\n+                    auto = AutoField(verbose_name='ID', primary_key=True, auto_created=True)\n+                    model.add_to_class('id', auto)\n \n     def add_manager(self, manager):\n         self.local_managers.append(manager)\n"
}