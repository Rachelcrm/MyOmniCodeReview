{
  "patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 29e33c075f..48a5346881 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1407,7 +1407,21 @@ class SQLInsertCompiler(SQLCompiler):\n class SQLDeleteCompiler(SQLCompiler):\n     @cached_property\n     def single_alias(self):\n-        return sum(self.query.alias_refcount[t] > 0 for t in self.query.alias_map) == 1\n+        # Check if this is a simple delete operation on a single table without joins\n+        # If there are no joins and only the base table is involved, use simple DELETE syntax\n+        if not self.query.alias_map:\n+            return True\n+        \n+        # Count tables that are actually used (have positive refcount)\n+        used_aliases = sum(self.query.alias_refcount[t] > 0 for t in self.query.alias_map)\n+        \n+        # For a single table delete, we should have exactly one used alias\n+        # and it should be the base table with no joins\n+        if used_aliases == 1:\n+            # Additional check: ensure there are no joins\n+            return len(self.query.alias_map) == 1\n+        \n+        return False\n \n     def _as_sql(self, query):\n         result = [\n"
}