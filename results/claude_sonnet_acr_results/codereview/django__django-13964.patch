{
  "patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..04b1981b1a 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -254,7 +254,16 @@ class ForwardManyToOneDescriptor:\n         # Set the values of the related field.\n         else:\n             for lh_field, rh_field in self.field.related_fields:\n-                setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+                pk_val = getattr(value, rh_field.attname)\n+                # Don't set the foreign key if the related object's primary key\n+                # is effectively unset (empty string for CharField primary keys\n+                # that don't allow empty strings)\n+                if (pk_val == '' and \n+                    hasattr(rh_field, 'empty_strings_allowed') and \n+                    not rh_field.empty_strings_allowed):\n+                    # Skip setting the foreign key value for unset CharField primary keys\n+                    continue\n+                setattr(instance, lh_field.attname, pk_val)\n \n         # Set the related instance cache used by __get__ to avoid an SQL query\n         # when accessing the attribute we just set.\n"
}