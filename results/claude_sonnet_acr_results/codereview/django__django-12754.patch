{
  "patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 30616c0172..c75d65354b 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -571,6 +571,22 @@ class MigrationAutodetector:\n                     None,\n                     True\n                 ))\n+            \n+            # Check for field name conflicts with base classes\n+            # If a field is being removed from a base class and the new model\n+            # has a field with the same name, we need to ensure the RemoveField\n+            # operation happens before the CreateModel operation\n+            removed_field_keys = self.old_field_keys - self.new_field_keys\n+            for base in model_state.bases:\n+                if isinstance(base, str) and \".\" in base:\n+                    base_app_label, base_name = base.split(\".\", 1)\n+                    # Check if any field in the new model conflicts with fields\n+                    # being removed from this base class\n+                    for field_name in model_state.fields:\n+                        if (base_app_label, base_name, field_name) in removed_field_keys:\n+                            # Add dependency to ensure RemoveField happens first\n+                            dependencies.append((base_app_label, base_name, field_name, False))\n+            \n             # Generate creation operation\n             self.add_operation(\n                 app_label,\n"
}