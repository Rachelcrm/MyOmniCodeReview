{
  "patch": "diff --git a/sympy/printing/conventions.py b/sympy/printing/conventions.py\nindex 9a3be6bbe9..58a440a654 100644\n--- a/sympy/printing/conventions.py\n+++ b/sympy/printing/conventions.py\n@@ -62,10 +62,22 @@ def split_super_sub(text):\n \n     # make a little exception when a name ends with digits, i.e. treat them\n     # as a subscript too.\n+    from sympy.core.alphabets import greeks\n+    \n+    # First try the original pattern for ASCII letters\n     m = _name_with_digits_p.match(name)\n     if m:\n         name, sub = m.groups()\n         subs.insert(0, sub)\n+    else:\n+        # Check if it's a Greek letter name followed by digits\n+        for greek in greeks:\n+            if name.startswith(greek) and len(name) > len(greek):\n+                suffix = name[len(greek):]\n+                if suffix.isdigit():\n+                    name = greek\n+                    subs.insert(0, suffix)\n+                    break\n \n     return name, supers, subs\n \n"
}