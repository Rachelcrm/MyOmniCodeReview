{
  "patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex 9dd10d219e..768d23fccc 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -382,7 +382,14 @@ def tensor_product_simp(e, **hints):\n     if isinstance(e, Add):\n         return Add(*[tensor_product_simp(arg) for arg in e.args])\n     elif isinstance(e, Pow):\n-        return tensor_product_simp(e.base) ** e.exp\n+        # Handle powers of TensorProducts by expanding into multiplication\n+        if isinstance(e.base, TensorProduct) and e.exp.is_integer and e.exp.is_positive:\n+            # Expand TensorProduct**n into TensorProduct * TensorProduct * ... (n times)\n+            from sympy import Mul\n+            expanded = Mul(*[e.base for _ in range(int(e.exp))])\n+            return tensor_product_simp_Mul(expanded)\n+        else:\n+            return tensor_product_simp(e.base) ** e.exp\n     elif isinstance(e, Mul):\n         return tensor_product_simp_Mul(e)\n     elif isinstance(e, Commutator):\n"
}