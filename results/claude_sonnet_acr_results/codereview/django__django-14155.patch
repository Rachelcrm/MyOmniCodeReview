{
  "patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 9b00e24509..7abca74a6c 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -45,12 +45,22 @@ class ResolverMatch:\n         self.namespaces = [x for x in namespaces if x] if namespaces else []\n         self.namespace = ':'.join(self.namespaces)\n \n-        if not hasattr(func, '__name__'):\n+        # Handle functools.partial objects\n+        if isinstance(func, functools.partial):\n+            self._partial_args = func.args\n+            self._partial_kwargs = func.keywords\n+            underlying_func = func.func\n+        else:\n+            self._partial_args = None\n+            self._partial_kwargs = None\n+            underlying_func = func\n+\n+        if not hasattr(underlying_func, '__name__'):\n             # A class-based view\n-            self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__\n+            self._func_path = underlying_func.__class__.__module__ + '.' + underlying_func.__class__.__name__\n         else:\n             # A function-based view\n-            self._func_path = func.__module__ + '.' + func.__name__\n+            self._func_path = underlying_func.__module__ + '.' + underlying_func.__name__\n \n         view_path = url_name or self._func_path\n         self.view_name = ':'.join(self.namespaces + [view_path])\n@@ -59,8 +69,18 @@ class ResolverMatch:\n         return (self.func, self.args, self.kwargs)[index]\n \n     def __repr__(self):\n+        if isinstance(self.func, functools.partial):\n+            func_repr = \"functools.partial(%s\" % self._func_path\n+            if self._partial_args:\n+                func_repr += \", %s\" % \", \".join(repr(arg) for arg in self._partial_args)\n+            if self._partial_kwargs:\n+                func_repr += \", %s\" % \", \".join(\"%s=%r\" % (k, v) for k, v in self._partial_kwargs.items())\n+            func_repr += \")\"\n+        else:\n+            func_repr = self._func_path\n+        \n         return \"ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)\" % (\n-            self._func_path, self.args, self.kwargs, self.url_name,\n+            func_repr, self.args, self.kwargs, self.url_name,\n             self.app_names, self.namespaces, self.route,\n         )\n \n"
}