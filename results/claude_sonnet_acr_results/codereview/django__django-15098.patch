{
  "patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 6ea18dd22f..1d31f58205 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -321,6 +321,17 @@ class LocalePrefixPattern:\n             return '%s/' % language_code\n \n     def match(self, path):\n+        from django.utils.translation.trans_real import get_language_from_path\n+        \n+        # Try to extract language code from path using proper regex matching\n+        lang_code = get_language_from_path(path)\n+        if lang_code:\n+            # Calculate the prefix length including the trailing slash\n+            prefix_length = len(lang_code) + 1  # +1 for the leading slash\n+            if path.startswith('/' + lang_code + '/') or path == '/' + lang_code:\n+                return path[prefix_length:], (), {}\n+        \n+        # Fallback to original behavior for backward compatibility\n         language_prefix = self.language_prefix\n         if path.startswith(language_prefix):\n             return path[len(language_prefix):], (), {}\ndiff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py\nindex 7dcc77b46c..274a6f0643 100644\n--- a/django/utils/translation/trans_real.py\n+++ b/django/utils/translation/trans_real.py\n@@ -43,7 +43,7 @@ language_code_re = _lazy_re_compile(\n     re.IGNORECASE\n )\n \n-language_code_prefix_re = _lazy_re_compile(r'^/(\\w+([@-]\\w+)?)(/|$)')\n+language_code_prefix_re = _lazy_re_compile(r'^/(\\w+(?:[@-]\\w+)*)(/|$)')\n \n \n @receiver(setting_changed)\n"
}