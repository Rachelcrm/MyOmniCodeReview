{
  "patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 35f3c5e1ea..becd0bcaef 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1046,7 +1046,12 @@ class Query(BaseExpression):\n         return sql, params\n \n     def resolve_lookup_value(self, value, can_reuse, allow_joins, simple_col):\n+        from django.db.models.expressions import OuterRef\n         if hasattr(value, 'resolve_expression'):\n+            # Don't resolve OuterRef expressions in subqueries - they should be\n+            # resolved in the outer query context\n+            if isinstance(value, OuterRef) and self.subquery:\n+                return value\n             kwargs = {'reuse': can_reuse, 'allow_joins': allow_joins}\n             if isinstance(value, F):\n                 kwargs['simple_col'] = simple_col\n@@ -1057,7 +1062,10 @@ class Query(BaseExpression):\n             resolved_values = []\n             for sub_value in value:\n                 if hasattr(sub_value, 'resolve_expression'):\n-                    if isinstance(sub_value, F):\n+                    # Don't resolve OuterRef expressions in subqueries\n+                    if isinstance(sub_value, OuterRef) and self.subquery:\n+                        resolved_values.append(sub_value)\n+                    elif isinstance(sub_value, F):\n                         resolved_values.append(sub_value.resolve_expression(\n                             self, reuse=can_reuse, allow_joins=allow_joins,\n                             simple_col=simple_col,\n"
}