{
  "patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 850734709d..ec14c5fe21 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -129,7 +129,39 @@ class SQLCompiler:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n             if not is_ref:\n-                expressions.extend(expr.get_group_by_cols())\n+                # Skip Meta.ordering fields from GROUP BY to prevent incorrect aggregation\n+                if self._meta_ordering:\n+                    # Check if this expression comes from Meta.ordering\n+                    is_meta_ordering = False\n+                    for meta_field in self._meta_ordering:\n+                        # Handle both string field names and expression objects\n+                        if hasattr(meta_field, 'resolve_expression'):\n+                            # For expression objects, compare the resolved expressions\n+                            try:\n+                                meta_expr = meta_field.resolve_expression(self.query, allow_joins=True, reuse=None)\n+                                if expr == meta_expr or (hasattr(expr, 'source_expressions') and \n+                                                        hasattr(meta_expr, 'source_expressions') and\n+                                                        expr.source_expressions == meta_expr.source_expressions):\n+                                    is_meta_ordering = True\n+                                    break\n+                            except:\n+                                continue\n+                        else:\n+                            # For string field names, check if the expression matches\n+                            # the field name by comparing the SQL output\n+                            try:\n+                                meta_sql, _ = self.compile(self.query.resolve_ref(meta_field.lstrip('-')))\n+                                expr_sql, _ = self.compile(expr)\n+                                if meta_sql == expr_sql:\n+                                    is_meta_ordering = True\n+                                    break\n+                            except:\n+                                continue\n+                    \n+                    if not is_meta_ordering:\n+                        expressions.extend(expr.get_group_by_cols())\n+                else:\n+                    expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\n"
}