{
  "patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 266cf229cc..c9782eb17d 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -423,21 +423,31 @@ class HTML(core.BaseReader):\n                         # requires that the weakref info._parent be maintained.\n                         new_cols = []\n \n-                        for col, col_escaped in zip(cols, cols_escaped):\n+                        # Get formatted string values for all columns using self.data.str_vals()\n+                        formatted_str_vals = list(self.data.str_vals())\n+                        \n+                        for col_idx, (col, col_escaped) in enumerate(zip(cols, cols_escaped)):\n                             if len(col.shape) > 1 and self.html['multicol']:\n                                 span = col.shape[1]\n                                 for i in range(span):\n                                     # Split up multicolumns into separate columns\n                                     new_col = Column([el[i] for el in col])\n-\n-                                    new_col_iter_str_vals = self.fill_values(\n-                                        col, new_col.info.iter_str_vals())\n+                                    \n+                                    # For multicolumn, we need to extract the i-th element from each formatted value\n+                                    multicol_str_vals = []\n+                                    for formatted_val in formatted_str_vals[col_idx]:\n+                                        if hasattr(formatted_val, '__getitem__') and len(formatted_val) > i:\n+                                            multicol_str_vals.append(str(formatted_val[i]))\n+                                        else:\n+                                            # Fallback to original formatting if formatted value doesn't support indexing\n+                                            multicol_str_vals.append(str(new_col[len(multicol_str_vals)]))\n+                                    \n+                                    new_col_iter_str_vals = self.fill_values(col, iter(multicol_str_vals))\n                                     col_str_iters.append(new_col_iter_str_vals)\n                                     new_cols_escaped.append(col_escaped)\n                                     new_cols.append(new_col)\n                             else:\n-\n-                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n+                                col_iter_str_vals = self.fill_values(col, iter(formatted_str_vals[col_idx]))\n                                 col_str_iters.append(col_iter_str_vals)\n \n                                 new_cols_escaped.append(col_escaped)\n"
}