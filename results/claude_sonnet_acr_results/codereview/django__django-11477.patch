{
  "patch": "Looking at the issue, the problem is in the `_reverse_with_prefix` method where the logic for checking if kwargs match the URL pattern parameters is too restrictive. The current code on line 620:\n\n```python\nif set(kwargs).symmetric_difference(params).difference(defaults):\n    continue\n```\n\nThis check fails when optional parameters with defaults are missing from kwargs. The `symmetric_difference` operation finds parameters that are in one set but not the other, and then `difference(defaults)` removes those that have defaults. However, this logic is flawed because it doesn't properly handle the case where optional parameters are simply omitted from kwargs.\n\nLet me analyze what should happen:\n1. If there are extra kwargs not in params → should fail\n2. If there are required parameters (params without defaults) missing from kwargs → should fail  \n3. If there are optional parameters (params with defaults) missing from kwargs → should succeed\n\nThe current logic incorrectly treats missing optional parameters as a failure case.\n\nHere's the fix:\n\n```\n<file>django/urls/resolvers.py</file>\n<original>\n                else:\n                    if set(kwargs).symmetric_difference(params).difference(defaults):\n                        continue\n                    if any(kwargs.get(k, v) != v for k, v in defaults.items()):\n                        continue\n                    candidate_subs = kwargs</original>\n<patched>\n                else:\n                    # Check for extra kwargs not in params\n                    extra_kwargs = set(kwargs) - set(params)\n                    if extra_kwargs:\n                        continue\n                    # Check for required params (those without defaults) missing from kwargs\n                    required_params = set(params) - set(defaults.keys())\n                    missing_required = required_params - set(kwargs)\n                    if missing_required:\n                        continue\n                    if any(kwargs.get(k, v) != v for k, v in defaults.items()):\n                        continue\n                    candidate_subs = kwargs</patched>\n```\n\nThis change:\n\n1. First checks if there are any extra kwargs that aren't in the URL pattern parameters - if so, skip this pattern\n2. Then identifies required parameters (those that don't have defaults) and checks if any are missing from kwargs - if so, skip this pattern  \n3. Keeps the existing check for default value validation\n4. Uses the same `candidate_subs = kwargs` assignment\n\nThis approach allows URL reversal to succeed when optional parameters with defaults are omitted from kwargs, while still properly validating that all required parameters are provided and no extra parameters are passed."
}