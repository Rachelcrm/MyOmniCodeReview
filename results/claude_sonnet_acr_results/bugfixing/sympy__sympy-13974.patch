{
  "patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex 9dd10d219e..cb70b71fee 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -382,6 +382,14 @@ def tensor_product_simp(e, **hints):\n     if isinstance(e, Add):\n         return Add(*[tensor_product_simp(arg) for arg in e.args])\n     elif isinstance(e, Pow):\n+        # Special handling for powers of TensorProducts\n+        if isinstance(e.base, TensorProduct):\n+            # Expand TensorProduct**n into TensorProduct * TensorProduct * ... (n times)\n+            # This allows the existing Mul simplification logic to work\n+            from sympy import Integer\n+            if isinstance(e.exp, Integer) and e.exp > 0:\n+                expanded = Mul(*[e.base for _ in range(int(e.exp))])\n+                return tensor_product_simp(expanded)\n         return tensor_product_simp(e.base) ** e.exp\n     elif isinstance(e, Mul):\n         return tensor_product_simp_Mul(e)\n"
}