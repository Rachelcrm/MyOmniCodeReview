{
  "patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex b5453160a5..c81b7867d0 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -108,10 +108,22 @@ class SessionBase:\n \n     def encode(self, session_dict):\n         \"Return the given session dictionary serialized and encoded as a string.\"\n-        return signing.dumps(\n-            session_dict, salt=self.key_salt, serializer=self.serializer,\n-            compress=True,\n-        )\n+        # Use legacy encoding format when DEFAULT_HASHING_ALGORITHM is 'sha1'\n+        # to support transition period where multiple instances might be running\n+        # with different hashing algorithm settings.\n+        from django.conf import settings\n+        if getattr(settings, 'DEFAULT_HASHING_ALGORITHM', None) == 'sha1':\n+            # Legacy format: base64(hash + ':' + serialized_data)\n+            import base64\n+            serialized = self.serializer().dumps(session_dict)\n+            hash = self._hash(serialized)\n+            combined = hash.encode() + b':' + serialized\n+            return base64.b64encode(combined).decode('ascii')\n+        else:\n+            return signing.dumps(\n+                session_dict, salt=self.key_salt, serializer=self.serializer,\n+                compress=True,\n+            )\n \n     def decode(self, session_data):\n         try:\n"
}