{
  "patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..3168e56868 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -254,7 +254,16 @@ class ForwardManyToOneDescriptor:\n         # Set the values of the related field.\n         else:\n             for lh_field, rh_field in self.field.related_fields:\n-                setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+                pk_val = getattr(value, rh_field.attname)\n+                # Check if the related object has a valid primary key value.\n+                # For auto fields, None indicates unset. For non-auto fields like CharField,\n+                # empty string or other \"falsy\" values indicate unset.\n+                if pk_val or (pk_val is not None and rh_field.empty_strings_allowed and pk_val == \"\"):\n+                    # Only set the foreign key if the related object has a valid primary key\n+                    setattr(instance, lh_field.attname, pk_val)\n+                else:\n+                    # Set to None if the related object's primary key is unset/invalid\n+                    setattr(instance, lh_field.attname, None)\n \n         # Set the related instance cache used by __get__ to avoid an SQL query\n         # when accessing the attribute we just set.\n"
}