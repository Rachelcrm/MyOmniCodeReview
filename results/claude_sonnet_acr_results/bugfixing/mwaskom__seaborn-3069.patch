{
  "patch": "diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py\nindex 4f0290a4..13f6b9a6 100644\n--- a/seaborn/_core/plot.py\n+++ b/seaborn/_core/plot.py\n@@ -1644,6 +1644,23 @@ class Plotter:\n                         hi = cast(float, hi) + 0.5\n                     ax.set(**{f\"{axis}lim\": (lo, hi)})\n \n+                # Apply categorical axis behaviors for Nominal scales\n+                if axis_key in self._scales:\n+                    scale = self._scales[axis_key]\n+                    if getattr(scale, '_is_categorical', False):\n+                        # Get number of ticks to set proper limits\n+                        ticks = getattr(ax, f\"get_{axis}ticks\")()\n+                        if len(ticks) > 0:\n+                            n = len(ticks)\n+                            if axis == \"y\":\n+                                # Invert y-axis for categorical scales\n+                                ax.set(**{f\"{axis}lim\": (n - 0.5, -0.5)})\n+                            else:\n+                                ax.set(**{f\"{axis}lim\": (-0.5, n - 0.5)})\n+                        \n+                        # Disable grid for categorical axes\n+                        getattr(ax, f\"{axis}axis\").grid(False)\n+\n         engine_default = None if p._target is not None else \"tight\"\n         layout_engine = p._layout_spec.get(\"engine\", engine_default)\n         set_layout_engine(self._figure, layout_engine)\ndiff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex bbd71ec1..93b2fccf 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -145,6 +145,7 @@ class Nominal(Scale):\n     order: list | None = None\n \n     _priority: ClassVar[int] = 3\n+    _is_categorical: ClassVar[bool] = True\n \n     def _setup(\n         self, data: Series, prop: Property, axis: Axis | None = None,\n"
}