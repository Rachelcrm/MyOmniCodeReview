{
  "patch": "diff --git a/keras/src/trainers/trainer.py b/keras/src/trainers/trainer.py\nindex 3668a988a..2c8f3bf66 100644\n--- a/keras/src/trainers/trainer.py\n+++ b/keras/src/trainers/trainer.py\n@@ -269,7 +269,7 @@ class Trainer:\n \n     @property\n     def metrics_names(self):\n-        return [m.name for m in self.metrics]\n+        return [m.name for m in self.metrics if m.name != \"compile_metrics\"]\n \n     def reset_metrics(self):\n         for m in self.metrics:\n@@ -503,6 +503,9 @@ class Trainer:\n         \"\"\"\n         return_metrics = {}\n         for metric in self.metrics:\n+            # Skip internal metrics like compile_metrics\n+            if metric.name == \"compile_metrics\":\n+                continue\n             result = metric.result()\n             if isinstance(result, dict):\n                 return_metrics.update(result)\ndiff --git a/keras/src/utils/progbar.py b/keras/src/utils/progbar.py\nindex e2b61a041..808f49320 100644\n--- a/keras/src/utils/progbar.py\n+++ b/keras/src/utils/progbar.py\n@@ -81,7 +81,10 @@ class Progbar:\n         for k, v in values:\n             if k not in self._values_order:\n                 self._values_order.append(k)\n-            if k not in self.stateful_metrics:\n+            # Skip internal metrics like compile_metrics\n+            if k == \"compile_metrics\":\n+                continue\n+            if k not in self.stateful_metrics and not isinstance(v, dict):\n                 # In the case that progress bar doesn't have a target value in\n                 # the first epoch, both on_batch_end and on_epoch_end will be\n                 # called, which will cause 'current' and 'self._seen_so_far' to\n@@ -96,7 +99,7 @@ class Progbar:\n             else:\n                 # Stateful metrics output a numeric value. This representation\n                 # means \"take an average from a single value\" but keeps the\n-                # numeric formatting.\n+                # numeric formatting. Also handle dictionary values here.\n                 self._values[k] = [v, 1]\n         self._seen_so_far = current\n \n"
}