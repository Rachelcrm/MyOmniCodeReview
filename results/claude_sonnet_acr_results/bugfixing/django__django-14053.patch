{
  "patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 494890cc23..918ea7c731 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -226,17 +226,27 @@ class HashedFilesMixin:\n             path for path in paths\n             if matches_patterns(path, self._patterns)\n         ]\n+        \n+        # Track adjustable files to yield them only once at the end\n+        adjustable_files_results = {}\n+        \n         # Do a single pass first. Post-process all files once, then repeat for\n         # adjustable files.\n         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):\n-            yield name, hashed_name, processed\n+            if name in adjustable_paths:\n+                # Store adjustable files results, don't yield yet\n+                adjustable_files_results[name] = (hashed_name, processed)\n+            else:\n+                # Yield non-adjustable files immediately\n+                yield name, hashed_name, processed\n \n         paths = {path: paths[path] for path in adjustable_paths}\n \n         for i in range(self.max_post_process_passes):\n             substitutions = False\n             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):\n-                yield name, hashed_name, processed\n+                # Update the stored results for adjustable files, don't yield yet\n+                adjustable_files_results[name] = (hashed_name, processed)\n                 substitutions = substitutions or subst\n \n             if not substitutions:\n@@ -245,6 +255,10 @@ class HashedFilesMixin:\n         if substitutions:\n             yield 'All', None, RuntimeError('Max post-process passes exceeded.')\n \n+        # Now yield each adjustable file exactly once with its final result\n+        for name, (hashed_name, processed) in adjustable_files_results.items():\n+            yield name, hashed_name, processed\n+\n         # Store the processed paths\n         self.hashed_files.update(hashed_files)\n \n"
}