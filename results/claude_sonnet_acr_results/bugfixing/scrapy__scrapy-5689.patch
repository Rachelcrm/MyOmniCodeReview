{
  "patch": "diff --git a/scrapy/utils/defer.py b/scrapy/utils/defer.py\nindex 8fcf31cab..7c7124fde 100644\n--- a/scrapy/utils/defer.py\n+++ b/scrapy/utils/defer.py\n@@ -269,7 +269,12 @@ def deferred_from_coro(o) -> Any:\n             return ensureDeferred(o)\n         else:\n             # wrapping the coroutine into a Future and then into a Deferred, this requires AsyncioSelectorReactor\n-            return Deferred.fromFuture(asyncio.ensure_future(o))\n+            try:\n+                loop = asyncio.get_running_loop()\n+            except RuntimeError:\n+                loop = asyncio.new_event_loop()\n+                asyncio.set_event_loop(loop)\n+            return Deferred.fromFuture(asyncio.ensure_future(o, loop=loop))\n     return o\n \n \ndiff --git a/scrapy/utils/reactor.py b/scrapy/utils/reactor.py\nindex 652733ce8..824f922e4 100644\n--- a/scrapy/utils/reactor.py\n+++ b/scrapy/utils/reactor.py\n@@ -67,7 +67,11 @@ def install_reactor(reactor_path, event_loop_path=None):\n                 event_loop = event_loop_class()\n                 asyncio.set_event_loop(event_loop)\n             else:\n-                event_loop = asyncio.get_event_loop()\n+                try:\n+                    event_loop = asyncio.get_running_loop()\n+                except RuntimeError:\n+                    event_loop = asyncio.new_event_loop()\n+                    asyncio.set_event_loop(event_loop)\n             asyncioreactor.install(eventloop=event_loop)\n     else:\n         *module, _ = reactor_path.split(\".\")\n"
}