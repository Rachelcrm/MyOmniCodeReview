{
  "patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex 5089737034..7b3b1eec6a 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -401,7 +401,18 @@ class In(FieldGetDbPrepValueIterableMixin, BuiltinLookup):\n             placeholder = '(' + ', '.join(sqls) + ')'\n             return (placeholder, sqls_params)\n         else:\n-            if not getattr(self.rhs, 'has_select_fields', True):\n+            # Check if rhs is a QuerySet that needs to be modified to return only one column\n+            if hasattr(self.rhs, 'query'):\n+                # If the QuerySet has default_cols=True or doesn't have explicit select fields,\n+                # we need to ensure it only selects the primary key for the IN clause\n+                if (getattr(self.rhs.query, 'default_cols', False) or \n+                    not getattr(self.rhs, 'has_select_fields', True)):\n+                    # Clone the QuerySet to avoid modifying the original\n+                    self.rhs = self.rhs._clone()\n+                    self.rhs.query.default_cols = False\n+                    self.rhs.clear_select_clause()\n+                    self.rhs.add_fields(['pk'])\n+            elif not getattr(self.rhs, 'has_select_fields', True):\n                 self.rhs.clear_select_clause()\n                 self.rhs.add_fields(['pk'])\n             return super().process_rhs(compiler, connection)\n"
}