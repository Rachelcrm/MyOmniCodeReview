{
  "patch": "diff --git a/youtube_dl/extractor/generic.py b/youtube_dl/extractor/generic.py\nindex b01900afa..f1b5b2c0d 100644\n--- a/youtube_dl/extractor/generic.py\n+++ b/youtube_dl/extractor/generic.py\n@@ -2570,9 +2570,15 @@ class GenericIE(InfoExtractor):\n         else:\n             video_id = self._generic_id(url)\n \n+        # Check for login credentials\n+        username, password = self._get_login_info()\n+\n         self.to_screen('%s: Requesting header' % video_id)\n \n         head_req = HEADRequest(url)\n+        if username is not None:\n+            head_req.add_header('Authorization', 'Basic %s' % base64.b64encode(\n+                ('%s:%s' % (username, password)).encode('ascii')).decode('ascii'))\n         head_response = self._request_webpage(\n             head_req, video_id,\n             note=False, errnote='Could not send HEAD request to %s' % url,\n@@ -2592,6 +2598,9 @@ class GenericIE(InfoExtractor):\n         if head_response is False:\n             request = sanitized_Request(url)\n             request.add_header('Accept-Encoding', '*')\n+            if username is not None:\n+                request.add_header('Authorization', 'Basic %s' % base64.b64encode(\n+                    ('%s:%s' % (username, password)).encode('ascii')).decode('ascii'))\n             full_response = self._request_webpage(request, video_id)\n             head_response = full_response\n \n@@ -2637,6 +2646,9 @@ class GenericIE(InfoExtractor):\n             # It may probably better to solve this by checking Content-Type for application/octet-stream\n             # after HEAD request finishes, but not sure if we can rely on this.\n             request.add_header('Accept-Encoding', '*')\n+            if username is not None:\n+                request.add_header('Authorization', 'Basic %s' % base64.b64encode(\n+                    ('%s:%s' % (username, password)).encode('ascii')).decode('ascii'))\n             full_response = self._request_webpage(request, video_id)\n \n         first_bytes = full_response.read(512)\n"
}