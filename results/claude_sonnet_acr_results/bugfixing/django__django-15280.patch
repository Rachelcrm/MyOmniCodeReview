{
  "patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0d50dad0c9..c2a4505c3a 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -539,6 +539,10 @@ class Model(metaclass=ModelBase):\n         new = cls(*values)\n         new._state.adding = False\n         new._state.db = db\n+        # Store the fields that were actually loaded from the database\n+        # This ensures that get_deferred_fields() works correctly regardless\n+        # of what other instances of the same object might exist\n+        new._state.fields_cache = set(field_names)\n         return new\n \n     def __repr__(self):\n@@ -622,6 +626,13 @@ class Model(metaclass=ModelBase):\n         \"\"\"\n         Return a set containing names of deferred fields for this instance.\n         \"\"\"\n+        # If this instance was created via from_db and we have the fields_cache,\n+        # use that to determine deferred fields more accurately\n+        if hasattr(self._state, 'fields_cache'):\n+            return {\n+                f.attname for f in self._meta.concrete_fields\n+                if f.attname not in self._state.fields_cache\n+            }\n         return {\n             f.attname for f in self._meta.concrete_fields\n             if f.attname not in self.__dict__\n"
}