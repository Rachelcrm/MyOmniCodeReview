{
  "patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 30616c0172..cf7049d7ca 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -571,6 +571,22 @@ class MigrationAutodetector:\n                     None,\n                     True\n                 ))\n+            # Check if this model inherits from any models that have fields being removed\n+            # with the same names as fields in this model\n+            has_field_clash_with_parent = False\n+            for base in model_state.bases:\n+                if isinstance(base, str) and \".\" in base:\n+                    base_app_label, base_name = base.split(\".\", 1)\n+                    # Check if the base model has fields being removed that clash with our fields\n+                    for field_name in model_state.fields:\n+                        if field_name not in related_fields:\n+                            # Check if this field is being removed from the parent\n+                            if (base_app_label, base_name, field_name) in (self.old_field_keys - self.new_field_keys):\n+                                has_field_clash_with_parent = True\n+                                break\n+                    if has_field_clash_with_parent:\n+                        break\n+\n             # Generate creation operation\n             self.add_operation(\n                 app_label,\n@@ -582,7 +598,7 @@ class MigrationAutodetector:\n                     managers=model_state.managers,\n                 ),\n                 dependencies=dependencies,\n-                beginning=True,\n+                beginning=not has_field_clash_with_parent,\n             )\n \n             # Don't add operations which modify the database for unmanaged models\n"
}