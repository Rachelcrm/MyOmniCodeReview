{
  "patch": "diff --git a/scrapy/http/headers.py b/scrapy/http/headers.py\nindex 1a2b99b0a..48e5cf218 100644\n--- a/scrapy/http/headers.py\n+++ b/scrapy/http/headers.py\n@@ -8,7 +8,9 @@ class Headers(CaselessDict):\n \n     def __init__(self, seq=None, encoding='utf-8'):\n         self.encoding = encoding\n-        super().__init__(seq)\n+        super().__init__()\n+        if seq is not None:\n+            self.update(seq)\n \n     def normkey(self, key):\n         \"\"\"Normalize key to bytes\"\"\"\n@@ -84,6 +86,21 @@ class Headers(CaselessDict):\n              to_unicode(b','.join(value), encoding=self.encoding))\n             for key, value in self.items())\n \n+    def update(self, seq):\n+        \"\"\"Update headers from a sequence or mapping, properly handling multiple values for the same key\"\"\"\n+        if hasattr(seq, 'items'):\n+            # Handle dict-like objects\n+            for key, value in seq.items():\n+                self[key] = value\n+        else:\n+            # Handle sequence of key-value pairs\n+            for item in seq:\n+                if len(item) == 2:\n+                    key, value = item\n+                    self.appendlist(key, value)\n+                else:\n+                    raise ValueError(f\"Expected 2-item tuple, got {len(item)}-item tuple\")\n+\n     def __copy__(self):\n         return self.__class__(self)\n     copy = __copy__\n"
}