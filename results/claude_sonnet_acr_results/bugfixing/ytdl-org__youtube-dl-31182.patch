{
  "patch": "diff --git a/youtube_dl/jsinterp.py b/youtube_dl/jsinterp.py\nindex 8e119d08a..45e9c0a32 100644\n--- a/youtube_dl/jsinterp.py\n+++ b/youtube_dl/jsinterp.py\n@@ -279,6 +279,32 @@ class JSInterpreter(object):\n         if not opfunc:\n             return right_val\n \n+        # Handle None values for comparison operators following JavaScript semantics\n+        if op in ('>', '<', '>=', '<=', '==', '!='):\n+            # Convert None (JavaScript null) to 0 for numeric comparisons\n+            if left_val is None:\n+                left_val = 0\n+            if right_val is None:\n+                right_val = 0\n+            # Convert undefined to 0 for numeric comparisons, but handle == and != specially\n+            if left_val is self.undefined:\n+                if op in ('==', '!='):\n+                    # undefined == null is true in JavaScript, undefined == anything else is false\n+                    if op == '==':\n+                        return right_val is None or right_val is self.undefined\n+                    else:  # op == '!='\n+                        return not (right_val is None or right_val is self.undefined)\n+                else:\n+                    left_val = 0\n+            if right_val is self.undefined:\n+                if op in ('==', '!='):\n+                    if op == '==':\n+                        return left_val is None or left_val is self.undefined\n+                    else:  # op == '!='\n+                        return not (left_val is None or left_val is self.undefined)\n+                else:\n+                    right_val = 0\n+\n         try:\n             return opfunc(left_val, right_val)\n         except Exception as e:\n"
}