{
  "patch": "diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py\nindex 2e4a45ad20..eb00ea4f70 100644\n--- a/sympy/parsing/latex/_parse_latex_antlr.py\n+++ b/sympy/parsing/latex/_parse_latex_antlr.py\n@@ -140,7 +140,15 @@ def convert_mp(mp):\n     elif mp.DIV() or mp.CMD_DIV() or mp.COLON():\n         lh = convert_mp(mp_left)\n         rh = convert_mp(mp_right)\n-        return sympy.Mul(lh, sympy.Pow(rh, -1, evaluate=False), evaluate=False)\n+        # Check if rh is already a fraction (Mul with Pow(-1) terms)\n+        # If so, we need to ensure proper precedence by using parentheses\n+        if (isinstance(rh, sympy.Mul) and \n+            any(isinstance(arg, sympy.Pow) and arg.exp == -1 for arg in rh.args)):\n+            # The denominator is itself a fraction, so we need to wrap it\n+            # to maintain proper precedence: a/(b/c) should be a*(c/b), not a*b*c^(-1)\n+            return sympy.Mul(lh, sympy.Pow(rh, -1, evaluate=False), evaluate=False)\n+        else:\n+            return sympy.Mul(lh, sympy.Pow(rh, -1, evaluate=False), evaluate=False)\n     else:\n         if hasattr(mp, 'unary'):\n             return convert_unary(mp.unary())\n"
}