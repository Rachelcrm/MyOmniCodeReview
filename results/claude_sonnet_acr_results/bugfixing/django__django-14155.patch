{
  "patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 9b00e24509..260c454304 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -45,7 +45,32 @@ class ResolverMatch:\n         self.namespaces = [x for x in namespaces if x] if namespaces else []\n         self.namespace = ':'.join(self.namespaces)\n \n-        if not hasattr(func, '__name__'):\n+        # Handle functools.partial objects\n+        if isinstance(func, functools.partial):\n+            # Extract the underlying function and partial arguments\n+            underlying_func = func.func\n+            partial_args = func.args\n+            partial_kwargs = func.keywords\n+            \n+            if not hasattr(underlying_func, '__name__'):\n+                # A class-based view wrapped in partial\n+                base_path = underlying_func.__class__.__module__ + '.' + underlying_func.__class__.__name__\n+            else:\n+                # A function-based view wrapped in partial\n+                base_path = underlying_func.__module__ + '.' + underlying_func.__name__\n+            \n+            # Create a more informative path that includes partial info\n+            partial_info = []\n+            if partial_args:\n+                partial_info.append('*%s' % (partial_args,))\n+            if partial_kwargs:\n+                partial_info.append('**%s' % (partial_kwargs,))\n+            \n+            if partial_info:\n+                self._func_path = '%s(%s)' % (base_path, ', '.join(partial_info))\n+            else:\n+                self._func_path = base_path\n+        elif not hasattr(func, '__name__'):\n             # A class-based view\n             self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__\n         else:\n"
}