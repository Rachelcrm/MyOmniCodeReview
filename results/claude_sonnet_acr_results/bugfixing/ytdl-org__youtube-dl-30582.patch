{
  "patch": "diff --git a/youtube_dl/extractor/youtube.py b/youtube_dl/extractor/youtube.py\nindex 63918924d..00838988f 100644\n--- a/youtube_dl/extractor/youtube.py\n+++ b/youtube_dl/extractor/youtube.py\n@@ -1438,21 +1438,30 @@ class YoutubeIE(YoutubeBaseInfoExtractor):\n                 self._downloader.to_screen('[debug] [%s] %s' % (self.IE_NAME, 'Decrypted nsig {0} => {1}'.format(n_param, self._player_cache[sig_id])))\n             return self._player_cache[sig_id]\n         except Exception as e:\n-            raise ExtractorError(traceback.format_exc(), cause=e, video_id=video_id)\n+            self._downloader.report_warning(\n+                '[%s] Failed to unthrottle URL: %s. Download may be slower.' % (self.IE_NAME, str(e)))\n+            if self._downloader.params.get('verbose', False):\n+                self._downloader.to_screen('[debug] [%s] %s' % (self.IE_NAME, traceback.format_exc()))\n+            return None\n \n     def _unthrottle_format_urls(self, video_id, player_url, formats):\n         for fmt in formats:\n-            parsed_fmt_url = compat_urlparse.urlparse(fmt['url'])\n-            qs = compat_urlparse.parse_qs(parsed_fmt_url.query)\n-            n_param = qs.get('n')\n-            if not n_param:\n+            try:\n+                parsed_fmt_url = compat_urlparse.urlparse(fmt['url'])\n+                qs = compat_urlparse.parse_qs(parsed_fmt_url.query)\n+                n_param = qs.get('n')\n+                if not n_param:\n+                    continue\n+                n_param = n_param[-1]\n+                n_response = self._n_descramble(n_param, player_url, video_id)\n+                if n_response:\n+                    qs['n'] = [n_response]\n+                    fmt['url'] = compat_urlparse.urlunparse(\n+                        parsed_fmt_url._replace(query=compat_urllib_parse_urlencode(qs, True)))\n+            except Exception as e:\n+                if self._downloader.params.get('verbose', False):\n+                    self._downloader.to_screen('[debug] [%s] Failed to unthrottle format %s: %s' % (self.IE_NAME, fmt.get('format_id', 'unknown'), str(e)))\n                 continue\n-            n_param = n_param[-1]\n-            n_response = self._n_descramble(n_param, player_url, video_id)\n-            if n_response:\n-                qs['n'] = [n_response]\n-                fmt['url'] = compat_urlparse.urlunparse(\n-                    parsed_fmt_url._replace(query=compat_urllib_parse_urlencode(qs, True)))\n \n     def _mark_watched(self, video_id, player_response):\n         playback_url = url_or_none(try_get(\n@@ -1863,7 +1872,13 @@ class YoutubeIE(YoutubeBaseInfoExtractor):\n \n         if not player_url:\n             player_url = self._extract_player_url(webpage)\n-        self._unthrottle_format_urls(video_id, player_url, formats)\n+        try:\n+            self._unthrottle_format_urls(video_id, player_url, formats)\n+        except Exception as e:\n+            self._downloader.report_warning(\n+                '[%s] Failed to unthrottle format URLs: %s. Download may be slower.' % (self.IE_NAME, str(e)))\n+            if self._downloader.params.get('verbose', False):\n+                self._downloader.to_screen('[debug] [%s] %s' % (self.IE_NAME, traceback.format_exc()))\n \n         info = {\n             'id': video_id,\n"
}