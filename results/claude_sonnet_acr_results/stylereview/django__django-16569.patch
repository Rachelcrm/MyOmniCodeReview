{
  "patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex 235aaf844c..7ce60625fb 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -56,6 +56,18 @@ class BaseFormSet(RenderableFormMixin):\n \n     deletion_widget = CheckboxInput\n     ordering_widget = NumberInput\n+    \n+    # Default values for formset configuration\n+    form = None\n+    extra = 1\n+    can_order = False\n+    can_delete = False\n+    can_delete_extra = True\n+    min_num = DEFAULT_MIN_NUM\n+    max_num = DEFAULT_MAX_NUM\n+    absolute_max = None\n+    validate_min = False\n+    validate_max = False\n     default_error_messages = {\n         \"missing_management_form\": _(\n             \"ManagementForm data is missing or has been tampered with. Missing fields: \"\n@@ -205,7 +217,7 @@ class BaseFormSet(RenderableFormMixin):\n             for i in range(self.total_form_count())\n         ]\n \n-    def get_form_kwargs(self, index):\n+    def get_form_kwargs(self, index):  # pylint: disable=unused-argument\n         \"\"\"\n         Return additional keyword arguments for each individual formset form.\n \n@@ -379,7 +391,7 @@ class BaseFormSet(RenderableFormMixin):\n         if not self.is_bound:\n             return False\n         # Accessing errors triggers a full clean the first time only.\n-        self.errors\n+        self.errors  # pylint: disable=pointless-statement\n         # List comprehension ensures is_valid() is called for all forms.\n         # Forms due to be deleted shouldn't cause the formset to be invalid.\n         forms_valid = all(\n"
}