{
  "patch": "diff --git a/django/contrib/staticfiles/management/commands/runserver.py b/django/contrib/staticfiles/management/commands/runserver.py\nindex fd9ddb16a4..ae6f5c843d 100644\n--- a/django/contrib/staticfiles/management/commands/runserver.py\n+++ b/django/contrib/staticfiles/management/commands/runserver.py\n@@ -23,14 +23,14 @@ class Command(RunserverCommand):\n             help=\"Allows serving static files even if DEBUG is False.\",\n         )\n \n-    def get_handler(self, *args, **options):\n+    def get_handler(self, *_args, **_options):\n         \"\"\"\n         Return the static files serving handler wrapping the default handler,\n         if static files should be served. Otherwise return the default handler.\n         \"\"\"\n-        handler = super().get_handler(*args, **options)\n-        use_static_handler = options[\"use_static_handler\"]\n-        insecure_serving = options[\"insecure_serving\"]\n+        handler = super().get_handler(*_args, **_options)\n+        use_static_handler = _options[\"use_static_handler\"]\n+        insecure_serving = _options[\"insecure_serving\"]\n         if use_static_handler and (settings.DEBUG or insecure_serving):\n             return StaticFilesHandler(handler)\n         return handler\ndiff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 3c39f57e4d..4eddc1f78b 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -36,6 +36,13 @@ class Command(BaseCommand):\n     protocol = \"http\"\n     server_cls = WSGIServer\n \n+    def __init__(self, *args, **kwargs):\n+        super().__init__(*args, **kwargs)\n+        self.use_ipv6 = None\n+        self._raw_ipv6 = None\n+        self.addr = None\n+        self.port = None\n+\n     def add_arguments(self, parser):\n         parser.add_argument(\n             \"addrport\", nargs=\"?\", help=\"Optional port number, or ipaddr:port\"\n@@ -73,7 +80,7 @@ class Command(BaseCommand):\n             os.environ[\"DJANGO_COLORS\"] = \"nocolor\"\n         super().execute(*args, **options)\n \n-    def get_handler(self, *args, **options):\n+    def get_handler(self, *_args, **_options):\n         \"\"\"Return the default WSGI handler for the runner.\"\"\"\n         return get_internal_wsgi_application()\n \n"
}