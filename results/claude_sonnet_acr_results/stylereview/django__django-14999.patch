{
  "patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 982816be3a..89cce77978 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -20,7 +20,7 @@ def _check_for_duplicates(arg_name, objs):\n         used_vals.add(val)\n \n \n-class ModelOperation(Operation):\n+class ModelOperation(Operation, ABC):\n     def __init__(self, name):\n         self.name = name\n \n@@ -317,6 +317,7 @@ class RenameModel(ModelOperation):\n         state.rename_model(app_label, self.old_name, self.new_name)\n \n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        # pylint: disable=protected-access\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n@@ -368,13 +369,23 @@ class RenameModel(ModelOperation):\n                 )\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n-        self.new_name_lower, self.old_name_lower = self.old_name_lower, self.new_name_lower\n+        # Clear cached properties if they exist\n+        if 'old_name_lower' in self.__dict__:\n+            del self.old_name_lower\n+        if 'new_name_lower' in self.__dict__:\n+            del self.new_name_lower\n+        \n+        # Swap the names\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n-        self.new_name_lower, self.old_name_lower = self.old_name_lower, self.new_name_lower\n+        # Swap back and clear cached properties again\n         self.new_name, self.old_name = self.old_name, self.new_name\n+        if 'old_name_lower' in self.__dict__:\n+            del self.old_name_lower\n+        if 'new_name_lower' in self.__dict__:\n+            del self.new_name_lower\n \n     def references_model(self, name, app_label):\n         return (\n"
}