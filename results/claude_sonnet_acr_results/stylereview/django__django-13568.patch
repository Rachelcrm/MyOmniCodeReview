{
  "patch": "diff --git a/django/contrib/auth/checks.py b/django/contrib/auth/checks.py\nindex 65fc266f7e..23e9c5dfb4 100644\n--- a/django/contrib/auth/checks.py\n+++ b/django/contrib/auth/checks.py\n@@ -8,7 +8,7 @@ from django.core import checks\n from .management import _get_builtin_permissions\n \n \n-def check_user_model(app_configs=None, **kwargs):\n+def check_user_model(app_configs=None, **_kwargs):\n     if app_configs is None:\n         cls = apps.get_model(settings.AUTH_USER_MODEL)\n     else:\n@@ -99,18 +99,21 @@ def check_user_model(app_configs=None, **kwargs):\n     return errors\n \n \n-def check_models_permissions(app_configs=None, **kwargs):\n+def check_models_permissions(app_configs=None, **_kwargs):\n     if app_configs is None:\n         models = apps.get_models()\n     else:\n         models = chain.from_iterable(app_config.get_models() for app_config in app_configs)\n \n     Permission = apps.get_model('auth', 'Permission')\n+    # pylint: disable=protected-access\n     permission_name_max_length = Permission._meta.get_field('name').max_length\n+    # pylint: disable=protected-access\n     permission_codename_max_length = Permission._meta.get_field('codename').max_length\n     errors = []\n \n     for model in models:\n+        # pylint: disable=protected-access\n         opts = model._meta\n         builtin_permissions = dict(_get_builtin_permissions(opts))\n         # Check builtin permission name length.\n"
}