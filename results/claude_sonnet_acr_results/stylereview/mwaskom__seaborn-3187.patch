{
  "patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 55874bf2..0d6f3de3 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -74,10 +74,10 @@ class Scale:\n     def label(self):\n         raise NotImplementedError()\n \n-    def _get_locators(self):\n+    def _get_locators(self, locator=None):\n         raise NotImplementedError()\n \n-    def _get_formatter(self, locator: Locator | None = None):\n+    def _get_formatter(self, locator, formatter=None):\n         raise NotImplementedError()\n \n     def _get_scale(self, name: str, forward: Callable, inverse: Callable):\n@@ -137,6 +137,21 @@ class Scale:\n             _legend = None\n             _matplotlib_scale = None\n \n+            def _get_formatter(self, locator, formatter=None):\n+                return formatter\n+\n+            def _get_locators(self, locator=None):\n+                return locator, None\n+\n+            def _setup(self, data, prop, axis=None):\n+                return self\n+\n+            def label(self, formatter=None):\n+                return self\n+\n+            def tick(self, locator=None):\n+                return self\n+\n         return Identity()\n \n \n@@ -223,7 +238,7 @@ class Nominal(Scale):\n             # TODO how to handle color representation consistency?\n         ]\n \n-        def spacer(x):\n+        def spacer():\n             return 1\n \n         new._spacer = spacer\n@@ -302,9 +317,9 @@ class Nominal(Scale):\n \n \n @dataclass\n-class Ordinal(Scale):\n+class Ordinal(Nominal):\n     # Categorical (convert to strings), sortable, can skip ticklabels\n-    ...\n+    pass\n \n \n @dataclass\n"
}