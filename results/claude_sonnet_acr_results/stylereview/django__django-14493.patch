{
  "patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex f957a667b2..642547fea2 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -20,7 +20,7 @@ class StaticFilesStorage(FileSystemStorage):\n     The defaults for ``location`` and ``base_url`` are\n     ``STATIC_ROOT`` and ``STATIC_URL``.\n     \"\"\"\n-    def __init__(self, location=None, base_url=None, *args, **kwargs):\n+    def __init__(self, *args, location=None, base_url=None, **kwargs):\n         if location is None:\n             location = settings.STATIC_ROOT\n         if base_url is None:\n@@ -83,7 +83,7 @@ class HashedFilesMixin:\n                 compiled = re.compile(pattern, re.IGNORECASE)\n                 self._patterns.setdefault(extension, []).append((compiled, template))\n \n-    def file_hash(self, name, content=None):\n+    def file_hash(self, _name, content=None):\n         \"\"\"\n         Return a hash of the file with the given name and optional content.\n         \"\"\"\n@@ -221,7 +221,7 @@ class HashedFilesMixin:\n \n         return converter\n \n-    def post_process(self, paths, dry_run=False, **options):\n+    def post_process(self, paths, dry_run=False, **_options):\n         \"\"\"\n         Post process the given dictionary of files (called from collectstatic).\n \n@@ -261,7 +261,7 @@ class HashedFilesMixin:\n \n         paths = {path: paths[path] for path in adjustable_paths}\n \n-        for i in range(self.max_post_process_passes):\n+        for _ in range(self.max_post_process_passes):\n             substitutions = False\n             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):\n                 # Overwrite since hashed_name may be newer.\n@@ -378,7 +378,7 @@ class HashedFilesMixin:\n             return cache_name\n         # No cached name found, recalculate it from the files.\n         intermediate_name = name\n-        for i in range(self.max_post_process_passes + 1):\n+        for _ in range(self.max_post_process_passes + 1):\n             cache_name = self.clean_name(\n                 self.hashed_name(name, content=None, filename=intermediate_name)\n             )\n@@ -462,7 +462,6 @@ class ManifestStaticFilesStorage(ManifestFilesMixin, StaticFilesStorage):\n     A static file system storage backend which also saves\n     hashed copies of the files it saves.\n     \"\"\"\n-    pass\n \n \n class ConfiguredStorage(LazyObject):\n"
}