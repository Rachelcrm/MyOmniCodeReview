{
  "patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex a308e27297..5592025c27 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -55,12 +55,12 @@ def is_separable(transform):\n \n     \"\"\"\n     if transform.n_inputs == 1 and transform.n_outputs > 1:\n-        is_separable = np.array([False] * transform.n_outputs).T\n-        return is_separable\n+        result = np.array([False] * transform.n_outputs).T\n+        return result\n     separable_matrix = _separable(transform)\n-    is_separable = separable_matrix.sum(1)\n-    is_separable = np.where(is_separable != 1, False, True)\n-    return is_separable\n+    result = separable_matrix.sum(1)\n+    result = np.where(result != 1, False, True)\n+    return result\n \n \n def separability_matrix(transform):\n@@ -146,11 +146,11 @@ def _arith_oper(left, right):\n         Result from this operation.\n     \"\"\"\n     # models have the same number of inputs and outputs\n-    def _n_inputs_outputs(input):\n-        if isinstance(input, Model):\n-            n_outputs, n_inputs = input.n_outputs, input.n_inputs\n+    def _n_inputs_outputs(model_input):\n+        if isinstance(model_input, Model):\n+            n_outputs, n_inputs = model_input.n_outputs, model_input.n_inputs\n         else:\n-            n_outputs, n_inputs = input.shape\n+            n_outputs, n_inputs = model_input.shape\n         return n_inputs, n_outputs\n \n     left_inputs, left_outputs = _n_inputs_outputs(left)\n@@ -264,14 +264,14 @@ def _cdot(left, right):\n \n     left, right = right, left\n \n-    def _n_inputs_outputs(input, position):\n+    def _n_inputs_outputs(model_input, position):\n         \"\"\"\n         Return ``n_inputs``, ``n_outputs`` for a model or coord_matrix.\n         \"\"\"\n-        if isinstance(input, Model):\n-            coords = _coord_matrix(input, position, input.n_outputs)\n+        if isinstance(model_input, Model):\n+            coords = _coord_matrix(model_input, position, model_input.n_outputs)\n         else:\n-            coords = input\n+            coords = model_input\n         return coords\n \n     cleft = _n_inputs_outputs(left, 'left')\n@@ -279,11 +279,11 @@ def _cdot(left, right):\n \n     try:\n         result = np.dot(cleft, cright)\n-    except ValueError:\n+    except ValueError as exc:\n         raise ModelDefinitionError(\n             'Models cannot be combined with the \"|\" operator; '\n             'left coord_matrix is {}, right coord_matrix is {}'.format(\n-                cright, cleft))\n+                cright, cleft)) from exc\n     return result\n \n \n@@ -301,7 +301,7 @@ def _separable(transform):\n         An array of shape (transform.n_outputs,) of boolean type\n         Each element represents the separablity of the corresponding output.\n     \"\"\"\n-    if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n+    if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:  # pylint: disable=protected-access\n         return transform_matrix\n     elif isinstance(transform, CompoundModel):\n         sepleft = _separable(transform.left)\n"
}