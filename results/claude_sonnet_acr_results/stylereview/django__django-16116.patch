{
  "patch": "diff --git a/django/core/management/color.py b/django/core/management/color.py\nindex e409ecc5da..10f6ed529e 100644\n--- a/django/core/management/color.py\n+++ b/django/core/management/color.py\n@@ -92,6 +92,12 @@ def make_style(config_string=\"\"):\n     # For backwards compatibility,\n     # set style for ERROR_OUTPUT == ERROR\n     style.ERROR_OUTPUT = style.ERROR\n+    \n+    # Ensure migration-specific styles are available\n+    if not hasattr(style, 'MIGRATE_HEADING'):\n+        style.MIGRATE_HEADING = style_func\n+    if not hasattr(style, 'MIGRATE_LABEL'):\n+        style.MIGRATE_LABEL = style_func\n \n     return style\n \ndiff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex 2e97d9064b..2521d08aec 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -26,6 +26,19 @@ from django.db.migrations.writer import MigrationWriter\n class Command(BaseCommand):\n     help = \"Creates new migration(s) for apps.\"\n \n+    def __init__(self, *args, **kwargs):\n+        super().__init__(*args, **kwargs)\n+        self.written_files = []\n+        self.verbosity = 1\n+        self.interactive = True\n+        self.dry_run = False\n+        self.merge = False\n+        self.empty = False\n+        self.migration_name = None\n+        self.include_header = True\n+        self.scriptable = False\n+        self.update = False\n+\n     def add_arguments(self, parser):\n         parser.add_argument(\n             \"args\",\n@@ -354,7 +367,7 @@ class Command(BaseCommand):\n                         os.makedirs(migrations_directory, exist_ok=True)\n                         init_path = os.path.join(migrations_directory, \"__init__.py\")\n                         if not os.path.isfile(init_path):\n-                            open(init_path, \"w\").close()\n+                            open(init_path, \"w\", encoding=\"utf-8\").close()\n                         # We just do this once per app\n                         directory_created[app_label] = True\n                     migration_string = writer.as_string()\n"
}