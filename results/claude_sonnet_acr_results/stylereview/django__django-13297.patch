{
  "patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..fd6e193b08 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -84,7 +84,7 @@ class View:\n \n     def setup(self, request, *args, **kwargs):\n         \"\"\"Initialize attributes shared by all view methods.\"\"\"\n-        if hasattr(self, 'get') and not hasattr(self, 'head'):\n+        if hasattr(self, 'get') and not hasattr(self.__class__, 'head'):\n             self.head = self.get\n         self.request = request\n         self.args = args\n@@ -100,14 +100,14 @@ class View:\n             handler = self.http_method_not_allowed\n         return handler(request, *args, **kwargs)\n \n-    def http_method_not_allowed(self, request, *args, **kwargs):\n+    def http_method_not_allowed(self, request, *_args, **_kwargs):\n         logger.warning(\n             'Method Not Allowed (%s): %s', request.method, request.path,\n             extra={'status_code': 405, 'request': request}\n         )\n         return HttpResponseNotAllowed(self._allowed_methods())\n \n-    def options(self, request, *args, **kwargs):\n+    def options(self, _request, *_args, **_kwargs):\n         \"\"\"Handle responding to requests for the OPTIONS HTTP verb.\"\"\"\n         response = HttpResponse()\n         response['Allow'] = ', '.join(self._allowed_methods())\n@@ -156,7 +156,7 @@ class TemplateResponseMixin:\n \n class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     \"\"\"Render a template.\"\"\"\n-    def get(self, request, *args, **kwargs):\n+    def get(self, _request, *_args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n         context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n"
}