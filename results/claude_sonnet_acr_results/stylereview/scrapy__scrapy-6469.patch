{
  "patch": "Looking at the issue, I need to understand what's happening. The lint report shows no messages for the files, which means Pylint didn't find any issues. However, the locations provided suggest there's an issue with docstrings that need to be corrected.\n\nThe intended behavior mentions that docstrings should be corrected to read 'Contract to check the presence of fields in Request objects' instead of 'Contract to check the presence of fields in scraped items'. However, the code snippets provided only show the `post_process` methods, not the docstrings themselves.\n\nLet me examine the context more carefully. The locations mention two classes: `ReturnsContract` and `ScrapesContract`. The issue seems to be that their docstrings incorrectly describe what they do.\n\nSince I need to see the actual docstrings to fix them, and they're not shown in the provided code snippets, I need to look at the class definitions. Based on the intended behavior, it appears that some contract classes have incorrect docstrings that mention \"scraped items\" when they should mention \"Request objects\".\n\nHowever, looking at the code more carefully, I notice that:\n1. `ReturnsContract` (lines 79-95) seems to be a general contract for checking return counts\n2. `ScrapesContract` (lines 105-111) specifically checks for fields in items using `is_item(x)` and `ItemAdapter(x)`\n\nThe intended behavior description seems inconsistent with what the code actually does. The `ScrapesContract` is clearly designed to work with scraped items (it uses `is_item()` and `ItemAdapter`), not Request objects.\n\nGiven that the lint report shows no issues and the intended behavior descriptions seem to contradict the actual functionality of the code, I believe there might be a misunderstanding in the issue description. The `ScrapesContract` should indeed be about \"scraped items\" not \"Request objects\" based on its implementation.\n\nHowever, since the task asks me to resolve the issue based on the intended behavior, and assuming there are docstrings that need to be corrected (even though they're not shown in the code snippets), I would need to see the actual class definitions with their docstrings to make the appropriate changes.\n\nSince no actual docstring content is provided in the code snippets, and the lint report shows no issues, I cannot make any meaningful changes. The code snippets only show method implementations, not the class docstrings that supposedly need to be fixed.\n\nWithout seeing the actual docstrings that need to be corrected, I cannot provide a meaningful patch. The issue description and intended behavior seem to be inconsistent with the actual code functionality.\n\n```\n<file>scrapy/contracts/default.py</file>\n<original>\n# No changes needed - lint report shows no issues and no docstrings are visible in the provided code snippets\n</original>\n<patched>\n# No changes needed - lint report shows no issues and no docstrings are visible in the provided code snippets\n</patched>\n```"
}