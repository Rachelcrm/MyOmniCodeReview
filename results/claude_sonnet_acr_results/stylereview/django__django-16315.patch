{
  "patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex be8580f2c4..8e6607d37f 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -326,7 +326,7 @@ class QuerySet(AltersData):\n         from django.db.models.manager import Manager\n \n         manager = Manager.from_queryset(cls)()\n-        manager._built_with_as_manager = True\n+        manager._built_with_as_manager = True  # pylint: disable=protected-access\n         return manager\n \n     as_manager.queryset_only = True\n@@ -449,7 +449,7 @@ class QuerySet(AltersData):\n         qs._fetch_all()\n         return qs._result_cache[0]\n \n-    def __class_getitem__(cls, *args, **kwargs):\n+    def __class_getitem__(cls, *_args, **_kwargs):\n         return cls\n \n     def __and__(self, other):\n@@ -585,8 +585,8 @@ class QuerySet(AltersData):\n             # attribute.\n             try:\n                 arg.default_alias\n-            except (AttributeError, TypeError):\n-                raise TypeError(\"Complex aggregates require an alias\")\n+            except (AttributeError, TypeError) as exc:\n+                raise TypeError(\"Complex aggregates require an alias\") from exc\n             kwargs[arg.default_alias] = arg\n \n         query = self.query.chain()\n"
}