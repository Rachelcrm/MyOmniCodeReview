{
  "patch": "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py\nindex ac97f13161..3646b3ca76 100644\n--- a/django/core/management/commands/loaddata.py\n+++ b/django/core/management/commands/loaddata.py\n@@ -48,6 +48,22 @@ class Command(BaseCommand):\n         \"one fixture in the command line.\"\n     )\n \n+    def __init__(self, *args, **kwargs):\n+        super().__init__(*args, **kwargs)\n+        self.ignore = False\n+        self.using = None\n+        self.app_label = None\n+        self.verbosity = 1\n+        self.excluded_models = set()\n+        self.excluded_apps = set()\n+        self.format = None\n+        self.fixture_count = 0\n+        self.loaded_object_count = 0\n+        self.fixture_object_count = 0\n+        self.models = set()\n+        self.serialization_formats = None\n+        self.objs_with_deferred_fields = []\n+\n     def add_arguments(self, parser):\n         parser.add_argument(\n             \"args\", metavar=\"fixture\", nargs=\"+\", help=\"Fixture labels.\"\n@@ -311,7 +327,7 @@ class Command(BaseCommand):\n                 fixture_files_in_dir.append((candidate, fixture_dir, fixture_name))\n         return fixture_files_in_dir\n \n-    @functools.lru_cache(maxsize=None)\n+    @functools.lru_cache(maxsize=128)\n     def find_fixtures(self, fixture_label):\n         \"\"\"Find fixture files for a given label.\"\"\"\n         if fixture_label == READ_STDIN:\n@@ -424,7 +440,7 @@ class SingleZipReader(zipfile.ZipFile):\n         if len(self.namelist()) != 1:\n             raise ValueError(\"Zip-compressed fixtures must contain one file.\")\n \n-    def read(self):\n+    def read(self, name=None, pwd=None):\n         return zipfile.ZipFile.read(self, self.namelist()[0])\n \n \n"
}