{
  "patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex a023e4ec..9f8a36a1 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -9,7 +9,10 @@ requests (cookies, auth, proxies).\n \n \"\"\"\n import os\n-from collections import Mapping\n+try:\n+    from collections.abc import Mapping\n+except ImportError:\n+    from collections import Mapping\n from datetime import datetime\n \n from .compat import cookielib, OrderedDict, urljoin, urlparse, builtin_str\n@@ -88,7 +91,7 @@ class SessionRedirectMixin(object):\n         while resp.is_redirect:\n             prepared_request = req.copy()\n \n-            resp.content  # Consume socket so it can be released\n+            _ = resp.content  # Consume socket so it can be released\n \n             if i >= self.max_redirects:\n                 raise TooManyRedirects('Exceeded %s redirects.' % self.max_redirects)\n@@ -396,7 +399,7 @@ class Session(SessionRedirectMixin):\n         \"\"\"Sends a GET request. Returns :class:`Response` object.\n \n         :param url: URL for the new :class:`Request` object.\n-        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n+        :param \\\\*\\\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         kwargs.setdefault('allow_redirects', True)\n@@ -406,7 +409,7 @@ class Session(SessionRedirectMixin):\n         \"\"\"Sends a OPTIONS request. Returns :class:`Response` object.\n \n         :param url: URL for the new :class:`Request` object.\n-        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n+        :param \\\\*\\\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         kwargs.setdefault('allow_redirects', True)\n@@ -416,7 +419,7 @@ class Session(SessionRedirectMixin):\n         \"\"\"Sends a HEAD request. Returns :class:`Response` object.\n \n         :param url: URL for the new :class:`Request` object.\n-        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n+        :param \\\\*\\\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         kwargs.setdefault('allow_redirects', False)\n@@ -427,7 +430,7 @@ class Session(SessionRedirectMixin):\n \n         :param url: URL for the new :class:`Request` object.\n         :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.\n-        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n+        :param \\\\*\\\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         return self.request('POST', url, data=data, **kwargs)\n@@ -437,7 +440,7 @@ class Session(SessionRedirectMixin):\n \n         :param url: URL for the new :class:`Request` object.\n         :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.\n-        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n+        :param \\\\*\\\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         return self.request('PUT', url, data=data, **kwargs)\n@@ -447,7 +450,7 @@ class Session(SessionRedirectMixin):\n \n         :param url: URL for the new :class:`Request` object.\n         :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.\n-        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n+        :param \\\\*\\\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         return self.request('PATCH', url,  data=data, **kwargs)\n@@ -456,7 +459,7 @@ class Session(SessionRedirectMixin):\n         \"\"\"Sends a DELETE request. Returns :class:`Response` object.\n \n         :param url: URL for the new :class:`Request` object.\n-        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n+        :param \\\\*\\\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         return self.request('DELETE', url, **kwargs)\n"
}