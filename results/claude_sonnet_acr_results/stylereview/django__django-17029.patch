{
  "patch": "diff --git a/django/apps/registry.py b/django/apps/registry.py\nindex 0683f3ad3c..ca2957f5ca 100644\n--- a/django/apps/registry.py\n+++ b/django/apps/registry.py\n@@ -134,7 +134,7 @@ class Apps:\n             # If \"not ready\" is due to unconfigured settings, accessing\n             # INSTALLED_APPS raises a more helpful ImproperlyConfigured\n             # exception.\n-            settings.INSTALLED_APPS\n+            _ = settings.INSTALLED_APPS\n             raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\n \n     def check_models_ready(self):\n@@ -156,16 +156,16 @@ class Apps:\n         self.check_apps_ready()\n         try:\n             return self.app_configs[app_label]\n-        except KeyError:\n+        except KeyError as exc:\n             message = \"No installed app with label '%s'.\" % app_label\n             for app_config in self.get_app_configs():\n                 if app_config.name == app_label:\n                     message += \" Did you mean '%s'?\" % app_config.label\n                     break\n-            raise LookupError(message)\n+            raise LookupError(message) from exc\n \n     # This method is performance-critical at least for Django's test suite.\n-    @functools.cache\n+    @functools.lru_cache(maxsize=256)\n     def get_models(self, include_auto_created=False, include_swapped=False):\n         \"\"\"\n         Return a list of all installed models.\n@@ -280,7 +280,7 @@ class Apps:\n             raise LookupError(\"Model '%s.%s' not registered.\" % (app_label, model_name))\n         return model\n \n-    @functools.cache\n+    @functools.lru_cache(maxsize=128)\n     def get_swappable_settings_name(self, to_string):\n         \"\"\"\n         For a given model string (e.g. \"auth.User\"), return the name of the\n"
}