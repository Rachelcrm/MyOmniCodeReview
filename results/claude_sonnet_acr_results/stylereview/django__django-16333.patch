{
  "patch": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex d73d1c8495..db4c4c287e 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -110,8 +110,8 @@ class UserCreationForm(forms.ModelForm):\n \n     def __init__(self, *args, **kwargs):\n         super().__init__(*args, **kwargs)\n-        if self._meta.model.USERNAME_FIELD in self.fields:\n-            self.fields[self._meta.model.USERNAME_FIELD].widget.attrs[\n+        if self.__class__._meta.model.USERNAME_FIELD in self.fields:\n+            self.fields[self.__class__._meta.model.USERNAME_FIELD].widget.attrs[\n                 \"autofocus\"\n             ] = True\n \n@@ -194,7 +194,7 @@ class AuthenticationForm(forms.Form):\n         \"inactive\": _(\"This account is inactive.\"),\n     }\n \n-    def __init__(self, request=None, *args, **kwargs):\n+    def __init__(self, *args, request=None, **kwargs):\n         \"\"\"\n         The 'request' parameter is set for custom auth use by subclasses.\n         The form data comes in via the standard 'data' kwarg.\n@@ -293,7 +293,7 @@ class PasswordResetForm(forms.Form):\n         resetting their password.\n         \"\"\"\n         email_field_name = UserModel.get_email_field_name()\n-        active_users = UserModel._default_manager.filter(\n+        active_users = UserModel._default_manager.filter(  # pylint: disable=protected-access\n             **{\n                 \"%s__iexact\" % email_field_name: email,\n                 \"is_active\": True,\n@@ -479,7 +479,7 @@ class AdminPasswordChangeForm(forms.Form):\n         return self.user\n \n     @property\n-    def changed_data(self):\n+    def changed_data(self):  # pylint: disable=invalid-overridden-method\n         data = super().changed_data\n         for name in self.fields:\n             if name not in data:\n"
}