{"model_name_or_path": "sweagent_outputs", "instance_id": "scikit-learn__scikit-learn-12585", "model_patch": "\r\ndiff --git a/reproduce_clone_issue.py b/reproduce_clone_issue.py\r\nnew file mode 100644\r\nindex 0000000..e753e1d\r\n--- /dev/null\r\n+++ b/reproduce_clone_issue.py\r\n@@ -0,0 +1,9 @@\r\n+\r\n+from sklearn.preprocessing import StandardScaler\r\n+from sklearn.base import clone\r\n+\r\n+try:\r\n+    clone(StandardScaler(with_mean=StandardScaler))\r\n+    print(\"Script completed successfully, no errors.\")\r\n+except Exception as e:\r\n+    print(\"Error:\", e)\r\n\\ No newline at end of file\r\ndiff --git a/sklearn/base.py b/sklearn/base.py\r\nindex 56ffb18..3499827 100644\r\n--- a/sklearn/base.py\r\n+++ b/sklearn/base.py\r\n@@ -48,7 +48,7 @@ def clone(estimator, safe=True):\r\n     # XXX: not handling dictionaries\r\n     if estimator_type in (list, tuple, set, frozenset):\r\n         return estimator_type([clone(e, safe=safe) for e in estimator])\r\n-    elif not hasattr(estimator, 'get_params'):\r\n+    elif not hasattr(estimator, 'get_params') or isinstance(estimator, type):\r\n         if not safe:\r\n             return copy.deepcopy(estimator)\r\n         else:\r\ndiff --git a/sklearn/tests/test_base.py b/sklearn/tests/test_base.py\r\nindex ebcb389..1e465ef 100644\r\n--- a/sklearn/tests/test_base.py\r\n+++ b/sklearn/tests/test_base.py\r\n@@ -442,3 +442,13 @@ def test_pickling_works_when_getstate_is_overwritten_in_the_child_class():\r\n     estimator_restored = pickle.loads(serialized)\r\n     assert_equal(estimator_restored.attribute_pickled, 5)\r\n     assert_equal(estimator_restored._attribute_not_pickled, None)\r\n+\r\n+def test_clone_with_estimator_class():\r\n+    from sklearn.preprocessing import StandardScaler\r\n+    from sklearn.base import clone\r\n+\r\n+    try:\r\n+        clone(StandardScaler(with_mean=StandardScaler))\r\n+        print(\"Test passed: clone works with estimator class as parameter.\")\r\n+    except Exception as e:\r\n+        print(\"Test failed:\", e)\r\n\\ No newline at end of file\r\n"}