{"model_name_or_path": "sweagent_review_fix_outputs", "instance_id": "astropy__astropy-13579", "model_patch": "\r\ndiff --git a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py\r\nindex d7605b0..e6f1919 100644\r\n--- a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py\r\n+++ b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py\r\n@@ -251,7 +251,8 @@ class SlicedLowLevelWCS(BaseWCSWrapper):\r\n                 iworld_curr += 1\r\n                 world_arrays_new.append(world_arrays[iworld_curr])\r\n             else:\r\n-                world_arrays_new.append(1.)\r\n+                sliced_out_world_coords = self._pixel_to_world_values_all(*[0]*len(self._pixel_keep))\r\n+                world_arrays_new.append(sliced_out_world_coords[iworld])\r\n \r\n         world_arrays_new = np.broadcast_arrays(*world_arrays_new)\r\n         pixel_arrays = list(self._wcs.world_to_pixel_values(*world_arrays_new))\r\ndiff --git a/test_reproduction.py b/test_reproduction.py\r\nnew file mode 100644\r\nindex 0000000..3ec110e\r\n--- /dev/null\r\n+++ b/test_reproduction.py\r\n@@ -0,0 +1,46 @@\r\n+\r\n+import numpy as np\r\n+import astropy.wcs\r\n+from astropy.coordinates import SkyCoord\r\n+import astropy.units as u\r\n+\r\n+nx = 100\r\n+ny = 25\r\n+nz = 2\r\n+wcs_header = {\r\n+    'WCSAXES': 3,\r\n+    'CRPIX1': (nx + 1)/2,\r\n+    'CRPIX2': (ny + 1)/2,\r\n+    'CRPIX3': 1.0,\r\n+    'PC1_1': 0.0,\r\n+    'PC1_2': -1.0,\r\n+    'PC1_3': 0.0,\r\n+    'PC2_1': 1.0,\r\n+    'PC2_2': 0.0,\r\n+    'PC2_3': -1.0,\r\n+    'CDELT1': 5,\r\n+    'CDELT2': 5,\r\n+    'CDELT3': 0.055,\r\n+    'CUNIT1': 'arcsec',\r\n+    'CUNIT2': 'arcsec',\r\n+    'CUNIT3': 'Angstrom',\r\n+    'CTYPE1': 'HPLN-TAN',\r\n+    'CTYPE2': 'HPLT-TAN',\r\n+    'CTYPE3': 'WAVE',\r\n+    'CRVAL1': 0.0,\r\n+    'CRVAL2': 0.0,\r\n+    'CRVAL3': 1.05,\r\n+\r\n+}\r\n+fits_wcs = astropy.wcs.WCS(header=wcs_header)\r\n+\r\n+# Perform world_to_pixel on the unsliced WCS\r\n+pt = SkyCoord(Tx=0*u.arcsec, Ty=0*u.arcsec, frame=astropy.wcs.utils.wcs_to_celestial_frame(fits_wcs))\r\n+print(fits_wcs.world_to_pixel(pt, 1.05*u.angstrom))\r\n+\r\n+# Perform world_to_pixel on the sliced WCS\r\n+ll_sliced_wcs = astropy.wcs.wcsapi.SlicedLowLevelWCS(fits_wcs, 0)\r\n+hl_sliced_wcs = astropy.wcs.wcsapi.HighLevelWCSWrapper(ll_sliced_wcs)\r\n+print(hl_sliced_wcs.world_to_pixel(pt))\r\n+\r\n+print(\"Script completed successfully, no errors.\")\r\n\\ No newline at end of file\r\n"}