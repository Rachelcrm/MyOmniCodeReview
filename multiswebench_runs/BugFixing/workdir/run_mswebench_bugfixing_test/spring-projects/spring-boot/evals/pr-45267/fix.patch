diff --git a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java
index 964298fe567c..61217687e4e3 100644
--- a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java
+++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2012-2023 the original author or authors.
+ * Copyright 2012-2025 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -21,6 +21,7 @@
 
 import org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty;
 import org.springframework.boot.configurationmetadata.ConfigurationMetadataRepository;
+import org.springframework.boot.configurationmetadata.Deprecation;
 
 /**
  * A changelog containing differences computed from two repositories of configuration
@@ -32,6 +33,7 @@
  * @author Stephane Nicoll
  * @author Andy Wilkinson
  * @author Phillip Webb
+ * @author Yoobin Yoon
  */
 record Changelog(String oldVersionNumber, String newVersionNumber, List<Difference> differences) {
 
@@ -48,14 +50,24 @@ static List<Difference> computeDifferences(ConfigurationMetadataRepository oldMe
 			String id = oldProperty.getId();
 			seenIds.add(id);
 			ConfigurationMetadataProperty newProperty = newMetadata.getAllProperties().get(id);
-			Difference difference = Difference.compute(oldProperty, newProperty);
-			if (difference != null) {
-				differences.add(difference);
+			if (newProperty == null) {
+				differences.add(new Difference(DifferenceType.DELETED, oldProperty, null));
+			}
+			else {
+				Difference difference = Difference.compute(oldProperty, newProperty);
+				if (difference != null) {
+					differences.add(difference);
+				}
 			}
 		}
 		for (ConfigurationMetadataProperty newProperty : newMetadata.getAllProperties().values()) {
-			if ((!seenIds.contains(newProperty.getId())) && (!newProperty.isDeprecated())) {
-				differences.add(new Difference(DifferenceType.ADDED, null, newProperty));
+			if (!seenIds.contains(newProperty.getId())) {
+				if (newProperty.isDeprecated() && newProperty.getDeprecation().getLevel() == Deprecation.Level.ERROR) {
+					differences.add(new Difference(DifferenceType.DELETED, null, newProperty));
+				}
+				else if (!newProperty.isDeprecated()) {
+					differences.add(new Difference(DifferenceType.ADDED, null, newProperty));
+				}
 			}
 		}
 		return List.copyOf(differences);
