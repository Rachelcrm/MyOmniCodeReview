{"org": "spring-projects", "repo": "spring-boot", "number": 45267, "fix_patch": "diff --git a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java\nindex 964298fe567c..61217687e4e3 100644\n--- a/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java\n+++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata-changelog-generator/src/main/java/org/springframework/boot/configurationmetadata/changelog/Changelog.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2023 the original author or authors.\n+ * Copyright 2012-2025 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -21,6 +21,7 @@\n \n import org.springframework.boot.configurationmetadata.ConfigurationMetadataProperty;\n import org.springframework.boot.configurationmetadata.ConfigurationMetadataRepository;\n+import org.springframework.boot.configurationmetadata.Deprecation;\n \n /**\n  * A changelog containing differences computed from two repositories of configuration\n@@ -32,6 +33,7 @@\n  * @author Stephane Nicoll\n  * @author Andy Wilkinson\n  * @author Phillip Webb\n+ * @author Yoobin Yoon\n  */\n record Changelog(String oldVersionNumber, String newVersionNumber, List<Difference> differences) {\n \n@@ -48,14 +50,24 @@ static List<Difference> computeDifferences(ConfigurationMetadataRepository oldMe\n \t\t\tString id = oldProperty.getId();\n \t\t\tseenIds.add(id);\n \t\t\tConfigurationMetadataProperty newProperty = newMetadata.getAllProperties().get(id);\n-\t\t\tDifference difference = Difference.compute(oldProperty, newProperty);\n-\t\t\tif (difference != null) {\n-\t\t\t\tdifferences.add(difference);\n+\t\t\tif (newProperty == null) {\n+\t\t\t\tdifferences.add(new Difference(DifferenceType.DELETED, oldProperty, null));\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tDifference difference = Difference.compute(oldProperty, newProperty);\n+\t\t\t\tif (difference != null) {\n+\t\t\t\t\tdifferences.add(difference);\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t\tfor (ConfigurationMetadataProperty newProperty : newMetadata.getAllProperties().values()) {\n-\t\t\tif ((!seenIds.contains(newProperty.getId())) && (!newProperty.isDeprecated())) {\n-\t\t\t\tdifferences.add(new Difference(DifferenceType.ADDED, null, newProperty));\n+\t\t\tif (!seenIds.contains(newProperty.getId())) {\n+\t\t\t\tif (newProperty.isDeprecated() && newProperty.getDeprecation().getLevel() == Deprecation.Level.ERROR) {\n+\t\t\t\t\tdifferences.add(new Difference(DifferenceType.DELETED, null, newProperty));\n+\t\t\t\t}\n+\t\t\t\telse if (!newProperty.isDeprecated()) {\n+\t\t\t\t\tdifferences.add(new Difference(DifferenceType.ADDED, null, newProperty));\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn List.copyOf(differences);\n"}
