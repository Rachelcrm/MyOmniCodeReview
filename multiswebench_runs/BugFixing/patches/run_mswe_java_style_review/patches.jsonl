{"org": "apache", "repo": "dubbo", "number": 10638, "fix_patch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/CompatibleTypeUtils.java b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/CompatibleTypeUtils.java\nindex dc113e1ae8b..a57f53f82ae 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/CompatibleTypeUtils.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/CompatibleTypeUtils.java\n@@ -23,6 +23,7 @@\n import java.text.SimpleDateFormat;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n+import java.time.LocalTime;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Date;\n@@ -34,6 +35,11 @@ public class CompatibleTypeUtils {\n \n     private static final String DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss\";\n \n+    /**\n+     * the text to parse such as \"2007-12-03T10:15:30\"\n+     */\n+    private static final int ISO_LOCAL_DATE_TIME_MIN_LEN = 19;\n+\n     private CompatibleTypeUtils() {\n     }\n \n@@ -128,7 +134,12 @@ public static Object compatibleTypeConvert(Object value, Class<?> type) {\n                 if (StringUtils.isEmpty(string)) {\n                     return null;\n                 }\n-                return LocalDateTime.parse(string).toLocalTime();\n+                \n+                if (string.length() >= ISO_LOCAL_DATE_TIME_MIN_LEN) {\n+                    return LocalDateTime.parse(string).toLocalTime();\n+                } else {\n+                    return LocalTime.parse(string);\n+                }\n             }\n             if (type == Class.class) {\n                 try {\ndiff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/PojoUtils.java b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/PojoUtils.java\nindex c6e2eaeb7cf..b8abfa65330 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/PojoUtils.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/PojoUtils.java\n@@ -33,6 +33,9 @@\n import java.lang.reflect.Type;\n import java.lang.reflect.TypeVariable;\n import java.lang.reflect.WildcardType;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -141,6 +144,10 @@ private static Object generalize(Object pojo, Map<Object, Object> history) {\n         if (ReflectUtils.isPrimitives(pojo.getClass())) {\n             return pojo;\n         }\n+        \n+        if (pojo instanceof LocalDate || pojo instanceof LocalDateTime || pojo instanceof LocalTime) {\n+            return pojo.toString();\n+        }\n \n         if (pojo instanceof Class) {\n             return ((Class) pojo).getName();\n"}
